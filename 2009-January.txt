From grumbel at mail.berlios.de  Tue Jan 27 12:03:25 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 27 Jan 2009 12:03:25 +0100
Subject: [Feuerkraft-commit] r341 - in trunk: . src src/scripting
Message-ID: <200901271103.n0RB3Pt7004052@sheep.berlios.de>

Author: grumbel
Date: 2009-01-27 12:03:25 +0100 (Tue, 27 Jan 2009)
New Revision: 341

Modified:
   trunk/configure.ac
   trunk/src/game_world_data.cxx
   trunk/src/ipc.cxx
   trunk/src/scripting/debug_commands.cxx
   trunk/src/system.cxx
   trunk/src/trigger_manager.hxx
Log:
Making things compilable again

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2005-02-12 03:32:49 UTC (rev 340)
+++ trunk/configure.ac	2009-01-27 11:03:25 UTC (rev 341)
@@ -45,17 +45,17 @@
 dnl FIXME: this is a hack for my local machine...
 LIBS="$LIBS -L/usr/X11R6/lib/ -lXxf86vm"
 
-REQUIRED_CLANLIB_VERSION="0.7.4"
+REQUIRED_CLANLIB_VERSION="0.8.0"
 
 PKG_CHECK_MODULES(FEUERKRAFT_DEPS,
  [
-  clanCore-0.7    >= $REQUIRED_CLANLIB_VERSION
-  clanApp-0.7     >= $REQUIRED_CLANLIB_VERSION
-  clanDisplay-0.7 >= $REQUIRED_CLANLIB_VERSION
-  clanGL-0.7      >= $REQUIRED_CLANLIB_VERSION
-  clanSound-0.7   >= $REQUIRED_CLANLIB_VERSION
-  clanMikMod-0.7  >= $REQUIRED_CLANLIB_VERSION
-  clanVorbis-0.7  >= $REQUIRED_CLANLIB_VERSION
+  clanCore-0.8    >= $REQUIRED_CLANLIB_VERSION
+  clanApp-0.8     >= $REQUIRED_CLANLIB_VERSION
+  clanDisplay-0.8 >= $REQUIRED_CLANLIB_VERSION
+  clanGL-0.8      >= $REQUIRED_CLANLIB_VERSION
+  clanSound-0.8   >= $REQUIRED_CLANLIB_VERSION
+  clanMikMod-0.8  >= $REQUIRED_CLANLIB_VERSION
+  clanVorbis-0.8  >= $REQUIRED_CLANLIB_VERSION
   ],
  [CXXFLAGS="$CXXFLAGS $FEUERKRAFT_DEPS_CFLAGS"
   LIBS="$LIBS $FEUERKRAFT_DEPS_LIBS"])

Modified: trunk/src/game_world_data.cxx
===================================================================
--- trunk/src/game_world_data.cxx	2005-02-12 03:32:49 UTC (rev 340)
+++ trunk/src/game_world_data.cxx	2009-01-27 11:03:25 UTC (rev 341)
@@ -17,6 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
+#include <typeinfo>
 #include <assert.h>
 #include <iostream>
 #include "guile.hxx"

Modified: trunk/src/ipc.cxx
===================================================================
--- trunk/src/ipc.cxx	2005-02-12 03:32:49 UTC (rev 340)
+++ trunk/src/ipc.cxx	2009-01-27 11:03:25 UTC (rev 341)
@@ -23,6 +23,8 @@
 #include <unistd.h>
 #include <sys/types.h>
 #include <fcntl.h>
+#include <errno.h>
+#include <string.h>
 #include <sys/stat.h>
 
 #include "ipc.hxx"

Modified: trunk/src/scripting/debug_commands.cxx
===================================================================
--- trunk/src/scripting/debug_commands.cxx	2005-02-12 03:32:49 UTC (rev 340)
+++ trunk/src/scripting/debug_commands.cxx	2009-01-27 11:03:25 UTC (rev 341)
@@ -17,6 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
+#include <string.h>
 #include <stdexcept>
 #include <iostream>
 #include "../globals.hxx"

Modified: trunk/src/system.cxx
===================================================================
--- trunk/src/system.cxx	2005-02-12 03:32:49 UTC (rev 340)
+++ trunk/src/system.cxx	2009-01-27 11:03:25 UTC (rev 341)
@@ -32,6 +32,8 @@
 #  include <direct.h>
 #endif
 
+#include <stdlib.h>
+#include <string.h>
 #include <cstdio>
 #include <iostream>
 #include <ClanLib/Core/System/clanstring.h>

Modified: trunk/src/trigger_manager.hxx
===================================================================
--- trunk/src/trigger_manager.hxx	2005-02-12 03:32:49 UTC (rev 340)
+++ trunk/src/trigger_manager.hxx	2009-01-27 11:03:25 UTC (rev 341)
@@ -70,8 +70,8 @@
       seconds -= delta;
       if (seconds < 0)
         {
-          func();
-          remove();
+          this->func();
+          this->remove();
         }
     }
   };// struct TimedTrigger
@@ -97,8 +97,8 @@
         {
           if (int(unit->get_pos().x/40) == x && int(unit->get_pos().y/40) == y)
             {
-              func(SCM_MAKINUM(unit->get_id()));
-              remove();
+              this->func(SCM_MAKINUM(unit->get_id()));
+              this->remove();
             }
         }
     }



From grumbel at mail.berlios.de  Tue Jan 27 12:06:02 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 27 Jan 2009 12:06:02 +0100
Subject: [Feuerkraft-commit] r342 - in trunk/src: . display
Message-ID: <200901271106.n0RB628Z004304@sheep.berlios.de>

Author: grumbel
Date: 2009-01-27 12:06:02 +0100 (Tue, 27 Jan 2009)
New Revision: 342

Added:
   trunk/src/display/
   trunk/src/display/drawing_context.cxx
   trunk/src/display/drawing_context.hxx
   trunk/src/display/drawing_request.hxx
   trunk/src/display/scene_context.cxx
   trunk/src/display/scene_context.hxx
Modified:
   trunk/src/
Log:
Replaced svn:external with hard copy


Property changes on: trunk/src
___________________________________________________________________
Name: svn:externals
   - display svn://svn.berlios.de/windstille/trunk/src/display/

   + 


Added: trunk/src/display/drawing_context.cxx
===================================================================
--- trunk/src/display/drawing_context.cxx	2009-01-27 11:03:25 UTC (rev 341)
+++ trunk/src/display/drawing_context.cxx	2009-01-27 11:06:02 UTC (rev 342)
@@ -0,0 +1,220 @@
+//  $Id$
+//
+//  Pingus - A free Lemmings clone
+//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
+//
+//  This program is free software; you can redistribute it and/or
+//  modify it under the terms of the GNU General Public License
+//  as published by the Free Software Foundation; either version 2
+//  of the License, or (at your option) any later version.
+//
+//  This program is distributed in the hope that it will be useful,
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+//  GNU General Public License for more details.
+//
+//  You should have received a copy of the GNU General Public License
+//  along with this program; if not, write to the Free Software
+//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+#include <assert.h>
+#include <ClanLib/Display/sprite.h>
+#include <ClanLib/Display/graphic_context.h>
+#include <iostream>
+#include "drawing_context.hxx"
+
+struct DrawingRequestsSorter
+{
+  bool operator()(DrawingRequest* a, DrawingRequest* b) {
+    return a->get_z_pos() < b->get_z_pos();
+  }
+};
+
+class FillScreenDrawingRequest : public DrawingRequest
+{
+private:
+  CL_Color color;
+public:
+  FillScreenDrawingRequest(const CL_Color& color_) 
+    : DrawingRequest(CL_Vector(0, 0, -1000.0f)), color(color_)
+  {
+  }
+  virtual ~FillScreenDrawingRequest() {}
+
+  void draw(CL_GraphicContext* gc) {
+    gc->clear(color);
+  }
+};
+
+class SpriteDrawingRequest : public DrawingRequest
+{
+private:
+  CL_Sprite sprite;
+
+public:
+  SpriteDrawingRequest(const CL_Sprite& sprite_, const CL_Vector& pos_)
+    : DrawingRequest(pos_),
+      sprite(sprite_)
+  {}
+  virtual ~SpriteDrawingRequest() {}
+
+  void draw(CL_GraphicContext* gc) {
+    sprite.draw(static_cast<int>(pos.x), static_cast<int>(pos.y), gc);
+  }
+};
+
+class TextDrawingRequest : public DrawingRequest
+{
+private:
+  std::string text;
+public:
+  TextDrawingRequest(const std::string& text_, const CL_Vector& pos_)
+    : DrawingRequest(pos_),
+      text(text_)
+  {}
+  virtual ~TextDrawingRequest() {}
+
+  void draw(CL_GraphicContext* gc) {
+    // FIXME: not implemented
+  }
+};
+
+DrawingContext::DrawingContext()
+{
+  translate_stack.push_back(CL_Pointf(0, 0));
+}
+
+void
+DrawingContext::render(CL_GraphicContext* gc)
+{
+  std::stable_sort(drawingrequests.begin(), drawingrequests.end(), DrawingRequestsSorter());
+  
+  for(DrawingRequests::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
+    {
+      (*i)->draw(gc);
+    }
+}
+
+void
+DrawingContext::clear()
+{
+  for(DrawingRequests::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
+    {
+      delete *i;
+    }
+  drawingrequests.clear();
+}
+
+void
+DrawingContext::draw(DrawingRequest* request)
+{
+  drawingrequests.push_back(request);
+}
+
+void
+DrawingContext::draw(const CL_Sprite&   sprite,  float x, float y, float z)
+{ // FIXME: This should get flattend down to a simple texture draw
+  // command for easier sorting after texture-id/alpha
+  draw(new SpriteDrawingRequest(sprite, CL_Vector(translate_stack.back().x + x,
+                                                  translate_stack.back().y + y,
+                                                  z)));
+}
+
+void
+DrawingContext::draw(const std::string& text,    float x, float y, float z)
+{ 
+  draw(new TextDrawingRequest(text, CL_Vector(x, y, z)));
+}
+
+void
+DrawingContext::draw_line (float x1, float y1, float x2, float y2, 
+                           const CL_Color& color)
+{
+}
+
+void
+DrawingContext::draw_fillrect (float x1, float y1, float x2, float y2, 
+		      const CL_Color& color)
+{
+}
+
+void
+DrawingContext::draw_rect (float x1, float y1, float x2, float y2, 
+		  const CL_Color& color)
+{
+}
+
+void
+DrawingContext::draw_pixel (float x_pos, float y_pos, 
+		   const CL_Color& color)
+{
+}
+
+void
+DrawingContext::draw_circle (float x_pos, float y_pos, float radius,
+                             const CL_Color& color)
+{
+}
+
+/** Draws an arc, starting from angle_start to angle_end in
+      counterclockwise direction. Angles are taken in radian */
+void
+DrawingContext::draw_arc (float x_pos, float y_pos, float radius, float angle_start, float angle_end,
+                          const CL_Color& color)
+{
+}
+
+void
+DrawingContext::fill_screen(const CL_Color& color)
+{
+  draw(new FillScreenDrawingRequest(color));
+}
+
+void
+DrawingContext::rotate(float angel)
+{
+  // FIXME: not implemented
+}
+
+void
+DrawingContext::scale(float x, float y)
+{
+  // FIXME: not implemented
+}
+
+void
+DrawingContext::translate(float x, float y)
+{
+  translate_stack.back().x += x;
+  translate_stack.back().y += y;
+}
+
+void
+DrawingContext::push_modelview()
+{
+  translate_stack.push_back(translate_stack.back());
+}
+
+void
+DrawingContext::pop_modelview()
+{
+  translate_stack.pop_back();
+  assert(!translate_stack.empty());
+}
+
+void
+DrawingContext::reset_modelview()
+{
+  translate_stack.clear();
+  translate_stack.push_back(CL_Pointf(0, 0));
+}
+
+CL_Rect
+DrawingContext::get_clip_rect()
+{
+  return CL_Rect(CL_Point(static_cast<int>(translate_stack.back().x),
+                          static_cast<int>(translate_stack.back().y)),
+                 CL_Size(800, 600));
+}
+
+/* EOF */


Property changes on: trunk/src/display/drawing_context.cxx
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/src/display/drawing_context.hxx
===================================================================
--- trunk/src/display/drawing_context.hxx	2009-01-27 11:03:25 UTC (rev 341)
+++ trunk/src/display/drawing_context.hxx	2009-01-27 11:06:02 UTC (rev 342)
@@ -0,0 +1,102 @@
+//  $Id$
+// 
+//  Pingus - A free Lemmings clone
+//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
+//
+//  This program is free software; you can redistribute it and/or
+//  modify it under the terms of the GNU General Public License
+//  as published by the Free Software Foundation; either version 2
+//  of the License, or (at your option) any later version.
+//
+//  This program is distributed in the hope that it will be useful,
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+//  GNU General Public License for more details.
+// 
+//  You should have received a copy of the GNU General Public License
+//  along with this program; if not, write to the Free Software
+//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+#ifndef HEADER_DRAWING_CONTEXT_HXX
+#define HEADER_DRAWING_CONTEXT_HXX
+
+#include <ClanLib/Core/Math/rect.h>
+#include <ClanLib/Display/color.h>
+#include <vector>
+#include "drawing_request.hxx"
+
+class CL_Sprite;
+
+/** The DrawingContext collects all DrawingRequests and allows you to
+    flush them all down to the graphics card in one run, this has the
+    advantage that it is possible to z-sort, texture-id sort or
+    otherwise optimize the drawing. In addition to that it also allows
+    you do render the drawing commands to multiple buffers which might
+    be usefull for post-processing effects and such. */
+class DrawingContext
+{
+private:
+  typedef std::vector<DrawingRequest*> DrawingRequests;
+  DrawingRequests drawingrequests;
+
+  std::vector<CL_Pointf> translate_stack;
+
+public:
+  DrawingContext();
+
+  /** Draws everything in the drawing context to the screen */
+  void render(CL_GraphicContext* gc);
+
+  /** Empties the drawing context */
+  void clear();
+
+  /** Fills the screen with a given color, this is different from
+      clear() in that it doesn't remove other DrawingRequest from the
+      queue */
+  void fill_screen(const CL_Color& color);
+
+  /*{ */
+  void draw(DrawingRequest* request);
+  void draw(const CL_Sprite&   sprite,  float x, float y, float z = 0);
+  void draw(const std::string& text,    float x, float y, float z = 0);
+
+  void draw_line (float x1, float y1, float x2, float y2, 
+		  const CL_Color& color);
+  void draw_fillrect (float x1, float y1, float x2, float y2, 
+		      const CL_Color& color);
+  void draw_rect (float x1, float y1, float x2, float y2, 
+		  const CL_Color& color);
+  void draw_pixel (float x_pos, float y_pos, 
+		   const CL_Color& color);
+  void draw_circle (float x_pos, float y_pos, float radius,
+                    const CL_Color& color);
+
+  /** Draws an arc, starting from angle_start to angle_end in
+      counterclockwise direction. Angles are taken in radian */
+  void draw_arc (float x_pos, float y_pos, float radius, float angle_start, float angle_end,
+                 const CL_Color& color);
+  /*} */
+  
+  /** Translate the drawing context */
+  void translate(float x, float y);
+
+  /** Set the rotation of the drawing context */
+  void rotate(float angel);
+
+  /** Set the scaling of the drawing context */
+  void scale(float x, float y);
+
+  void push_modelview();
+  void pop_modelview();
+  void reset_modelview();
+
+  /** Return the area of the screen that will be visible*/
+  CL_Rect get_clip_rect();
+private:
+  DrawingContext (const DrawingContext&);
+  DrawingContext& operator= (const DrawingContext&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/src/display/drawing_context.hxx
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/src/display/drawing_request.hxx
===================================================================
--- trunk/src/display/drawing_request.hxx	2009-01-27 11:03:25 UTC (rev 341)
+++ trunk/src/display/drawing_request.hxx	2009-01-27 11:06:02 UTC (rev 342)
@@ -0,0 +1,51 @@
+//  $Id$
+// 
+//  Pingus - A free Lemmings clone
+//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
+//
+//  This program is free software; you can redistribute it and/or
+//  modify it under the terms of the GNU General Public License
+//  as published by the Free Software Foundation; either version 2
+//  of the License, or (at your option) any later version.
+//
+//  This program is distributed in the hope that it will be useful,
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+//  GNU General Public License for more details.
+// 
+//  You should have received a copy of the GNU General Public License
+//  along with this program; if not, write to the Free Software
+//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+#ifndef HEADER_DRAWING_REQUEST_HXX
+#define HEADER_DRAWING_REQUEST_HXX
+
+#include <ClanLib/Core/Math/cl_vector.h>
+
+class CL_GraphicContext;
+
+/** 
+ */
+class DrawingRequest
+{
+protected:
+  CL_Vector pos;
+public:
+  DrawingRequest(const CL_Vector& pos_) : pos(pos_) {}
+  
+  virtual void draw(CL_GraphicContext* gc) = 0;
+  
+  /** Returns true if the request contains an alpha channel and needs
+      to be drawn in order */
+  virtual bool has_alpha() { return true; }
+
+  /** Returns the position at which the request should be drawn */
+  virtual float get_z_pos() { return pos.z; }
+private:
+  DrawingRequest (const DrawingRequest&);
+  DrawingRequest& operator= (const DrawingRequest&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/src/display/drawing_request.hxx
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/src/display/scene_context.cxx
===================================================================
--- trunk/src/display/scene_context.cxx	2009-01-27 11:03:25 UTC (rev 341)
+++ trunk/src/display/scene_context.cxx	2009-01-27 11:06:02 UTC (rev 342)
@@ -0,0 +1,149 @@
+//  $Id$
+//
+//  Pingus - A free Lemmings clone
+//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
+//
+//  This program is free software; you can redistribute it and/or
+//  modify it under the terms of the GNU General Public License
+//  as published by the Free Software Foundation; either version 2
+//  of the License, or (at your option) any later version.
+//
+//  This program is distributed in the hope that it will be useful,
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+//  GNU General Public License for more details.
+//
+//  You should have received a copy of the GNU General Public License
+//  along with this program; if not, write to the Free Software
+//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+#include <ClanLib/display.h>
+#include <ClanLib/gl.h>
+#include "scene_context.hxx"
+
+class SceneContextImpl
+{
+public:
+  DrawingContext color;
+  DrawingContext light;
+  DrawingContext highlight; 
+
+  CL_OpenGLSurface lightmap;
+  CL_Canvas        canvas;
+
+  SceneContextImpl() 
+    : lightmap(CL_PixelBuffer(200, 
+                              150,
+                              200*4, CL_PixelFormat::rgba8888)),
+      canvas(lightmap)
+  {
+    canvas.get_gc()->set_scale(0.25, 0.25);
+  }
+};
+
+SceneContext::SceneContext()
+{
+  impl = new SceneContextImpl();
+}
+
+SceneContext::~SceneContext()
+{
+  delete impl;
+}
+
+DrawingContext&
+SceneContext::color()
+{
+  return impl->color; 
+}
+
+DrawingContext&
+SceneContext::light()
+{ 
+  return impl->light; 
+}
+
+DrawingContext&
+SceneContext::highlight()
+{ 
+  return impl->highlight; 
+}
+
+
+/** Translate the drawing context */
+void
+SceneContext::translate(float x, float y)
+{
+  impl->color.translate(x, y);
+  impl->light.translate(x, y);
+  impl->highlight.translate(x, y);
+}
+
+/** Set the rotation of the drawing context */
+void
+SceneContext::rotate(float angel)
+{
+  impl->color.rotate(angel);
+  impl->light.rotate(angel);
+  impl->highlight.rotate(angel);
+}
+
+/** Set the scaling of the drawing context */
+void
+SceneContext::scale(float x, float y)
+{
+  impl->color.scale(x, y);
+  impl->light.scale(x, y);
+  impl->highlight.scale(x, y);
+}
+
+void
+SceneContext::push_modelview()
+{
+  impl->color.push_modelview();
+  impl->light.push_modelview();
+  impl->highlight.push_modelview();
+}
+
+void
+SceneContext::pop_modelview()
+{
+  impl->color.pop_modelview();
+  impl->light.pop_modelview();
+  impl->highlight.pop_modelview();
+}
+
+void
+SceneContext::reset_modelview()
+{
+  impl->color.reset_modelview();
+  impl->light.reset_modelview();
+  impl->highlight.reset_modelview();
+}
+
+void
+SceneContext::render()
+{
+  // Render all buffers
+  // FIXME: Render all to pbuffer for later combining of them
+  impl->color.render(0);
+  
+  impl->light.render(impl->canvas.get_gc());
+  impl->canvas.sync_surface();
+
+  //impl->lightmap.set_blend_func(blend_src_alpha, blend_one);
+  impl->lightmap.set_blend_func(blend_dest_color, blend_zero);
+  //GL_DST_COLOR, GL_ZERO
+  impl->lightmap.set_scale(4.0f, 4.0f);
+  impl->lightmap.draw();
+  impl->canvas.get_gc()->clear();
+
+  impl->highlight.render(0);
+
+  // Clear all DrawingContexts
+  impl->color.clear();
+  impl->light.clear();
+  impl->highlight.clear();
+}
+
+/* EOF */


Property changes on: trunk/src/display/scene_context.cxx
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/src/display/scene_context.hxx
===================================================================
--- trunk/src/display/scene_context.hxx	2009-01-27 11:03:25 UTC (rev 341)
+++ trunk/src/display/scene_context.hxx	2009-01-27 11:06:02 UTC (rev 342)
@@ -0,0 +1,82 @@
+//  $Id$
+// 
+//  Pingus - A free Lemmings clone
+//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
+//
+//  This program is free software; you can redistribute it and/or
+//  modify it under the terms of the GNU General Public License
+//  as published by the Free Software Foundation; either version 2
+//  of the License, or (at your option) any later version.
+//
+//  This program is distributed in the hope that it will be useful,
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+//  GNU General Public License for more details.
+// 
+//  You should have received a copy of the GNU General Public License
+//  along with this program; if not, write to the Free Software
+//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+#ifndef HEADER_SCENE_CONTEXT_HXX
+#define HEADER_SCENE_CONTEXT_HXX
+
+#include "drawing_context.hxx"
+
+class SceneContextImpl;
+
+/** The SceneContext maintains all the different drawing layers to
+    which a game object can draw. Each drawing layer serves a
+    different purporse and all are combined in the end to form the
+    final image. */
+class SceneContext
+{
+public:
+  SceneContext();
+  ~SceneContext();
+  
+  /** The main drawing context, also known as color buffer, to this
+      you draw all normal graphics, sprites and enemies, as you would
+      do with a normal framebuffer */
+  DrawingContext& color();
+
+  /** This is the lightmap, to this you draw all lights, meaning that
+      a color of white will result in a area that is completly
+      visible, while a value of black will mean that the area will be
+      not lighted at all and be completly black. This lightmap is
+      multiplied with the color buffer to get the light effect */
+  DrawingContext& light();
+
+  /** The highlight map is usefull for all objects that are extremly
+      bright so that they generate a lenseflare or a glow. The
+      highlight map doesn't light the scenario itself, but gets
+      additionally rendered above the color and light buffer, thus its
+      allows to add glow without risking to losing it in an area of
+      darkness */
+  DrawingContext& highlight();
+
+  /** Translate the drawing context */
+  void translate(float x, float y);
+
+  /** Set the rotation of the drawing context */
+  void rotate(float angel);
+
+  /** Set the scaling of the drawing context */
+  void scale(float x, float y);
+
+  void push_modelview();
+  void pop_modelview();
+  void reset_modelview();
+
+  /** Takes all the buffers and combines them to form the final image
+      that will be shown on the screen */
+  void render();
+private:
+  SceneContextImpl* impl;
+
+  SceneContext (const SceneContext&);
+  SceneContext& operator= (const SceneContext&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/src/display/scene_context.hxx
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Tue Jan 27 12:19:21 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 27 Jan 2009 12:19:21 +0100
Subject: [Feuerkraft-commit] r345 - in trunk/src: buildings editor generic
	groundmap input particles sound vehicles
Message-ID: <200901271119.n0RBJLw8005465@sheep.berlios.de>

Author: grumbel
Date: 2009-01-27 12:19:20 +0100 (Tue, 27 Jan 2009)
New Revision: 345

Modified:
   trunk/src/buildings/Makefile.am
   trunk/src/editor/Makefile.am
   trunk/src/generic/Makefile.am
   trunk/src/groundmap/Makefile.am
   trunk/src/input/Makefile.am
   trunk/src/particles/Makefile.am
   trunk/src/sound/Makefile.am
   trunk/src/vehicles/Makefile.am
Log:
Changed Makefile.am's - rename for *.?xx to *.?pp

Modified: trunk/src/buildings/Makefile.am
===================================================================
--- trunk/src/buildings/Makefile.am	2009-01-27 11:16:10 UTC (rev 344)
+++ trunk/src/buildings/Makefile.am	2009-01-27 11:19:20 UTC (rev 345)
@@ -1,31 +1,31 @@
 noinst_LIBRARIES = libfeuerkraft_buildings.a
 
 libfeuerkraft_buildings_a_SOURCES = \
-ammotent.cxx \
-ammotent.hxx \
-building.hxx \
-building.cxx \
-building_map.cxx \
-building_map.hxx \
-building_manager.cxx \
-building_manager.hxx \
-building_map_data.cxx \
-building_map_data.hxx \
-building_type_manager.hxx \
-building_type_manager.cxx \
-fuelstation.cxx \
-fuelstation.hxx \
-custom_building.hxx \
-custom_building.cxx \
-headquarter.cxx \
-headquarter.hxx \
-tower_ai.cxx \
-tower_ai.hxx \
-tower.cxx \
-tower.hxx \
-wall.cxx \
-wall.hxx \
-wall_door.cxx \
-wall_door.hxx
+ammotent.cpp \
+ammotent.hpp \
+building.hpp \
+building.cpp \
+building_map.cpp \
+building_map.hpp \
+building_manager.cpp \
+building_manager.hpp \
+building_map_data.cpp \
+building_map_data.hpp \
+building_type_manager.hpp \
+building_type_manager.cpp \
+fuelstation.cpp \
+fuelstation.hpp \
+custom_building.hpp \
+custom_building.cpp \
+headquarter.cpp \
+headquarter.hpp \
+tower_ai.cpp \
+tower_ai.hpp \
+tower.cpp \
+tower.hpp \
+wall.cpp \
+wall.hpp \
+wall_door.cpp \
+wall_door.hpp
 
 # EOF #
\ No newline at end of file

Modified: trunk/src/editor/Makefile.am
===================================================================
--- trunk/src/editor/Makefile.am	2009-01-27 11:16:10 UTC (rev 344)
+++ trunk/src/editor/Makefile.am	2009-01-27 11:19:20 UTC (rev 345)
@@ -19,6 +19,6 @@
 noinst_LIBRARIES = libfeuerkraft_editor.a
 
 libfeuerkraft_editor_a_SOURCES = \
-  editor.hxx editor.cxx
+  editor.hpp editor.cpp
 
 # EOF #
\ No newline at end of file

Modified: trunk/src/generic/Makefile.am
===================================================================
--- trunk/src/generic/Makefile.am	2009-01-27 11:16:10 UTC (rev 344)
+++ trunk/src/generic/Makefile.am	2009-01-27 11:19:20 UTC (rev 345)
@@ -1,7 +1,7 @@
 noinst_LIBRARIES = libfeuerkraft_generic.a
 
 libfeuerkraft_generic_a_SOURCES = \
-  random.hxx \
-  random.cxx
+  random.hpp \
+  random.cpp
 
 # EOF #

Modified: trunk/src/groundmap/Makefile.am
===================================================================
--- trunk/src/groundmap/Makefile.am	2009-01-27 11:16:10 UTC (rev 344)
+++ trunk/src/groundmap/Makefile.am	2009-01-27 11:19:20 UTC (rev 345)
@@ -1,39 +1,39 @@
 noinst_LIBRARIES = libfeuerkraft_groundmap.a
 
 libfeuerkraft_groundmap_a_SOURCES = \
-grid_map.cxx \
-grid_map.hxx \
-grid_map_data.cxx \
-grid_map_data.hxx \
-grid_tile.cxx \
-grid_tile.hxx \
-grid_tile_data.cxx \
-grid_tile_data.hxx \
-grid_tile_generator.cxx \
-grid_tile_generator.hxx \
-ground_map.hxx \
-ground_map_data.cxx \
-ground_map_data.hxx \
-ground_map_data_factory.cxx \
-ground_map_data_factory.hxx \
-ground_type.hxx \
-ground_type.cxx \
-multi_ground_map.cxx \
-multi_ground_map.hxx \
-multi_ground_map_data.cxx \
-multi_ground_map_data.hxx \
-sprite_tile.cxx \
-sprite_tile.hxx \
-sprite_tile_data.cxx \
-sprite_tile_data.hxx \
-tile.hxx \
-tile_data.hxx \
-tile_data_factory.cxx \
-tile_data_factory.hxx \
-tile_map.cxx \
-tile_map.hxx \
-tile_map_data.cxx \
-tile_map_data.hxx
+grid_map.cpp \
+grid_map.hpp \
+grid_map_data.cpp \
+grid_map_data.hpp \
+grid_tile.cpp \
+grid_tile.hpp \
+grid_tile_data.cpp \
+grid_tile_data.hpp \
+grid_tile_generator.cpp \
+grid_tile_generator.hpp \
+ground_map.hpp \
+ground_map_data.cpp \
+ground_map_data.hpp \
+ground_map_data_factory.cpp \
+ground_map_data_factory.hpp \
+ground_type.hpp \
+ground_type.cpp \
+multi_ground_map.cpp \
+multi_ground_map.hpp \
+multi_ground_map_data.cpp \
+multi_ground_map_data.hpp \
+sprite_tile.cpp \
+sprite_tile.hpp \
+sprite_tile_data.cpp \
+sprite_tile_data.hpp \
+tile.hpp \
+tile_data.hpp \
+tile_data_factory.cpp \
+tile_data_factory.hpp \
+tile_map.cpp \
+tile_map.hpp \
+tile_map_data.cpp \
+tile_map_data.hpp
 
 
 # EOF #
\ No newline at end of file

Modified: trunk/src/input/Makefile.am
===================================================================
--- trunk/src/input/Makefile.am	2009-01-27 11:16:10 UTC (rev 344)
+++ trunk/src/input/Makefile.am	2009-01-27 11:19:20 UTC (rev 345)
@@ -4,34 +4,34 @@
 noinst_LIBRARIES = libfeuerkraft_input.a
 
 libfeuerkraft_input_a_SOURCES = \
-  controller.hxx \
-  controller.cxx \
-  input_event.hxx \
-  input_manager.hxx \
-  input_manager.cxx \
-  input_manager_impl.hxx \
-  input_manager_impl.cxx \
-  input_manager_custom.hxx \
-  input_manager_custom.cxx \
-  input_manager_player.hxx \
-  input_manager_player.cxx \
-  input_button.hxx \
-  input_axis.hxx \
-  input_button_input_device.hxx \
-  input_button_input_device.cxx \
-  input_axis_input_device.hxx \
-  input_axis_input_device.cxx \
-  axis_button.hxx \
-  axis_button.cxx \
-  button_axis.hxx \
-  button_axis.cxx \
-  button_factory.hxx \
-  button_factory.cxx \
-  axis_factory.hxx \
-  axis_factory.cxx \
-  input_recorder.hxx \
-  input_recorder.cxx \
-  multi_button.hxx \
-  multi_button.cxx
+  controller.hpp \
+  controller.cpp \
+  input_event.hpp \
+  input_manager.hpp \
+  input_manager.cpp \
+  input_manager_impl.hpp \
+  input_manager_impl.cpp \
+  input_manager_custom.hpp \
+  input_manager_custom.cpp \
+  input_manager_player.hpp \
+  input_manager_player.cpp \
+  input_button.hpp \
+  input_axis.hpp \
+  input_button_input_device.hpp \
+  input_button_input_device.cpp \
+  input_axis_input_device.hpp \
+  input_axis_input_device.cpp \
+  axis_button.hpp \
+  axis_button.cpp \
+  button_axis.hpp \
+  button_axis.cpp \
+  button_factory.hpp \
+  button_factory.cpp \
+  axis_factory.hpp \
+  axis_factory.cpp \
+  input_recorder.hpp \
+  input_recorder.cpp \
+  multi_button.hpp \
+  multi_button.cpp
 
 # EOF #

Modified: trunk/src/particles/Makefile.am
===================================================================
--- trunk/src/particles/Makefile.am	2009-01-27 11:16:10 UTC (rev 344)
+++ trunk/src/particles/Makefile.am	2009-01-27 11:19:20 UTC (rev 345)
@@ -1,19 +1,19 @@
 noinst_LIBRARIES = libfeuerkraft_particles.a
 
 libfeuerkraft_particles_a_SOURCES = \
- explosion_particle.hxx \
- particle.hxx           \
- particle_system.hxx    \
- smoke_particle.hxx     \
- sand_particle.hxx      \
- grass_particle.hxx     \
- fire_particle.hxx     \
- fire_particle.cxx     \
- fire_emitter.hxx      \
- fire_emitter.cxx      \
- rocket_smoke_particle.hxx     \
- rocket_smoke_particle.cxx     \
- smoke_emitter.hxx     \
- smoke_emitter.cxx     
+ explosion_particle.hpp \
+ particle.hpp           \
+ particle_system.hpp    \
+ smoke_particle.hpp     \
+ sand_particle.hpp      \
+ grass_particle.hpp     \
+ fire_particle.hpp     \
+ fire_particle.cpp     \
+ fire_emitter.hpp      \
+ fire_emitter.cpp      \
+ rocket_smoke_particle.hpp     \
+ rocket_smoke_particle.cpp     \
+ smoke_emitter.hpp     \
+ smoke_emitter.cpp     
 
 # EOF #
\ No newline at end of file

Modified: trunk/src/sound/Makefile.am
===================================================================
--- trunk/src/sound/Makefile.am	2009-01-27 11:16:10 UTC (rev 344)
+++ trunk/src/sound/Makefile.am	2009-01-27 11:19:20 UTC (rev 345)
@@ -19,8 +19,8 @@
 noinst_LIBRARIES = libpingus_sound.a
 
 libpingus_sound_a_SOURCES = \
-	sound.cxx  sound_dummy.cxx  sound_real.cxx \
-	sound.hxx  sound_dummy.hxx  sound_real.hxx \
-        sounds.hxx sound_res_mgr.hxx sound_res_mgr.cxx
+	sound.cpp  sound_dummy.cpp  sound_real.cpp \
+	sound.hpp  sound_dummy.hpp  sound_real.hpp \
+        sounds.hpp sound_res_mgr.hpp sound_res_mgr.cpp
 
 # EOF #

Modified: trunk/src/vehicles/Makefile.am
===================================================================
--- trunk/src/vehicles/Makefile.am	2009-01-27 11:16:10 UTC (rev 344)
+++ trunk/src/vehicles/Makefile.am	2009-01-27 11:19:20 UTC (rev 345)
@@ -1,12 +1,12 @@
 noinst_LIBRARIES = libfeuerkraft_vehicles.a
 
 libfeuerkraft_vehicles_a_SOURCES = \
-  tank.cxx tank.hxx \
-  helicopter.cxx helicopter.hxx \
-  jeep.cxx   jeep.hxx \
-  turret.cxx turret.hxx \
-  rotor.cxx  rotor.hxx \
-  vehicle.cxx \
-  vehicle.hxx
+  tank.cpp tank.hpp \
+  helicopter.cpp helicopter.hpp \
+  jeep.cpp   jeep.hpp \
+  turret.cpp turret.hpp \
+  rotor.cpp  rotor.hpp \
+  vehicle.cpp \
+  vehicle.hpp
 
 # EOF #



From grumbel at mail.berlios.de  Tue Jan 27 12:29:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 27 Jan 2009 12:29:43 +0100
Subject: [Feuerkraft-commit] r347 - trunk/data
Message-ID: <200901271129.n0RBThFt008610@sheep.berlios.de>

Author: grumbel
Date: 2009-01-27 12:29:42 +0100 (Tue, 27 Jan 2009)
New Revision: 347

Modified:
   trunk/data/tiles.scm
Log:
Some tile changes floating around in my workdir, no idea what they are good for

Modified: trunk/data/tiles.scm
===================================================================
--- trunk/data/tiles.scm	2009-01-27 11:27:04 UTC (rev 346)
+++ trunk/data/tiles.scm	2009-01-27 11:29:42 UTC (rev 347)
@@ -1,5 +1,5 @@
 (tiles 
-((a a a a) "tiles/aaaa3" "tiles/aaaa2" "tiles/aaaa1")
+((a a a a) "tiles/aaaa2" "tiles/aaaa1" "tiles/aaaa3")
 ((a a a s) "tiles/aaas1")
 ((a a d d) "tiles/aadd1")
 ((a a d f) "tiles/aadf1")
@@ -10,7 +10,7 @@
 ((a a s f) "tiles/aasf1")
 ((a a s s) "tiles/aass1")
 ((a s a a) "tiles/asaa1")
-((a s a s) "tiles/asas1" "tiles/asas")
+((a s a s) "tiles/asas" "tiles/asas1")
 ((a s s a) "tiles/assa1")
 ((a s s s) "tiles/asss1")
 ((d d a a) "tiles/ddaa1")
@@ -30,7 +30,7 @@
 ((f f d d) "tiles/ffdd")
 ((f f d f) "tiles/ffdf")
 ((f f f d) "tiles/fffd")
-((f f f f) "tiles/ffff3" "tiles/ffff2" "tiles/ffff1")
+((f f f f) "tiles/ffff2" "tiles/ffff3" "tiles/ffff1")
 ((f f f s) "tiles/fffs")
 ((f f s f) "tiles/ffsf")
 ((f f s s) "tiles/ffss")
@@ -38,8 +38,8 @@
 ((f s f f) "tiles/fsff")
 ((f s f s) "tiles/fsfs")
 ((f s s f) "tiles/fssf")
-((f s s s) "tiles/fsss" "tiles/fsss1")
-((g g g g) "tiles/gggg5" "tiles/gggg4" "tiles/gggg3" "tiles/gggg2" "tiles/gggg1")
+((f s s s) "tiles/fsss1" "tiles/fsss")
+((g g g g) "tiles/gggg2" "tiles/gggg5" "tiles/gggg3" "tiles/gggg4" "tiles/gggg1")
 ((g g g m) "tiles/gggm2")
 ((g g g s) "tiles/gggs1")
 ((g g m g) "tiles/ggmg2")
@@ -50,7 +50,7 @@
 ((g m g m) "tiles/gmgm1")
 ((g m m g) "tiles/gmmg1")
 ((g m m m) "tiles/gmmm1")
-((g s g g) "tiles/gsgg2" "tiles/gsgg1")
+((g s g g) "tiles/gsgg1" "tiles/gsgg2")
 ((g s g s) "tiles/gsgs1")
 ((g s s g) "tiles/gssg1")
 ((g s s m) "tiles/gssm1")
@@ -62,14 +62,14 @@
 ((m m g g) "tiles/mmgg1")
 ((m m g m) "tiles/mmgm1")
 ((m m m g) "tiles/mmmg1")
-((m m m m) "tiles/mmmm4" "tiles/mmmm3" "tiles/mmmm2" "tiles/mmmm1")
-((m m m s) "tiles/mmms2" "tiles/mmms1")
-((m m s m) "tiles/mmsm2" "tiles/mmsm1")
-((m m s s) "tiles/mmss2" "tiles/mmss1")
+((m m m m) "tiles/mmmm1" "tiles/mmmm3" "tiles/mmmm2" "tiles/mmmm4")
+((m m m s) "tiles/mmms1" "tiles/mmms2")
+((m m s m) "tiles/mmsm1" "tiles/mmsm2")
+((m m s s) "tiles/mmss1" "tiles/mmss2")
 ((m s m m) "tiles/msmm2" "tiles/msmm1")
 ((m s m s) "tiles/msms1")
 ((m s s g) "tiles/mssg1")
-((m s s m) "tiles/mssm3" "tiles/mssm2" "tiles/mssm1" "tiles/mssm")
+((m s s m) "tiles/mssm1" "tiles/mssm" "tiles/mssm2" "tiles/mssm3")
 ((m s s s) "tiles/msss2" "tiles/msss1")
 ((s a a a) "tiles/saaa1")
 ((s a a s) "tiles/saas1")
@@ -77,7 +77,7 @@
 ((s a s s) "tiles/sass1")
 ((s f a a) "tiles/sfaa")
 ((s f f f) "tiles/sfff")
-((s f f s) "tiles/sffs1" "tiles/sffs")
+((s f f s) "tiles/sffs" "tiles/sffs1")
 ((s f s f) "tiles/sfsf")
 ((s f s s) "tiles/sfss" "tiles/sfss1")
 ((s g g g) "tiles/sggg1")
@@ -86,14 +86,14 @@
 ((s g s g) "tiles/sgsg1")
 ((s g s s) "tiles/sgss1")
 ((s m g s) "tiles/smgs1")
-((s m m m) "tiles/smmm" "tiles/smmm1")
-((s m m s) "tiles/smms" "tiles/smms1")
+((s m m m) "tiles/smmm1" "tiles/smmm")
+((s m m s) "tiles/smms1" "tiles/smms")
 ((s m s m) "tiles/smsm1")
 ((s m s s) "tiles/smss2" "tiles/smss1")
 ((s s a a) "tiles/ssaa1")
 ((s s a s) "tiles/ssas1")
-((s s f f) "tiles/ssff1" "tiles/ssff")
-((s s f s) "tiles/ssfs2" "tiles/ssfs")
+((s s f f) "tiles/ssff" "tiles/ssff1")
+((s s f s) "tiles/ssfs" "tiles/ssfs2")
 ((s s g g) "tiles/ssgg1")
 ((s s g s) "tiles/ssgs1")
 ((s s m m) "tiles/ssmm3" "tiles/ssmm2" "tiles/ssmm1")
@@ -101,8 +101,8 @@
 ((s s s a) "tiles/sssa1")
 ((s s s f) "tiles/sssf" "tiles/sssf1")
 ((s s s g) "tiles/sssg")
-((s s s m) "tiles/sssm2" "tiles/sssm1")
-((s s s s) "tiles/ssss7" "tiles/ssss6" "tiles/ssss5" "tiles/ssss4" "tiles/ssss3" "tiles/ssss1" "tiles/ssss12" "tiles/ssss10")
+((s s s m) "tiles/sssm1" "tiles/sssm2")
+((s s s s) "tiles/ssss3" "tiles/ssss5" "tiles/ssss10" "tiles/ssss1" "tiles/ssss4" "tiles/ssss12" "tiles/ssss6" "tiles/ssss7")
 ((s s s w) "tiles/sssw1")
 ((s s w s) "tiles/ssws1")
 ((s s w w) "tiles/ssww1")
@@ -117,5 +117,5 @@
 ((w w s s) "tiles/wwss1")
 ((w w s w) "tiles/wwsw1")
 ((w w w s) "tiles/wwws1")
-((w w w w) "tiles/wwww2" "tiles/wwww1")
+((w w w w) "tiles/wwww1" "tiles/wwww2")
 )



From grumbel at mail.berlios.de  Tue Jan 27 12:12:25 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 27 Jan 2009 12:12:25 +0100
Subject: [Feuerkraft-commit] r343 - in trunk/src: . buildings display editor
	generic groundmap input particles scripting sound vehicles
Message-ID: <200901271112.n0RBCPcI004924@sheep.berlios.de>

Author: grumbel
Date: 2009-01-27 12:12:17 +0100 (Tue, 27 Jan 2009)
New Revision: 343

Added:
   trunk/src/ai.hpp
   trunk/src/ai_manager.hpp
   trunk/src/ai_vehicle.hpp
   trunk/src/alist.hpp
   trunk/src/ambulance.hpp
   trunk/src/assert.hpp
   trunk/src/astar_pathfinder.hpp
   trunk/src/background.hpp
   trunk/src/bfirst_pathfinder.hpp
   trunk/src/buildings/ammotent.hpp
   trunk/src/buildings/building.hpp
   trunk/src/buildings/building_manager.hpp
   trunk/src/buildings/building_map.hpp
   trunk/src/buildings/building_map_data.hpp
   trunk/src/buildings/building_type_manager.hpp
   trunk/src/buildings/custom_building.hpp
   trunk/src/buildings/fuelstation.hpp
   trunk/src/buildings/headquarter.hpp
   trunk/src/buildings/tower.hpp
   trunk/src/buildings/tower_ai.hpp
   trunk/src/buildings/wall.hpp
   trunk/src/buildings/wall_door.hpp
   trunk/src/collision_manager.hpp
   trunk/src/color.hpp
   trunk/src/command_line_arguments.hpp
   trunk/src/communication_dialog.hpp
   trunk/src/controller_def.hpp
   trunk/src/dijkstra_pathfinder.hpp
   trunk/src/display/drawing_context.hpp
   trunk/src/display/drawing_request.hpp
   trunk/src/display/scene_context.hpp
   trunk/src/display_manager.hpp
   trunk/src/draw_circle.hpp
   trunk/src/editor/editor.hpp
   trunk/src/energie.hpp
   trunk/src/explosion.hpp
   trunk/src/feuerkraft.hpp
   trunk/src/feuerkraft_error.hpp
   trunk/src/field.hpp
   trunk/src/fonts.hpp
   trunk/src/game_delta.hpp
   trunk/src/game_mission.hpp
   trunk/src/game_obj.hpp
   trunk/src/game_obj_data.hpp
   trunk/src/game_obj_data_factory.hpp
   trunk/src/game_obj_factory.hpp
   trunk/src/game_obj_manager.hpp
   trunk/src/game_session.hpp
   trunk/src/game_session_manager.hpp
   trunk/src/game_world.hpp
   trunk/src/game_world_builder.hpp
   trunk/src/game_world_data.hpp
   trunk/src/generic/random.hpp
   trunk/src/geometry.hpp
   trunk/src/globals.hpp
   trunk/src/goal_manager.hpp
   trunk/src/groundmap/grid_map.hpp
   trunk/src/groundmap/grid_map_data.hpp
   trunk/src/groundmap/grid_tile.hpp
   trunk/src/groundmap/grid_tile_data.hpp
   trunk/src/groundmap/grid_tile_generator.hpp
   trunk/src/groundmap/ground_map.hpp
   trunk/src/groundmap/ground_map_data.hpp
   trunk/src/groundmap/ground_map_data_factory.hpp
   trunk/src/groundmap/ground_type.hpp
   trunk/src/groundmap/multi_ground_map.hpp
   trunk/src/groundmap/multi_ground_map_data.hpp
   trunk/src/groundmap/sprite_tile.hpp
   trunk/src/groundmap/sprite_tile_data.hpp
   trunk/src/groundmap/tile.hpp
   trunk/src/groundmap/tile_data.hpp
   trunk/src/groundmap/tile_data_factory.hpp
   trunk/src/groundmap/tile_map.hpp
   trunk/src/groundmap/tile_map_data.hpp
   trunk/src/gui_obj.hpp
   trunk/src/guile.hpp
   trunk/src/handle_manager.hpp
   trunk/src/help.hpp
   trunk/src/input/axis_button.hpp
   trunk/src/input/axis_factory.hpp
   trunk/src/input/button_axis.hpp
   trunk/src/input/button_factory.hpp
   trunk/src/input/controller.hpp
   trunk/src/input/input_axis.hpp
   trunk/src/input/input_axis_input_device.hpp
   trunk/src/input/input_button.hpp
   trunk/src/input/input_button_input_device.hpp
   trunk/src/input/input_event.hpp
   trunk/src/input/input_manager.hpp
   trunk/src/input/input_manager_custom.hpp
   trunk/src/input/input_manager_impl.hpp
   trunk/src/input/input_manager_player.hpp
   trunk/src/input/input_recorder.hpp
   trunk/src/input/multi_button.hpp
   trunk/src/ipc.hpp
   trunk/src/keyboard_manager.hpp
   trunk/src/keys.hpp
   trunk/src/level_map.hpp
   trunk/src/line_segments.hpp
   trunk/src/marker.hpp
   trunk/src/math.hpp
   trunk/src/menu.hpp
   trunk/src/menu_handle_mgr.hpp
   trunk/src/menu_item.hpp
   trunk/src/message_buffer.hpp
   trunk/src/mine.hpp
   trunk/src/output_world_builder.hpp
   trunk/src/particles/explosion_particle.hpp
   trunk/src/particles/fire_emitter.hpp
   trunk/src/particles/fire_particle.hpp
   trunk/src/particles/grass_particle.hpp
   trunk/src/particles/particle.hpp
   trunk/src/particles/particle_system.hpp
   trunk/src/particles/rocket_smoke_particle.hpp
   trunk/src/particles/sand_particle.hpp
   trunk/src/particles/smoke_emitter.hpp
   trunk/src/particles/smoke_particle.hpp
   trunk/src/path_manager.hpp
   trunk/src/pathfinder.hpp
   trunk/src/player.hpp
   trunk/src/player_view.hpp
   trunk/src/projectile.hpp
   trunk/src/property.hpp
   trunk/src/property_set.hpp
   trunk/src/radar.hpp
   trunk/src/resource_manager.hpp
   trunk/src/robot_tank.hpp
   trunk/src/rocket.hpp
   trunk/src/satchel_charge.hpp
   trunk/src/scm_functor.hpp
   trunk/src/scm_sequence_hook.hpp
   trunk/src/screen.hpp
   trunk/src/screenshot.hpp
   trunk/src/scripting/ai_commands.hpp
   trunk/src/scripting/ai_vehicle_commands.hpp
   trunk/src/scripting/building_commands.hpp
   trunk/src/scripting/clanlib_commands.hpp
   trunk/src/scripting/comm_commands.hpp
   trunk/src/scripting/debug_commands.hpp
   trunk/src/scripting/dialog_commands.hpp
   trunk/src/scripting/display_commands.hpp
   trunk/src/scripting/effect_commands.hpp
   trunk/src/scripting/game_commands.hpp
   trunk/src/scripting/gameobj_commands.hpp
   trunk/src/scripting/input_commands.hpp
   trunk/src/scripting/menu_commands.hpp
   trunk/src/scripting/object_commands.hpp
   trunk/src/scripting/player_commands.hpp
   trunk/src/scripting/script_helper.hpp
   trunk/src/scripting/scripting.hpp
   trunk/src/scripting/sequence_commands.hpp
   trunk/src/scripting/sound_commands.hpp
   trunk/src/scripting/trigger_commands.hpp
   trunk/src/scripting/vehicle_commands.hpp
   trunk/src/scripting/weapon_commands.hpp
   trunk/src/sequence_manager.hpp
   trunk/src/sexpr_world_reader.hpp
   trunk/src/shockwave.hpp
   trunk/src/shortcut_pathfinder.hpp
   trunk/src/soldier.hpp
   trunk/src/soldier_ai.hpp
   trunk/src/sound/sound.hpp
   trunk/src/sound/sound_dummy.hpp
   trunk/src/sound/sound_real.hpp
   trunk/src/sound/sound_res_mgr.hpp
   trunk/src/sound/sounds.hpp
   trunk/src/start_screen.hpp
   trunk/src/system.hpp
   trunk/src/tree.hpp
   trunk/src/trigger_manager.hpp
   trunk/src/unit.hpp
   trunk/src/vector2d.hpp
   trunk/src/vehicle_ai.hpp
   trunk/src/vehicle_status.hpp
   trunk/src/vehicle_view.hpp
   trunk/src/vehicles/helicopter.hpp
   trunk/src/vehicles/jeep.hpp
   trunk/src/vehicles/rotor.hpp
   trunk/src/vehicles/rotor_description.hpp
   trunk/src/vehicles/tank.hpp
   trunk/src/vehicles/turret.hpp
   trunk/src/vehicles/vehicle.hpp
   trunk/src/view.hpp
   trunk/src/view_plugin.hpp
   trunk/src/view_properties.hpp
   trunk/src/world_builder.hpp
   trunk/src/z_pos_layers.hpp
Removed:
   trunk/src/ai.hxx
   trunk/src/ai_manager.hxx
   trunk/src/ai_vehicle.hxx
   trunk/src/alist.hxx
   trunk/src/ambulance.hxx
   trunk/src/assert.hxx
   trunk/src/astar_pathfinder.hxx
   trunk/src/background.hxx
   trunk/src/bfirst_pathfinder.hxx
   trunk/src/buildings/ammotent.hxx
   trunk/src/buildings/building.hxx
   trunk/src/buildings/building_manager.hxx
   trunk/src/buildings/building_map.hxx
   trunk/src/buildings/building_map_data.hxx
   trunk/src/buildings/building_type_manager.hxx
   trunk/src/buildings/custom_building.hxx
   trunk/src/buildings/fuelstation.hxx
   trunk/src/buildings/headquarter.hxx
   trunk/src/buildings/tower.hxx
   trunk/src/buildings/tower_ai.hxx
   trunk/src/buildings/wall.hxx
   trunk/src/buildings/wall_door.hxx
   trunk/src/collision_manager.hxx
   trunk/src/color.hxx
   trunk/src/command_line_arguments.hxx
   trunk/src/communication_dialog.hxx
   trunk/src/controller_def.hxx
   trunk/src/dijkstra_pathfinder.hxx
   trunk/src/display/drawing_context.hxx
   trunk/src/display/drawing_request.hxx
   trunk/src/display/scene_context.hxx
   trunk/src/display_manager.hxx
   trunk/src/draw_circle.hxx
   trunk/src/editor/editor.hxx
   trunk/src/energie.hxx
   trunk/src/explosion.hxx
   trunk/src/feuerkraft.hxx
   trunk/src/feuerkraft_error.hxx
   trunk/src/field.hxx
   trunk/src/fonts.hxx
   trunk/src/game_delta.hxx
   trunk/src/game_mission.hxx
   trunk/src/game_obj.hxx
   trunk/src/game_obj_data.hxx
   trunk/src/game_obj_data_factory.hxx
   trunk/src/game_obj_factory.hxx
   trunk/src/game_obj_manager.hxx
   trunk/src/game_session.hxx
   trunk/src/game_session_manager.hxx
   trunk/src/game_world.hxx
   trunk/src/game_world_builder.hxx
   trunk/src/game_world_data.hxx
   trunk/src/generic/random.hxx
   trunk/src/geometry.hxx
   trunk/src/globals.hxx
   trunk/src/goal_manager.hxx
   trunk/src/groundmap/grid_map.hxx
   trunk/src/groundmap/grid_map_data.hxx
   trunk/src/groundmap/grid_tile.hxx
   trunk/src/groundmap/grid_tile_data.hxx
   trunk/src/groundmap/grid_tile_generator.hxx
   trunk/src/groundmap/ground_map.hxx
   trunk/src/groundmap/ground_map_data.hxx
   trunk/src/groundmap/ground_map_data_factory.hxx
   trunk/src/groundmap/ground_type.hxx
   trunk/src/groundmap/multi_ground_map.hxx
   trunk/src/groundmap/multi_ground_map_data.hxx
   trunk/src/groundmap/sprite_tile.hxx
   trunk/src/groundmap/sprite_tile_data.hxx
   trunk/src/groundmap/tile.hxx
   trunk/src/groundmap/tile_data.hxx
   trunk/src/groundmap/tile_data_factory.hxx
   trunk/src/groundmap/tile_map.hxx
   trunk/src/groundmap/tile_map_data.hxx
   trunk/src/gui_obj.hxx
   trunk/src/guile.hxx
   trunk/src/handle_manager.hxx
   trunk/src/help.hxx
   trunk/src/input/axis_button.hxx
   trunk/src/input/axis_factory.hxx
   trunk/src/input/button_axis.hxx
   trunk/src/input/button_factory.hxx
   trunk/src/input/controller.hxx
   trunk/src/input/input_axis.hxx
   trunk/src/input/input_axis_input_device.hxx
   trunk/src/input/input_button.hxx
   trunk/src/input/input_button_input_device.hxx
   trunk/src/input/input_event.hxx
   trunk/src/input/input_manager.hxx
   trunk/src/input/input_manager_custom.hxx
   trunk/src/input/input_manager_impl.hxx
   trunk/src/input/input_manager_player.hxx
   trunk/src/input/input_recorder.hxx
   trunk/src/input/multi_button.hxx
   trunk/src/ipc.hxx
   trunk/src/keyboard_manager.hxx
   trunk/src/keys.hxx
   trunk/src/level_map.hxx
   trunk/src/line_segments.hxx
   trunk/src/marker.hxx
   trunk/src/math.hxx
   trunk/src/menu.hxx
   trunk/src/menu_handle_mgr.hxx
   trunk/src/menu_item.hxx
   trunk/src/message_buffer.hxx
   trunk/src/mine.hxx
   trunk/src/output_world_builder.hxx
   trunk/src/particles/explosion_particle.hxx
   trunk/src/particles/fire_emitter.hxx
   trunk/src/particles/fire_particle.hxx
   trunk/src/particles/grass_particle.hxx
   trunk/src/particles/particle.hxx
   trunk/src/particles/particle_system.hxx
   trunk/src/particles/rocket_smoke_particle.hxx
   trunk/src/particles/sand_particle.hxx
   trunk/src/particles/smoke_emitter.hxx
   trunk/src/particles/smoke_particle.hxx
   trunk/src/path_manager.hxx
   trunk/src/pathfinder.hxx
   trunk/src/player.hxx
   trunk/src/player_view.hxx
   trunk/src/projectile.hxx
   trunk/src/property.hxx
   trunk/src/property_set.hxx
   trunk/src/radar.hxx
   trunk/src/resource_manager.hxx
   trunk/src/robot_tank.hxx
   trunk/src/rocket.hxx
   trunk/src/satchel_charge.hxx
   trunk/src/scm_functor.hxx
   trunk/src/scm_sequence_hook.hxx
   trunk/src/screen.hxx
   trunk/src/screenshot.hxx
   trunk/src/scripting/ai_commands.hxx
   trunk/src/scripting/ai_vehicle_commands.hxx
   trunk/src/scripting/building_commands.hxx
   trunk/src/scripting/clanlib_commands.hxx
   trunk/src/scripting/comm_commands.hxx
   trunk/src/scripting/debug_commands.hxx
   trunk/src/scripting/dialog_commands.hxx
   trunk/src/scripting/display_commands.hxx
   trunk/src/scripting/effect_commands.hxx
   trunk/src/scripting/game_commands.hxx
   trunk/src/scripting/gameobj_commands.hxx
   trunk/src/scripting/input_commands.hxx
   trunk/src/scripting/menu_commands.hxx
   trunk/src/scripting/object_commands.hxx
   trunk/src/scripting/player_commands.hxx
   trunk/src/scripting/script_helper.hxx
   trunk/src/scripting/scripting.hxx
   trunk/src/scripting/sequence_commands.hxx
   trunk/src/scripting/sound_commands.hxx
   trunk/src/scripting/trigger_commands.hxx
   trunk/src/scripting/vehicle_commands.hxx
   trunk/src/scripting/weapon_commands.hxx
   trunk/src/sequence_manager.hxx
   trunk/src/sexpr_world_reader.hxx
   trunk/src/shockwave.hxx
   trunk/src/shortcut_pathfinder.hxx
   trunk/src/soldier.hxx
   trunk/src/soldier_ai.hxx
   trunk/src/sound/sound.hxx
   trunk/src/sound/sound_dummy.hxx
   trunk/src/sound/sound_real.hxx
   trunk/src/sound/sound_res_mgr.hxx
   trunk/src/sound/sounds.hxx
   trunk/src/start_screen.hxx
   trunk/src/system.hxx
   trunk/src/tree.hxx
   trunk/src/trigger_manager.hxx
   trunk/src/unit.hxx
   trunk/src/vector2d.hxx
   trunk/src/vehicle_ai.hxx
   trunk/src/vehicle_status.hxx
   trunk/src/vehicle_view.hxx
   trunk/src/vehicles/helicopter.hxx
   trunk/src/vehicles/jeep.hxx
   trunk/src/vehicles/rotor.hxx
   trunk/src/vehicles/rotor_description.hxx
   trunk/src/vehicles/tank.hxx
   trunk/src/vehicles/turret.hxx
   trunk/src/vehicles/vehicle.hxx
   trunk/src/view.hxx
   trunk/src/view_plugin.hxx
   trunk/src/view_properties.hxx
   trunk/src/world_builder.hxx
   trunk/src/z_pos_layers.hxx
Modified:
   trunk/src/Makefile.am
Log:
Breaking point: started rename for *.?xx to *.?pp

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/Makefile.am	2009-01-27 11:12:17 UTC (rev 343)
@@ -16,163 +16,163 @@
  sound/libpingus_sound.a
 
 feuerkraft_SOURCES = \
-display/drawing_context.cxx \
-display/scene_context.cxx \
-alist.hxx \
-alist.cxx \
-ai_vehicle.hxx \
-ai_vehicle.cxx \
-ai_manager.hxx \
-ai_manager.cxx \
-ambulance.cxx \
-ambulance.hxx \
-background.cxx \
-background.hxx \
-command_line_arguments.hxx \
-command_line_arguments.cxx \
-color.hxx \
-color.cxx \
-controller_def.cxx \
-controller_def.hxx \
-communication_dialog.hxx \
-communication_dialog.cxx \
-collision_manager.hxx \
-collision_manager.cxx \
-display_manager.hxx \
-display_manager.cxx \
-energie.cxx \
-energie.hxx \
-explosion.cxx \
-explosion.hxx \
-feuerkraft.cxx \
-feuerkraft.hxx \
-feuerkraft_error.hxx \
-field.hxx \
-fonts.hxx \
-fonts.cxx \
-game_delta.cxx \
-game_delta.hxx \
-game_mission.cxx \
-game_mission.hxx \
-game_obj.hxx \
-game_obj.cxx \
-game_session.hxx \
-game_session.cxx \
-game_session_manager.hxx \
-game_session_manager.cxx \
-game_obj_manager.hxx \
-game_obj_manager.cxx \
-game_obj_data.hxx \
-game_obj_factory.cxx \
-game_obj_factory.hxx \
-game_obj_data_factory.cxx \
-game_obj_data_factory.hxx \
-help.hxx \
-help.cxx \
-ipc.cxx \
-ipc.hxx \
-keys.hxx \
-keys.cxx \
-world_builder.hxx \
-game_world_builder.cxx \
-game_world_builder.hxx \
-game_world.cxx \
-game_world.hxx \
-game_world_data.cxx \
-game_world_data.hxx \
-goal_manager.hxx \
-goal_manager.cxx \
-gui_obj.hxx \
-guile.cxx \
-guile.hxx \
-keyboard_manager.hxx \
-keyboard_manager.cxx \
-level_map.cxx \
-level_map.hxx \
-line_segments.hxx \
-line_segments.cxx \
-marker.hxx \
-marker.cxx \
-math.hxx \
-math.cxx \
-message_buffer.hxx \
-message_buffer.cxx \
-menu.hxx \
-menu.cxx \
-menu_item.hxx \
-menu_item.cxx \
-menu_handle_mgr.hxx \
-menu_handle_mgr.cxx \
-handle_manager.hxx \
-mine.cxx \
-mine.hxx \
-path_manager.cxx \
-path_manager.hxx \
-player.hxx \
-player.cxx \
-player_view.hxx \
-player_view.cxx \
-output_world_builder.hxx \
-output_world_builder.cxx \
-property.hxx \
-property.cxx \
-property_set.hxx \
-property_set.cxx \
-projectile.cxx \
-projectile.hxx \
-radar.cxx \
-radar.hxx \
-robot_tank.hxx \
-robot_tank.cxx \
-rocket.hxx \
-rocket.cxx \
-resource_manager.cxx \
-resource_manager.hxx \
-satchel_charge.hxx \
-satchel_charge.cxx \
-screen.cxx \
-screen.hxx \
-screenshot.hxx \
-screenshot.cxx \
-scm_functor.hxx \
-scm_functor.cxx \
-scm_sequence_hook.hxx \
-scm_sequence_hook.cxx \
-sequence_manager.hxx \
-sequence_manager.cxx \
-shockwave.cxx \
-shockwave.hxx \
-sexpr_world_reader.hxx \
-sexpr_world_reader.cxx \
-soldier.cxx \
-soldier.hxx \
-soldier_ai.cxx \
-soldier_ai.hxx \
-start_screen.cxx \
-start_screen.hxx \
-globals.hxx \
-globals.cxx \
-system.cxx \
-system.hxx \
-trigger_manager.hxx \
-trigger_manager.cxx \
-tree.cxx \
-tree.hxx \
-unit.hxx \
-unit.cxx \
-vector2d.hxx \
-vector2d.cxx \
-vehicle_ai.cxx \
-vehicle_ai.hxx \
-vehicle_status.cxx \
-vehicle_status.hxx \
-vehicle_view.cxx \
-vehicle_view.hxx \
-view.cxx \
-view.hxx \
-view_plugin.hxx \
-view_properties.hxx \
-z_pos_layers.hxx
+display/drawing_context.cpp \
+display/scene_context.cpp \
+alist.hpp \
+alist.cpp \
+ai_vehicle.hpp \
+ai_vehicle.cpp \
+ai_manager.hpp \
+ai_manager.cpp \
+ambulance.cpp \
+ambulance.hpp \
+background.cpp \
+background.hpp \
+command_line_arguments.hpp \
+command_line_arguments.cpp \
+color.hpp \
+color.cpp \
+controller_def.cpp \
+controller_def.hpp \
+communication_dialog.hpp \
+communication_dialog.cpp \
+collision_manager.hpp \
+collision_manager.cpp \
+display_manager.hpp \
+display_manager.cpp \
+energie.cpp \
+energie.hpp \
+explosion.cpp \
+explosion.hpp \
+feuerkraft.cpp \
+feuerkraft.hpp \
+feuerkraft_error.hpp \
+field.hpp \
+fonts.hpp \
+fonts.cpp \
+game_delta.cpp \
+game_delta.hpp \
+game_mission.cpp \
+game_mission.hpp \
+game_obj.hpp \
+game_obj.cpp \
+game_session.hpp \
+game_session.cpp \
+game_session_manager.hpp \
+game_session_manager.cpp \
+game_obj_manager.hpp \
+game_obj_manager.cpp \
+game_obj_data.hpp \
+game_obj_factory.cpp \
+game_obj_factory.hpp \
+game_obj_data_factory.cpp \
+game_obj_data_factory.hpp \
+help.hpp \
+help.cpp \
+ipc.cpp \
+ipc.hpp \
+keys.hpp \
+keys.cpp \
+world_builder.hpp \
+game_world_builder.cpp \
+game_world_builder.hpp \
+game_world.cpp \
+game_world.hpp \
+game_world_data.cpp \
+game_world_data.hpp \
+goal_manager.hpp \
+goal_manager.cpp \
+gui_obj.hpp \
+guile.cpp \
+guile.hpp \
+keyboard_manager.hpp \
+keyboard_manager.cpp \
+level_map.cpp \
+level_map.hpp \
+line_segments.hpp \
+line_segments.cpp \
+marker.hpp \
+marker.cpp \
+math.hpp \
+math.cpp \
+message_buffer.hpp \
+message_buffer.cpp \
+menu.hpp \
+menu.cpp \
+menu_item.hpp \
+menu_item.cpp \
+menu_handle_mgr.hpp \
+menu_handle_mgr.cpp \
+handle_manager.hpp \
+mine.cpp \
+mine.hpp \
+path_manager.cpp \
+path_manager.hpp \
+player.hpp \
+player.cpp \
+player_view.hpp \
+player_view.cpp \
+output_world_builder.hpp \
+output_world_builder.cpp \
+property.hpp \
+property.cpp \
+property_set.hpp \
+property_set.cpp \
+projectile.cpp \
+projectile.hpp \
+radar.cpp \
+radar.hpp \
+robot_tank.hpp \
+robot_tank.cpp \
+rocket.hpp \
+rocket.cpp \
+resource_manager.cpp \
+resource_manager.hpp \
+satchel_charge.hpp \
+satchel_charge.cpp \
+screen.cpp \
+screen.hpp \
+screenshot.hpp \
+screenshot.cpp \
+scm_functor.hpp \
+scm_functor.cpp \
+scm_sequence_hook.hpp \
+scm_sequence_hook.cpp \
+sequence_manager.hpp \
+sequence_manager.cpp \
+shockwave.cpp \
+shockwave.hpp \
+sexpr_world_reader.hpp \
+sexpr_world_reader.cpp \
+soldier.cpp \
+soldier.hpp \
+soldier_ai.cpp \
+soldier_ai.hpp \
+start_screen.cpp \
+start_screen.hpp \
+globals.hpp \
+globals.cpp \
+system.cpp \
+system.hpp \
+trigger_manager.hpp \
+trigger_manager.cpp \
+tree.cpp \
+tree.hpp \
+unit.hpp \
+unit.cpp \
+vector2d.hpp \
+vector2d.cpp \
+vehicle_ai.cpp \
+vehicle_ai.hpp \
+vehicle_status.cpp \
+vehicle_status.hpp \
+vehicle_view.cpp \
+vehicle_view.hpp \
+view.cpp \
+view.hpp \
+view_plugin.hpp \
+view_properties.hpp \
+z_pos_layers.hpp
 
 STATIC_READLINE=
 #STATIC_READLINE=-lguilereadline-v-12 -lreadline -lncurses
@@ -229,7 +229,7 @@
 
 BROWSE:
 	TMPFILE=`tempfile`; \
-	find ./ -name "*.?xx" | sed "s/.\///" | grep -v "old/" | grep -v "feuerkraft_wrap.cxx" | \
+	find ./ -name "*.?pp" | sed "s/.\///" | grep -v "old/" | grep -v "feuerkraft_wrap.cpp" | \
           sort -t . -k 2 -r > $$TMPFILE; \
 	ebrowse --files=$$TMPFILE; rm -v $$TMPFILE
 

Copied: trunk/src/ai.hpp (from rev 341, trunk/src/ai.hxx)


Property changes on: trunk/src/ai.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/ai.hxx
===================================================================
--- trunk/src/ai.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/ai.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,39 +0,0 @@
-//  $Id: ai.hxx,v 1.2 2003/06/18 13:03:13 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_AI_HXX
-#define HEADER_AI_HXX
-
-class GameObj;
-
-/** */
-class AI
-{
-private:
-public:
-  AI() {}
-  virtual ~AI() {}
-  
-  virtual GameObj* get_object() =0;
-  virtual void update(float delta) =0;
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/ai_manager.hpp (from rev 341, trunk/src/ai_manager.hxx)


Property changes on: trunk/src/ai_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/ai_manager.hxx
===================================================================
--- trunk/src/ai_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/ai_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,51 +0,0 @@
-//  $Id: ai_manager.hxx,v 1.3 2003/06/20 20:54:23 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_AI_MANAGER_HXX
-#define HEADER_AI_MANAGER_HXX
-
-#include <vector>
-
-class AI;
-class GameObj;
-
-/** The AIManager keeps track of all AI objects around */
-class AIManager
-{
-private:
-  static AIManager* instance_;
-public:
-  static AIManager* instance();
-
-private:
-  std::vector<AI*> ais;
-public:
-  /** @return the AI object that is associated with the given
-      game object */
-  AI* get_ai(GameObj* obj);
-
-  /** Add an AI object to the AIManager */
-  void add(AI* ai);
-  void remove(AI* ai);
-  void update(float delta);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/ai_vehicle.hpp (from rev 341, trunk/src/ai_vehicle.hxx)


Property changes on: trunk/src/ai_vehicle.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/ai_vehicle.hxx
===================================================================
--- trunk/src/ai_vehicle.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/ai_vehicle.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,120 +0,0 @@
-//  $Id: ai_vehicle.hxx,v 1.15 2003/06/08 15:31:27 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_AI_VEHICLE_HXX
-#define HEADER_AI_VEHICLE_HXX
-
-#include <list>
-#include "vector2d.hxx"
-#include <ClanLib/Display/sprite.h>
-
-#include "energie.hxx"
-#include "line_segments.hxx"
-#include "sequence_manager.hxx"
-#include "vehicles/vehicle.hxx"
-
-class SmokeEmitter;
-class LevelMap;
-
-struct Position
-{
-  float x;
-  float y;
-};
-
-enum AIVehicleOrderType { 
-  AI_VO_NONE, 
-  AI_VO_DRIVETO, 
-  AI_VO_WAIT, 
-  AI_VO_CONTINUE
-}; 
-
-struct AIVehicleOrderNone
-{
-};
-
-struct AIVehicleOrderDriveTo
-{
-  int sequence_id;
-
-  Position pos;
-};
-
-struct AIVehicleOrderWait
-{
-  int sequence_id;
-
-  /** Number of seconds to wait, -1 means forever, until next order is
-      given */
-  float seconds;
-};
-
-struct AIVehicleOrder
-{
-  AIVehicleOrderType type;
-
-  union {
-    AIVehicleOrderDriveTo  drive_to;
-    AIVehicleOrderWait     wait;
-    AIVehicleOrderNone     none;
-  };
-};
-
-/** */
-class AIVehicle : public Vehicle
-{
-private:
-  bool    destroyed;
-  Energie energie;
-  float   length;
-  LineSegments line_segments;
-
-  CL_Sprite sprite;
-  CL_Sprite destroyed_sprite;
-  std::list<AIVehicleOrder> orders;
-
-  AIVehicleOrder current_order;
-  SmokeEmitter* smoke_emitter;
-public:
-  AIVehicle(const FloatVector2d& arg_pos);
-
-  void update(float delta);
-  void draw (View& view);
-  void draw_energie (View& view);
-  void draw_levelmap (LevelMap& levelmap);
-
-  void wait(float seconds);
-  void drive_to(const FloatVector2d& pos);
-
-  void add_order(AIVehicleOrder);
-  void clear_orders();
-  void next_order();
-
-  void on_collision(GameObj* obj);
-  void on_collision_with_building(Building* building);
-
-  bool is_colliding(FloatVector2d) { return false; }
-private:
-  AIVehicle (const AIVehicle&);
-  AIVehicle& operator= (const AIVehicle&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/alist.hpp (from rev 341, trunk/src/alist.hxx)


Property changes on: trunk/src/alist.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/alist.hxx
===================================================================
--- trunk/src/alist.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/alist.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,101 +0,0 @@
-//  $Id: alist.hxx,v 1.10 2003/06/23 08:43:32 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_ALIST_HXX
-#define HEADER_ALIST_HXX
-
-#include <string>
-#include <map>
-#include "vector2d.hxx"
-
-/** Simple associated list like class 
-
-    FIXME: Looks pretty similar to PropertySet, except for the
-    pointers. Spliting of the Value struct into an own more generic
-    class would be a good idea. */
-class AList
-{
-public:
-  enum Type { AL_NONE, AL_INT, AL_FLOAT, AL_BOOL, AL_STRING, AL_INTVECTOR2D, AL_FLOATVECTOR2D };
-
-  struct Value {
-    Type type;
-    
-    union {
-      int   v_int;
-      float v_float;
-      bool  v_bool;
-      std::string*  v_string;
-      IntVector2d   v_int_vector2d;
-      FloatVector2d* v_float_vector2d;
-    };
-  };
-private:
-  typedef std::map<std::string, Value> Content;
-  Content content;
-
-  Value& ensure_free_cell(const std::string& name, Type type);
-  const Value* get_value(const std::string& name, Type type) const;
-public:
-  typedef Content::iterator iterator;
-  typedef Content::const_iterator const_iterator;
-
-  AList();
-  AList(const AList&);
-  AList& operator=(const AList&);
-
-  ~AList();
-
-  AList& set_value (const std::string& str, const Value& value);
-  AList& set_int   (const std::string& str, int value);
-  AList& set_float (const std::string& str, float value);
-  AList& set_bool  (const std::string& str, bool value);
-  AList& set_string(const std::string& str, const std::string& value);
-  AList& set_int_vector2d(const std::string& str, IntVector2d& value);
-
-  bool retrieve_int      (const std::string& str, int& value) const;
-  bool retrieve_float    (const std::string& str, float&value) const;
-  bool retrieve_bool     (const std::string& str, bool& value) const;
-  bool retrieve_string   (const std::string& str, std::string& value) const;
-
-  int    get_int      (const std::string& str, int def = 0) const;
-  float  get_float    (const std::string& str, float def = 0) const;
-  bool   get_bool     (const std::string& str, bool def = false) const;
-  std::string get_string(const std::string& str, const std::string& ref = std::string()) const;
-
-  bool retrieve_int_vector2d (const std::string& str, IntVector2d& value) const;
-  bool retrieve_float_vector2d (const std::string& str, FloatVector2d& value) const;
-
-  /** Merg lst into the current list, overwriting all values in *this
-      that are also in lst */
-  void merge(const AList& lst);
-
-  iterator begin() { return content.begin(); }
-  iterator end() { return content.end(); }
-
-  const_iterator begin() const { return content.begin(); }
-  const_iterator end() const { return content.end(); }
-};
-
-std::ostream& operator<< (std::ostream& os, const AList& lst);
-std::ostream& operator<< (std::ostream& os, const AList::Value& value);
-
-#endif
-
-/* EOF */

Copied: trunk/src/ambulance.hpp (from rev 341, trunk/src/ambulance.hxx)


Property changes on: trunk/src/ambulance.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/ambulance.hxx
===================================================================
--- trunk/src/ambulance.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/ambulance.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,41 +0,0 @@
-//  $Id: ambulance.hxx,v 1.7 2003/06/04 10:59:00 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef AMBULANCE_HXX
-#define AMBULANCE_HXX
-
-#include <ClanLib/Display/sprite.h>
-#include "game_obj.hxx"
-
-class Ambulance : public GameObj
-{
-private:
-  CL_Sprite sur;
-
-public:
-  Ambulance();
-
-  // Draw the object onto the screen
-  void draw (View& view);
-   
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/assert.hpp (from rev 341, trunk/src/assert.hxx)


Property changes on: trunk/src/assert.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/assert.hxx
===================================================================
--- trunk/src/assert.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/assert.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,49 +0,0 @@
-//  $Id: assert.hxx,v 1.4 2003/06/20 20:54:23 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_ASSERT_HXX
-#define HEADER_ASSERT_HXX
-
-#include <assert.h>
-#include <stdlib.h>
-#include <iostream>
-
-// A collection of assert helper functions
-
-#ifdef NDEBUG
-#  define AssertMsg(assert, message)
-#  define Bailout(message)
-#else 
-#  define AssertMsg(assert, message) \
-  if (assert) \
-  { \
-  } \
-  else \
-  { \
-    std::cout << "!!!!!!!!!!!!! Assert !!!!!!!!!!!!!!!!!!\n" \
-      << __FILE__ << ":" << __LINE__ << ": assertion '" << #assert << "' failed" << std::endl \
-      << "Func: " << __PRETTY_FUNCTION__ << std::endl << "Msg:  " << message << std::endl; \
-    exit(EXIT_FAILURE); \
-  }
-#  define Bailout(message) assert(!message)
-#endif
-
-#endif
-
-/* EOF */

Copied: trunk/src/astar_pathfinder.hpp (from rev 341, trunk/src/astar_pathfinder.hxx)


Property changes on: trunk/src/astar_pathfinder.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/astar_pathfinder.hxx
===================================================================
--- trunk/src/astar_pathfinder.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/astar_pathfinder.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,91 +0,0 @@
-//  $Id: astar_pathfinder.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_ASTAR_PATHFINDER_HXX
-#define HEADER_ASTAR_PATHFINDER_HXX
-
-#include <queue>
-#include <vector>
-#include "field.hxx"
-#include "pathfinder.hxx"
-
-/** AStar Pathfinder */
-class AStarPathfinder
-{
-public:
-  enum State { WORKING,
-               NO_PATH_AVAILABLE, 
-               PATH_FOUND, 
-               ALREADY_ON_GOAL };
-
-  struct Node {
-    bool visited;
-    unsigned char parent;
-    unsigned int  cost;
-
-    short x;
-    short y;
-  };
-
-  struct PQComp
-  {
-    bool operator()(Node* a, Node* b) {
-      return a->cost > b->cost;
-    }
-  };
-private:
-  Field<int>& field;
-  Field<Node> node_field;
-  std::priority_queue<Node*,
-                      std::vector<Node*>, 
-                      PQComp> open_nodes;
-
-  Pos start;
-  Pos end;
-  std::vector<Pos> path;
-
-  State state;
-public:
-  AStarPathfinder(Field<int>* arg_field);
-  
-  void init(Pos& arg_start, Pos& arg_end);
-
-  bool finished();
-  bool is_path_node(int x, int y);
-
-  std::vector<Pos>& get_path() { return path; }
-
-  State get_state() { return state; }
-  void construct_path();
-  void make_neighbors_open(Node& cnode);
-  void process_one_open_node();
-  void add_to_open_nodes(Node& cnode);
-
-  Node& resolve_parent(Node& node);
-
-  void display();
-};
-
-#endif
-
-// Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 astar_pathfinder.cxx  -o astar_pathfinder -lclanCore"
-// End:
-
-/* EOF */

Copied: trunk/src/background.hpp (from rev 341, trunk/src/background.hxx)


Property changes on: trunk/src/background.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/background.hxx
===================================================================
--- trunk/src/background.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/background.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,49 +0,0 @@
-//  $Id: background.hxx,v 1.9 2003/10/20 21:30:09 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef FEUERKRAFT_BACKGROUND_HH
-#define FEUERKRAFT_BACKGROUND_HH
-
-#include <ClanLib/Display/sprite.h>
-#include <ClanLib/Display/surface.h>
-
-#include "game_obj.hxx"
-
-/** should be moved to groundmaps/.. and renamed to BaseGroundMap or
-    something like that */
-class Background 
-  : public GameObj
-{
-private:
-  CL_Sprite sprite;
-  float z_pos;
-
-public:
-  Background(const CL_Sprite& sprite, float z_pos);
-  virtual ~Background () {}
-
-  void draw (View& draw);
-  void update (float delta) {}
-
-  virtual float  get_z_pos () { return z_pos; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/bfirst_pathfinder.hpp (from rev 341, trunk/src/bfirst_pathfinder.hxx)


Property changes on: trunk/src/bfirst_pathfinder.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/bfirst_pathfinder.hxx
===================================================================
--- trunk/src/bfirst_pathfinder.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/bfirst_pathfinder.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,80 +0,0 @@
-//  $Id: bfirst_pathfinder.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_BFIRST_PATHFINDER_HXX
-#define HEADER_BFIRST_PATHFINDER_HXX
-
-#include <list>
-#include "field.hxx"
-#include "pathfinder.hxx"
-
-/** Breadth First Pathfinder */
-class BFirstPathfinder
-{
-public:
-  struct Node
-  {
-    bool visited;
-    unsigned char parent;
-    unsigned int  cost;
-    short x;
-    short y;
-  };
-
-  enum State { WORKING,
-               NO_PATH_AVAILABLE, 
-               PATH_FOUND, 
-               ALREADY_ON_GOAL };
-private:
-  Field<int>& field;
-  Field<Node> node_field;
-  std::list<Node*> open_nodes;
-  Pos start;
-  Pos end;
-  std::vector<Pos> path;
-
-  State state;
-public:
-  BFirstPathfinder(Field<int>* arg_field);
-  
-  void init(Pos& arg_start, Pos& arg_end);
-
-  bool finished();
-  bool is_path_node(int x, int y);
-
-  std::vector<Pos>& get_path() { return path; }
-
-  State get_state() { return state; }
-  void construct_path();
-  void make_neighbors_open(Node& cnode);
-  void process_one_open_node();
-  void add_to_open_nodes(Node& cnode);
-
-  Node& resolve_parent(Node& node);
-
-  void display();
-};
-
-// Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 bfirst_pathfinder.cxx  -o bfirst_pathfinder -lclanCore"
-// End:
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/ammotent.hpp (from rev 341, trunk/src/buildings/ammotent.hxx)


Property changes on: trunk/src/buildings/ammotent.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/ammotent.hxx
===================================================================
--- trunk/src/buildings/ammotent.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/ammotent.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,50 +0,0 @@
-//  $Id: ammotent.hxx,v 1.11 2003/06/22 19:22:56 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef AMMOTENT_HH
-#define AMMOTENT_HH
-
-#include <ClanLib/Display/sprite.h>
-
-#include "../view.hxx"
-#include "building.hxx"
-
-class Ammotent : public Building
-{
-private:
-  CL_Sprite ammotent;
-  FloatVector2d pos;
-  bool reloading;
-  
-public:
-  Ammotent (const AList& lst);
-  virtual ~Ammotent ();
-
-  void draw (View& view);
-  void draw_radar (Radar& radar);
-
-  void update (float delta);  
-
-  int get_map_width () { return 2; }
-  int get_map_height () { return 2; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/building.hpp (from rev 341, trunk/src/buildings/building.hxx)


Property changes on: trunk/src/buildings/building.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/building.hxx
===================================================================
--- trunk/src/buildings/building.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/building.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,97 +0,0 @@
-//  $Id: building.hxx,v 1.13 2003/08/20 00:02:46 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef BUILDING_HXX
-#define BUILDING_HXX
-
-#include "../alist.hxx"
-
-// Begin: Forward declarations
-class GameWorld;
-class Projectile;
-class Radar;
-class PropertySet;
-class View;
-class Radar;
-// End: Forward declarations
-
-class Building
-{
-private:
-  int id;
-  void register_properties();
-
-protected:
-  PropertySet* properties;
-
-  /** Position in units of tiles */
-  int x_pos;
-  /** Position in units of tiles */
-  int y_pos;
-
-public:
-  Building (const AList& lst);
-  virtual ~Building ();
-  
-  PropertySet* get_properties() { return properties; }
-
-  void set_id(int i) { id = i; }
-  int  get_id() { return id; }
-
-  // Draw the object onto the screen
-  virtual void draw (View& view) =0;
-
-  virtual void draw_energie (View& view) {}
-  
-  virtual void draw_radar (Radar& radar);
-
-  // Update the object once a game loop
-  virtual void update (float) =0;
-
-  int get_x_pos () { return x_pos; }
-  int get_y_pos () { return y_pos; }
-  
-  /** Returns the width which this building will take on the BuildingMap */
-  virtual int get_map_width () =0;
-
-  /** Returns the height which this building will take on the BuildingMap */
-  virtual int get_map_height () =0;
-
-  virtual void collide (Projectile*) {}
-
-  virtual void collide (int energie) {}
-
-  /** is_at() can be overwritten to provide a more detailed building
-      'resolution', so that buildings can be subgrid large 
-      FIXME: Looks a bit hack like and doesn't work at polygon level  */
-  virtual bool is_at (float x, float y) { return true; }
-
-  /** If returns false the building is temporary inactive and will be
-      'removed' from the collision map */
-  virtual bool is_active() { return true; }
-
-  /** If returns true the building will act normal, when returning
-      false the building will 'disapear' from the collision map
-   */
-  virtual bool alive () { return true; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/building_manager.hpp (from rev 341, trunk/src/buildings/building_manager.hxx)


Property changes on: trunk/src/buildings/building_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/building_manager.hxx
===================================================================
--- trunk/src/buildings/building_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/building_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,54 +0,0 @@
-//  $Id: building_manager.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_BUILDING_MANAGER_HXX
-#define HEADER_FEUERKRAFT_BUILDING_MANAGER_HXX
-
-#include <vector>
-
-class Building;
-
-/** */
-class BuildingManager
-{
-private:
-  static BuildingManager* current_;
-  static int next_id;
-public:
-  static BuildingManager* current() { return current_; }
-
-private:
-  typedef std::vector<Building*> Buildings;
-  Buildings buildings;
-
-public:
-  BuildingManager();
-  ~BuildingManager();
-  
-  Building* get_building_by_id(int handle);
-  void add_building(Building* building, int x, int y);
-  
-private:
-  BuildingManager (const BuildingManager&);
-  BuildingManager& operator= (const BuildingManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/building_map.hpp (from rev 341, trunk/src/buildings/building_map.hxx)


Property changes on: trunk/src/buildings/building_map.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/building_map.hxx
===================================================================
--- trunk/src/buildings/building_map.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/building_map.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,73 +0,0 @@
-//  $Id: building_map.hxx,v 1.9 2003/06/22 19:22:56 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef BUILDINGMAP_HXX
-#define BUILDINGMAP_HXX
-
-#include <vector>
-#include "building_map_data.hxx"
-#include "../game_obj.hxx"
-
-class FloatVector2d;
-class View;
-class Building;
-class Radar;
-
-typedef Building* BuildingPtr;
-
-class BuildingMap : public BuildingMapData,
-		    public GameObj
-{
-private:
-  /** A list with all the buildings in this map, the pointers here need to be deleted! */
-  std::vector<Building*> buildings;
-
-  /** This is a 'TileMap' with points to all buildings. Pointers in
-      this list must not be deleted, they are only references to
-      'buildings' */
-  std::vector<Building*> building_map;
-
-public:
-  BuildingMap (const BuildingMapData&);
-  virtual ~BuildingMap () {}
-
-  int get_width () { return width; }
-  int get_height () { return height; }
-
-  // Draw the object onto the screen
-  virtual void draw (View& view);
-  virtual void draw_energie (View& view);
-  virtual void draw_radar (Radar& radar);
-  
-  // Update the object once a game loop
-  virtual void update (float);
-
-  void add_building(Building* building, int x, int y);
-
-  BuildingPtr get_building (const FloatVector2d& pos);
-  
-  /** FIXME: Not the cleanest API solution */
-  std::vector<Building*>& get_buildings ();
-
-  GameObjData* get_data ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/building_map_data.hpp (from rev 341, trunk/src/buildings/building_map_data.hxx)


Property changes on: trunk/src/buildings/building_map_data.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/building_map_data.hxx
===================================================================
--- trunk/src/buildings/building_map_data.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/building_map_data.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,64 +0,0 @@
-//  $Id: building_map_data.hxx,v 1.6 2003/06/22 19:22:56 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef BUILDINGMAPDATA_HXX
-#define BUILDINGMAPDATA_HXX
-
-#include <vector>
-#include <guile/gh.h>
-#include "../alist.hxx"
-#include "../game_obj_data.hxx"
-
-class BuildingMap;
-
-typedef std::pair<std::string, AList> BuildingData;
-
-/** The BuildingMap is something like a TileMap which holds pointers
-    to all Buildings. It is used to hold the Building's instead of the
-    GameWorld to make Collision Handling simpler and to guaranty that
-    the buildings are correctly aligned.
-*/
-class BuildingMapData : public GameObjData
-{
-protected:
-  /** A list with all the buildings */
-  std::vector<BuildingData> buildings_data;
-
-  int width;
-  int height;
-public:
-  /** Format:
-      (buildingmapdata (tower (angle 102)
-                              (pos 10 20)))
-
-      Where desc is only the cdr of the above thing.
-   */
-  BuildingMapData (SCM desc);
-  virtual ~BuildingMapData ();
-  
-  GameObj* create();
-
-  /** Convert the data from a given data object into an SCM which can
-      be written to a save game file or similar things */
-  SCM dump_to_scm ();  
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/building_type_manager.hpp (from rev 341, trunk/src/buildings/building_type_manager.hxx)


Property changes on: trunk/src/buildings/building_type_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/building_type_manager.hxx
===================================================================
--- trunk/src/buildings/building_type_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/building_type_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,107 +0,0 @@
-//  $Id: building_type_manager.hxx,v 1.5 2003/08/20 00:15:10 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_BUILDING_TYPE_MANAGER_HXX
-#define HEADER_BUILDING_TYPE_MANAGER_HXX
-
-#include <vector>
-#include <assert.h>
-#include "../alist.hxx"
-#include "custom_building.hxx"
-
-class Building;
-
-struct BuildingFactory {
-  /** The id by which the factory can be refered to */
-  int id;
-
-  /** A symbolic name for the factory, which is another way to refer
-      to the factory. It is used for serialisations for better
-      portability. */
-  std::string name;
-
-  BuildingFactory() {}
-  virtual ~BuildingFactory() {}
-
-  virtual Building* create(const AList& lst) =0;
-};
-
-struct CustomBuildingFactory 
-  : public BuildingFactory
-{
-  AList prefs;
-  CustomBuildingFactory(const std::string& arg_name, const AList& arg_prefs)
-    : prefs(arg_prefs)
-  {
-    name = arg_name;
-  }
-
-  virtual ~CustomBuildingFactory() {}
-
-  Building* create(const AList& lst) {
-    return new CustomBuilding(prefs, lst);
-  }
-};
-
-template<class C>
-struct GenericBuildingFactory 
-  : public BuildingFactory 
-{
-  GenericBuildingFactory(const std::string& arg_name) 
-  {
-    name = arg_name;
-  }
-  
-  Building* create(const AList& lst) {
-    return new C(lst);
-  }
-};
-
-/** */
-class BuildingTypeManager
-{
-private:
-  static BuildingTypeManager* current_;
-public:
-  static BuildingTypeManager* current() { assert(current_); return current_; }
-private:
-  int next_id;
-
-  typedef std::vector<BuildingFactory*>  Factories;
-  Factories factories;
-public:
-  BuildingTypeManager();
-
-  /** Register a building factory
-      @return handle for this type of building */
-  int register_factory(BuildingFactory* factory);
-
-  int name_to_id(const std::string& name);
-  std::string id_to_name(int id);
-
-  Building* create_building(int type_id, const AList& params);
-  
-private:
-  BuildingTypeManager (const BuildingTypeManager&);
-  BuildingTypeManager& operator= (const BuildingTypeManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/custom_building.hpp (from rev 341, trunk/src/buildings/custom_building.hxx)


Property changes on: trunk/src/buildings/custom_building.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/custom_building.hxx
===================================================================
--- trunk/src/buildings/custom_building.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/custom_building.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,65 +0,0 @@
-//  $Id: custom_building.hxx,v 1.6 2003/06/22 19:22:56 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_CUSTOM_BUILDING_HXX
-#define HEADER_CUSTOM_BUILDING_HXX
-
-#include <ClanLib/Display/sprite.h>
-#include "../energie.hxx"
-#include "building.hxx"
-
-class AList;
-
-/** The CustomBuilding is a special kind of building that is
-    customizable in a number of ways, its surface, size, covered
-    region, energie, armor and other stuff can be customized via
-    parameters. It is mainly there to allow users to create there own
-    building types from Scheme */
-class CustomBuilding : public Building
-{
-private:
-  CL_Sprite sprite;
-  Energie energie;
-
-  int width;
-  int height;
-public:
-  CustomBuilding(const AList& type, const AList& lst);
-  virtual ~CustomBuilding() {}
-
-  int get_x_pos () { return x_pos; }
-  int get_y_pos () { return y_pos; }
-
-  void draw(View&);
-  void draw_energie(View& view);
-
-  void update(float);
-
-  int  get_map_width() { return width; }
-  int  get_map_height() { return height; }
-
-  void collide (Projectile*);
-private:
-  CustomBuilding (const CustomBuilding&);
-  CustomBuilding& operator= (const CustomBuilding&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/fuelstation.hpp (from rev 341, trunk/src/buildings/fuelstation.hxx)


Property changes on: trunk/src/buildings/fuelstation.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/fuelstation.hxx
===================================================================
--- trunk/src/buildings/fuelstation.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/fuelstation.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,53 +0,0 @@
-//  $Id: fuelstation.hxx,v 1.11 2003/06/22 19:22:56 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef FUELSTATION_HH
-#define FUELSTATION_HH
-
-#include <ClanLib/Display/sprite.h>
-#include "../view.hxx"
-#include "building.hxx"
-
-class Fuelstation
-  : public Building
-{
-private:
-  CL_Sprite fuelstation;
-  FloatVector2d pos;
-
-  /** The refueling variable keeps track if the fuelstation is
-      currently refueling a vehicle, which triggers a blink-mark to
-      indicate that to the user */
-  bool refueling;
-public:
-  Fuelstation (const AList& lst);
-  virtual ~Fuelstation ();
-
-  void draw(View& view);
-  void draw_radar(Radar& radar);
-
-  void update (float delta);
-
-  int get_map_width () { return 2; }
-  int get_map_height () { return 2; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/headquarter.hpp (from rev 341, trunk/src/buildings/headquarter.hxx)


Property changes on: trunk/src/buildings/headquarter.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/headquarter.hxx
===================================================================
--- trunk/src/buildings/headquarter.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/headquarter.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,58 +0,0 @@
-//  $Id: headquarter.hxx,v 1.10 2003/06/22 19:22:56 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADQUARTER_HH
-#define HEADQUARTER_HH
-
-#include "../energie.hxx"
-#include "building.hxx"
-#include "../projectile.hxx"
-
-class Headquarter : public Building
-{
-private:
-  FloatVector2d pos;
-  CL_Sprite headquarter;
-  CL_Sprite headquarter_damaged;
-  CL_Sprite headquarter_destroyed;
-  CL_Sprite* current_sur;
-  Energie energie;
-  bool destroyed;
-  
-public:
-  Headquarter(const AList& lst);
-  virtual ~Headquarter();
-
-  void draw(View&);
-  void draw_radar(Radar& radar);
-
-  void update (float delta);
-
-  bool is_colliding (FloatVector2d obj_pos);
-  void collide (Projectile*);
-
-  int get_map_width ()  { return 2; }
-  int get_map_height () { return 2; }
-
-  bool alive ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/tower.hpp (from rev 341, trunk/src/buildings/tower.hxx)


Property changes on: trunk/src/buildings/tower.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/tower.hxx
===================================================================
--- trunk/src/buildings/tower.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/tower.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,74 +0,0 @@
-//  $Id: tower.hxx,v 1.11 2003/06/22 19:22:56 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef TOWER_HXX
-#define TOWER_HXX
-
-#include <ClanLib/Display/sprite.h>
-#include "../energie.hxx"
-#include "../unit.hxx"
-#include "building.hxx"
-
-class Controller;
-class GameWorld;
-
-class Tower : public Building,
-              public Unit
-{
-private:
-  CL_Sprite towerbase;
-  CL_Sprite towerdamaged;
-  CL_Sprite towerdestroyed;
-  CL_Sprite turret;
-  
-  float steering;
-  float orientation;
-  Energie energie;
-  bool destroyed;
-
-  /** The position is just for easier handling here, the real position
-      is due to the position in the building map */
-  FloatVector2d pos;
-public:
-  Tower(const AList& lst);
-  virtual ~Tower();
-  
-  // Draw the object onto the screen
-  void draw (View& view);
-  void draw_energie (View& view);
-  void draw_radar (Radar& radar);
-
-  // Update the object once a game loop
-  void update (float);
-  
-  void update_controlls(const Controller& controller);
-
-  int get_map_width ()  { return 2; }
-  int get_map_height () { return 2; }
-
-  void collide (Projectile*);
-  void collide (int energie);
-
-  float get_orientation() const { return orientation; }
-  bool alive ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/tower_ai.hpp (from rev 341, trunk/src/buildings/tower_ai.hxx)


Property changes on: trunk/src/buildings/tower_ai.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/tower_ai.hxx
===================================================================
--- trunk/src/buildings/tower_ai.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/tower_ai.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,42 +0,0 @@
-//  $Id: tower_ai.hxx,v 1.1 2003/06/18 13:04:21 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_TOWER_AI_HXX
-#define HEADER_TOWER_AI_HXX
-
-#include "../input/controller.hxx"
-#include "../ai.hxx"
-#include "tower.hxx"
-
-/** */
-class TowerAI : public AI
-{
-private:
-  Tower* tower;
-  Controller controller;
-  float ai_count;
-public:
-  TowerAI(Tower* arg_tower);
-  GameObj* get_object();
-  void update(float delta);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/wall.hpp (from rev 341, trunk/src/buildings/wall.hxx)


Property changes on: trunk/src/buildings/wall.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/wall.hxx
===================================================================
--- trunk/src/buildings/wall.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/wall.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,54 +0,0 @@
-//  $Id: wall.hxx,v 1.11 2003/06/22 19:22:56 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_WALL_HXX
-#define HEADER_FEUERKRAFT_WALL_HXX
-
-#include <ClanLib/Display/sprite.h>
-#include "../vector2d.hxx"
-
-#include "building.hxx"
-
-class Wall : public Building
-{
-private:
-  FloatVector2d pos;
-  CL_Sprite wall;
-  CL_Sprite wall_damaged;
-  CL_Sprite wall_destroyed;
-  int energie;
-public:
-  Wall(const AList& lst);
-  virtual ~Wall();
-
-  void draw (View& view);
-  void draw_radar (Radar& radar);
-
-  void update(float);
-  void collide (Projectile*);
-
-  int get_map_width ()  { return 1; }
-  int get_map_height () { return 1; }
-
-  bool alive ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/buildings/wall_door.hpp (from rev 341, trunk/src/buildings/wall_door.hxx)


Property changes on: trunk/src/buildings/wall_door.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/wall_door.hxx
===================================================================
--- trunk/src/buildings/wall_door.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/buildings/wall_door.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,64 +0,0 @@
-//  $Id: wall_door.hxx,v 1.10 2003/06/22 19:22:56 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef WALLDOOR_HXX
-#define WALLDOOR_HXX
-
-#include <ClanLib/Display/sprite.h>
-#include <ClanLib/Core/Math/cl_vector.h>
-
-#include "../vector2d.hxx"
-#include "building.hxx"
-
-class View;
-class Radar;
-class Projectile;
-
-class WallDoor : public Building
-{
-private:
-  CL_Sprite sprite;
-  int map_width;
-  int map_height;
-  typedef enum { S_OPENED, S_CLOSED } Status;
-  Status status;
-  
-  /** Just for caching purpose */
-  FloatVector2d pos;
-
-public:
-  WallDoor(const AList& lst);
-  virtual ~WallDoor();
-
-  void draw (View& view);
-  void draw_radar (Radar& radar);
-
-  void update(float);
-  void collide (Projectile*);
-
-  int get_map_width ()  { return map_width; }
-  int get_map_height () { return map_height; }
-
-  bool is_active ();
-  bool alive ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/collision_manager.hpp (from rev 341, trunk/src/collision_manager.hxx)


Property changes on: trunk/src/collision_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/collision_manager.hxx
===================================================================
--- trunk/src/collision_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/collision_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,91 +0,0 @@
-//  $Id: collision_manager.hxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_COLLISION_MANAGER_HXX
-#define HEADER_FEUERKRAFT_COLLISION_MANAGER_HXX
-
-#include <vector>
-#include "math.hxx"
-
-class View;
-
-/** */
-class CollisionManager
-{
-private:
-  enum { SHAPE_CIRCLE, SHAPE_RECT }; 
-
-  struct Circle {
-    int object_id;
-    float x, y;
-    float radius;
-  };
-
-  struct Rectangle {
-    int object_id;
-    float x, y;
-    float width, height;
-    float orientation;
-  };
-
-  struct Shape {
-    int type;
-
-    union {
-      struct Circle    circle;
-      struct Rectangle rect;
-    };
-  };
-
-  typedef std::vector<Shape> Shapes;
-  Shapes shapes;
-
-  Math::Quad rect2quad(const Rectangle& rect);
-
-  void check_rect_rect_collision(const Rectangle& rect1, const Rectangle& rect2);
-  void check_circle_rect_collision(const Circle& circle, const Rectangle& rect);
-  void check_circle_circle_collision(const Circle& circle1, const Circle& circle2);
-
-  static CollisionManager* current_;
-public:
-  static CollisionManager* current();
-  
-  CollisionManager();
-  
-  /** Removes all collisions shapes and starts a new run */
-  void clear();
-
-  /** Runs the collision check */
-  void run();
-
-  void draw(View& view);
-
-  /** */
-  void add_point(int object_id, float x, float y);
-
-  /** */
-  void add_circle(int object_id, float x, float y, float radius);
-
-  /** */
-  void add_rect(int object_id, float x, float y, float width, float height, float orientation);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/color.hpp (from rev 341, trunk/src/color.hxx)


Property changes on: trunk/src/color.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/color.hxx
===================================================================
--- trunk/src/color.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/color.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,47 +0,0 @@
-//  $Id: color.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_COLOR_HXX
-#define HEADER_COLOR_HXX
-
-#include <ClanLib/Display/color.h>
-
-/** */
-class Color
-{
-private:
-public:
-  float red;
-  float green;
-  float blue;
-  float alpha;
-
-  /** Init the color to white */
-  Color();
-  
-  /** Set color to the given RGB value */
-  Color(float red_, float green_, float blue_, float alpha_ = 1.0f);
-
-  /** @return the CL_Color version of the same color */
-  CL_Color get_cl_color() const;
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/command_line_arguments.hpp (from rev 341, trunk/src/command_line_arguments.hxx)


Property changes on: trunk/src/command_line_arguments.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/command_line_arguments.hxx
===================================================================
--- trunk/src/command_line_arguments.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/command_line_arguments.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,72 +0,0 @@
-//  $Id: command_line_arguments.hxx,v 1.5 2003/10/31 23:24:41 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_COMMAND_LINE_ARGUMENTS_HXX
-#define HEADER_FEUERKRAFT_COMMAND_LINE_ARGUMENTS_HXX
-
-#include <string>
-
-/** */
-struct CommandLineArguments
-{
-public:
-  int screen_width;
-  int screen_height;
-  
-  /** Mission file to start, empty() if non is given */
-  std::string mission_file;
-
-  /** Path to all the datafiles */
-  std::string datadir;
-  std::string controller_file;
-
-  /** File to which all input events should be logged */
-  std::string event_record_file;
-
-  /** Directory to which gameplay-video (aka screenshots) get saved */
-  std::string video_record_directory;
-
-  /** File from which recorded events will be played back */
-  std::string playback_file;
-
-  /** number of fps to which the game should limit itself */
-  float fps;
-
-  /** Number of the joystick to use, -1 for keyboard support */
-  int joystick;
-
-  bool music_enabled;
-  bool sound_enabled;
-
-  bool fullscreen;
-
-  bool verbose;
-
-  CommandLineArguments();
-  CommandLineArguments(int argc, char** argv);
-
-  void load_defaults();
-  void parse_arguments(int argc, char** argv);
-};
-
-extern CommandLineArguments* args;
-
-#endif
-
-/* EOF */

Copied: trunk/src/communication_dialog.hpp (from rev 341, trunk/src/communication_dialog.hxx)


Property changes on: trunk/src/communication_dialog.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/communication_dialog.hxx
===================================================================
--- trunk/src/communication_dialog.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/communication_dialog.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,59 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_COMMUNICATION_DIALOG_HXX
-#define HEADER_COMMUNICATION_DIALOG_HXX
-
-#include <map>
-#include <ClanLib/Display/sprite.h>
-#include "gui_obj.hxx"
-
-/** */
-class CommunicationDialog : public GuiObj
-{
-private:
-  class Message {
-  public:
-    unsigned int time;
-    std::string  text;
-  };
-
-  typedef std::map<int, Message> Messages;
-  Messages messages;
-  CL_Sprite spike;
-
-  static CommunicationDialog* current_;
-public:
-  static CommunicationDialog* current() { return current_; }
-
-  CommunicationDialog();
-  ~CommunicationDialog();
-
-  void send(int id, const std::string& message);
-
-  void draw (CL_GraphicContext& gc);
-  void update (float delta);
-private:
-  CommunicationDialog (const CommunicationDialog&);
-  CommunicationDialog& operator= (const CommunicationDialog&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/controller_def.hpp (from rev 341, trunk/src/controller_def.hxx)


Property changes on: trunk/src/controller_def.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/controller_def.hxx
===================================================================
--- trunk/src/controller_def.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/controller_def.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,45 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_CONTROLLER_DEF_HXX
-#define HEADER_CONTROLLER_DEF_HXX
-
-#include <string>
-
-enum AxisName       { ORIENTATION_AXIS, ACCELERATE_AXIS, STRAFE_AXIS };
-enum ButtonName     { PRIMARY_FIRE_BUTTON, SECONDARY_FIRE_BUTTON, USE_BUTTON, MENU_BUTTON };
-
-/** */
-class ControllerDef
-{
-private:
-public:
-  static int         get_button_count();
-  static int         get_axis_count();
-
-  static std::string button_id2name(int id);
-  static int         button_name2id(const std::string& name);
-
-  static std::string axis_id2name(int id);
-  static int         axis_name2id(const std::string& name);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/dijkstra_pathfinder.hpp (from rev 341, trunk/src/dijkstra_pathfinder.hxx)


Property changes on: trunk/src/dijkstra_pathfinder.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/dijkstra_pathfinder.hxx
===================================================================
--- trunk/src/dijkstra_pathfinder.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/dijkstra_pathfinder.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,100 +0,0 @@
-//  $Id: dijkstra_pathfinder.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_DIJKSTRA_PATHFINDER_HXX
-#define HEADER_DIJKSTRA_PATHFINDER_HXX
-
-#include <queue>
-#include <vector>
-#include "field.hxx"
-#include "pathfinder.hxx"
-
-/** Dijkstra Pathfinder */
-class DijkstraPathfinder
-{
-public:
-  enum State { WORKING,
-               NO_PATH_AVAILABLE, 
-               PATH_FOUND, 
-               ALREADY_ON_GOAL };
-
-  struct Node {
-#if 0
-    bool visited;
-    unsigned char parent;
-    unsigned int  cost;
-
-    short x;
-    short y;
-#else
-    unsigned int visited : 1;
-    unsigned int parent  : 3;
-    unsigned int cost    : 8;
-    unsigned int x       : 8;
-    unsigned int y       : 8;
-#endif
-  };
-
-  struct PQComp
-  {
-    bool operator()(Node* a, Node* b) {
-      return a->cost > b->cost;
-    }
-  };
-private:
-  Field<int>& field;
-  Field<Node> node_field;
-  typedef std::priority_queue<Node*,
-                      std::vector<Node*>, 
-                      PQComp> OpenNodes;
-  OpenNodes open_nodes;
-
-  Pos start;
-  Pos end;
-  std::vector<Pos> path;
-
-  State state;
-public:
-  DijkstraPathfinder(Field<int>* arg_field);
-  
-  void init(Pos& arg_start, Pos& arg_end);
-
-  bool finished();
-  bool is_path_node(int x, int y);
-
-  std::vector<Pos>& get_path() { return path; }
-
-  State get_state() { return state; }
-  void construct_path();
-  void make_neighbors_open(Node& cnode);
-  void process_one_open_node();
-  void add_to_open_nodes(Node& cnode);
-
-  Node& resolve_parent(Node& node);
-
-  void display();
-};
-
-#endif
-
-// Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 dijkstra_pathfinder.cxx  -o dijkstra_pathfinder -lclanCore"
-// End:
-
-/* EOF */

Copied: trunk/src/display/drawing_context.hpp (from rev 342, trunk/src/display/drawing_context.hxx)


Property changes on: trunk/src/display/drawing_context.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Deleted: trunk/src/display/drawing_context.hxx
===================================================================
--- trunk/src/display/drawing_context.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/display/drawing_context.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,102 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_DRAWING_CONTEXT_HXX
-#define HEADER_DRAWING_CONTEXT_HXX
-
-#include <ClanLib/Core/Math/rect.h>
-#include <ClanLib/Display/color.h>
-#include <vector>
-#include "drawing_request.hxx"
-
-class CL_Sprite;
-
-/** The DrawingContext collects all DrawingRequests and allows you to
-    flush them all down to the graphics card in one run, this has the
-    advantage that it is possible to z-sort, texture-id sort or
-    otherwise optimize the drawing. In addition to that it also allows
-    you do render the drawing commands to multiple buffers which might
-    be usefull for post-processing effects and such. */
-class DrawingContext
-{
-private:
-  typedef std::vector<DrawingRequest*> DrawingRequests;
-  DrawingRequests drawingrequests;
-
-  std::vector<CL_Pointf> translate_stack;
-
-public:
-  DrawingContext();
-
-  /** Draws everything in the drawing context to the screen */
-  void render(CL_GraphicContext* gc);
-
-  /** Empties the drawing context */
-  void clear();
-
-  /** Fills the screen with a given color, this is different from
-      clear() in that it doesn't remove other DrawingRequest from the
-      queue */
-  void fill_screen(const CL_Color& color);
-
-  /*{ */
-  void draw(DrawingRequest* request);
-  void draw(const CL_Sprite&   sprite,  float x, float y, float z = 0);
-  void draw(const std::string& text,    float x, float y, float z = 0);
-
-  void draw_line (float x1, float y1, float x2, float y2, 
-		  const CL_Color& color);
-  void draw_fillrect (float x1, float y1, float x2, float y2, 
-		      const CL_Color& color);
-  void draw_rect (float x1, float y1, float x2, float y2, 
-		  const CL_Color& color);
-  void draw_pixel (float x_pos, float y_pos, 
-		   const CL_Color& color);
-  void draw_circle (float x_pos, float y_pos, float radius,
-                    const CL_Color& color);
-
-  /** Draws an arc, starting from angle_start to angle_end in
-      counterclockwise direction. Angles are taken in radian */
-  void draw_arc (float x_pos, float y_pos, float radius, float angle_start, float angle_end,
-                 const CL_Color& color);
-  /*} */
-  
-  /** Translate the drawing context */
-  void translate(float x, float y);
-
-  /** Set the rotation of the drawing context */
-  void rotate(float angel);
-
-  /** Set the scaling of the drawing context */
-  void scale(float x, float y);
-
-  void push_modelview();
-  void pop_modelview();
-  void reset_modelview();
-
-  /** Return the area of the screen that will be visible*/
-  CL_Rect get_clip_rect();
-private:
-  DrawingContext (const DrawingContext&);
-  DrawingContext& operator= (const DrawingContext&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/display/drawing_request.hpp (from rev 342, trunk/src/display/drawing_request.hxx)


Property changes on: trunk/src/display/drawing_request.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Deleted: trunk/src/display/drawing_request.hxx
===================================================================
--- trunk/src/display/drawing_request.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/display/drawing_request.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,51 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_DRAWING_REQUEST_HXX
-#define HEADER_DRAWING_REQUEST_HXX
-
-#include <ClanLib/Core/Math/cl_vector.h>
-
-class CL_GraphicContext;
-
-/** 
- */
-class DrawingRequest
-{
-protected:
-  CL_Vector pos;
-public:
-  DrawingRequest(const CL_Vector& pos_) : pos(pos_) {}
-  
-  virtual void draw(CL_GraphicContext* gc) = 0;
-  
-  /** Returns true if the request contains an alpha channel and needs
-      to be drawn in order */
-  virtual bool has_alpha() { return true; }
-
-  /** Returns the position at which the request should be drawn */
-  virtual float get_z_pos() { return pos.z; }
-private:
-  DrawingRequest (const DrawingRequest&);
-  DrawingRequest& operator= (const DrawingRequest&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/display/scene_context.hpp (from rev 342, trunk/src/display/scene_context.hxx)


Property changes on: trunk/src/display/scene_context.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Deleted: trunk/src/display/scene_context.hxx
===================================================================
--- trunk/src/display/scene_context.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/display/scene_context.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,82 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SCENE_CONTEXT_HXX
-#define HEADER_SCENE_CONTEXT_HXX
-
-#include "drawing_context.hxx"
-
-class SceneContextImpl;
-
-/** The SceneContext maintains all the different drawing layers to
-    which a game object can draw. Each drawing layer serves a
-    different purporse and all are combined in the end to form the
-    final image. */
-class SceneContext
-{
-public:
-  SceneContext();
-  ~SceneContext();
-  
-  /** The main drawing context, also known as color buffer, to this
-      you draw all normal graphics, sprites and enemies, as you would
-      do with a normal framebuffer */
-  DrawingContext& color();
-
-  /** This is the lightmap, to this you draw all lights, meaning that
-      a color of white will result in a area that is completly
-      visible, while a value of black will mean that the area will be
-      not lighted at all and be completly black. This lightmap is
-      multiplied with the color buffer to get the light effect */
-  DrawingContext& light();
-
-  /** The highlight map is usefull for all objects that are extremly
-      bright so that they generate a lenseflare or a glow. The
-      highlight map doesn't light the scenario itself, but gets
-      additionally rendered above the color and light buffer, thus its
-      allows to add glow without risking to losing it in an area of
-      darkness */
-  DrawingContext& highlight();
-
-  /** Translate the drawing context */
-  void translate(float x, float y);
-
-  /** Set the rotation of the drawing context */
-  void rotate(float angel);
-
-  /** Set the scaling of the drawing context */
-  void scale(float x, float y);
-
-  void push_modelview();
-  void pop_modelview();
-  void reset_modelview();
-
-  /** Takes all the buffers and combines them to form the final image
-      that will be shown on the screen */
-  void render();
-private:
-  SceneContextImpl* impl;
-
-  SceneContext (const SceneContext&);
-  SceneContext& operator= (const SceneContext&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/display_manager.hpp (from rev 341, trunk/src/display_manager.hxx)


Property changes on: trunk/src/display_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/display_manager.hxx
===================================================================
--- trunk/src/display_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/display_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,90 +0,0 @@
-//  $Id: display_manager.hxx,v 1.5 2003/10/31 23:24:41 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_DISPLAY_MANAGER_HXX
-#define HEADER_DISPLAY_MANAGER_HXX
-
-#include <vector>
-#include "screen.hxx"
-
-class GuiObj;
-class Menu;
-class Radar;
-class Help;
-class LevelMap;
-class VehicleStatus;
-class MessageBuffer;
-
-/** The DisplayManager manages all screen components, radar, levelmap,
-    menu playfield and other things. There is currently only one,
-    later it might need to be split up for multiplayer. */
-class DisplayManager
-{
-  // Static Part
-private:
-  static DisplayManager* current_;
-public:
-  static DisplayManager* current() { return current_; }; 
-  static void init();
-  static void deinit();
-
-  // Object Part
-private:
-  Screen  screen;
-
-  Help*          help;
-  LevelMap*      level_map;
-  Radar*         radar;
-  VehicleStatus* vehicle_status;
-  MessageBuffer* message_buffer;
-  typedef std::vector<Menu*> Menus;
-  Menus menu;
-public:
-  DisplayManager();
-  ~DisplayManager();
-
-  void add(GuiObj*);
-  void update(float delta);
-  void draw(CL_GraphicContext& gc);
-
-  void show_levelmap();
-  void hide_levelmap();
-  LevelMap* get_levelmap();
-
-  void show_help();
-  void hide_help();
-  
-  /** Show the given menu */
-  void push_menu(Menu* menu);
-  
-  void pop_menu();
-
-  /** Hide the current menu */
-  void hide_menu();
-
-  /** @return the currently shown menu or 0 if none is shown */
-  Menu* get_menu() const { if (menu.empty()) { return 0; } else { return menu.back(); } }
-private:
-  DisplayManager (const DisplayManager&);
-  DisplayManager& operator= (const DisplayManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/draw_circle.hpp (from rev 341, trunk/src/draw_circle.hxx)


Property changes on: trunk/src/draw_circle.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/draw_circle.hxx
===================================================================
--- trunk/src/draw_circle.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/draw_circle.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,104 +0,0 @@
-//  $Id: draw_circle.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_DRAW_CIRCLE_HXX
-#define HEADER_DRAW_CIRCLE_HXX
-
-#include <stdlib.h>
-#include "math.hxx"
-#include "field.hxx"
-
-// FIXME: no clipping
-void draw_fill_circle(Field<int>& field, int center_x, int center_y, int radius)
-{
-  int xchange = 1 - 2*radius;
-  int ychange = 1;
-  int x = radius;
-  int y = 0;
-  int radius_error = 0;
-  int pos[radius + 1];
-
-  while (x >= y)
-    {
-      pos[y] = x;
-      pos[x] = y;
-
-      ++y;
-      radius_error += ychange;
-      ychange += 2;
-      if (2*radius_error + xchange > 0)
-        {
-          --x;
-          radius_error += xchange;
-          xchange += 2;
-        }
-    }
-  
-  if (center_x > 0 && center_x < field.get_width())
-    for(int y = -pos[0]; y <= pos[0]; ++y)
-      ++field(center_x, center_y + y);
-
-  for(int x = 1; x <= radius; ++x)
-    for(int y = -pos[x]; y <= pos[x]; ++y)
-      {
-        ++field(center_x + x, center_y + y);
-        ++field(center_x - x, center_y + y);
-      }
-}
-
-/** */
-void draw_circle(Field<int>& field, int center_x, int center_y, int radius)
-{
-  int xchange = 1 - 2*radius;
-  int ychange = 1;
-  int x = radius;
-  int y = 0;
-  int radius_error = 0;
-  
-  while (x >= y)
-    {
-      field(center_x + x, center_y + y) = 8;
-      field(center_x - x, center_y + y) = 8;
-      field(center_x + x, center_y - y) = 8;
-      field(center_x - x, center_y - y) = 8;
-
-      field(center_x + y, center_y + x) = 8;
-      field(center_x - y, center_y + x) = 8;
-      field(center_x + y, center_y - x) = 8;
-      field(center_x - y, center_y - x) = 8;
-
-      ++y;
-      radius_error += ychange;
-      ychange += 2;
-      if (2*radius_error + xchange > 0)
-        {
-          --x;
-          radius_error += xchange;
-          xchange += 2;
-        }
-    }
-}
-
-#endif
-
-// Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 draw_circle.cxx  -o draw_circle -lclanCore"
-// End:
-
-/* EOF */

Copied: trunk/src/editor/editor.hpp (from rev 341, trunk/src/editor/editor.hxx)


Property changes on: trunk/src/editor/editor.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/editor/editor.hxx
===================================================================
--- trunk/src/editor/editor.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/editor/editor.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,37 +0,0 @@
-//  $Id: editor.hxx,v 1.1 2003/06/20 20:54:23 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_EDITOR_HXX
-#define HEADER_FEUERKRAFT_EDITOR_HXX
-
-/** Editor Layer for Feuerkraft, its not a self standing editor, but
-    more an in-game plug-in to manipulate the currently running world */
-class Editor
-{
-private:
-public:
-  Editor();
-private:
-  Editor (const Editor&);
-  Editor& operator= (const Editor&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/energie.hpp (from rev 341, trunk/src/energie.hxx)


Property changes on: trunk/src/energie.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/energie.hxx
===================================================================
--- trunk/src/energie.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/energie.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,67 +0,0 @@
-//  $Id: energie.hxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef ENERGIE_HH
-#define ENERGIE_HH
-
-#include <ClanLib/Core/System/system.h>
-
-#include "view.hxx"
-
-class Energie
-{
-private:
-  float max_energie;
-  float energie;
-  unsigned int last_change;
-
-public:
-  Energie ();
-  Energie (int arg_energie);
-
-  void set_max_energie(float max_energie);
-
-  void draw (View& view, int x_pos, int y_pos);
-  operator int () { return int(energie); }
-
-  void operator--() { 
-    --energie; 
-    last_change = CL_System::get_time ();
-  }
-
-  void operator++() {
-    ++energie; 
-    last_change = CL_System::get_time ();
-  }
-
-  void operator+=(int i) { 
-    energie += i; 
-    last_change = CL_System::get_time ();
-  }
-
-  void operator-=(int i) { 
-    energie -= i; 
-    last_change = CL_System::get_time ();
-  }
-
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/explosion.hpp (from rev 341, trunk/src/explosion.hxx)


Property changes on: trunk/src/explosion.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/explosion.hxx
===================================================================
--- trunk/src/explosion.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/explosion.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,50 +0,0 @@
-//  $Id: explosion.hxx,v 1.8 2003/06/06 09:49:00 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef EXPLOSION_HH
-#define EXPLOSION_HH
-
-#include "vector2d.hxx"
-#include "game_obj.hxx"
-#include "resource_manager.hxx"
-
-/** Particle emmitter for ExplosionParticles */
-class Explosion : public GameObj
-{
-private:
-  bool is_drawn;
-  float lifetime;
-  FloatVector2d pos;
-  float new_particle_time;
-  float size;
-public:
-  enum Size { SMALL, MEDIUM, LARGE } en_size;
-  
-  Explosion (const FloatVector2d& arg_pos, Size arg_size = SMALL);
-  void init ();
-
-  void draw (View& view);
-  void update (float);
-  bool removable ();
-  float get_z_pos ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/feuerkraft.hpp (from rev 341, trunk/src/feuerkraft.hxx)


Property changes on: trunk/src/feuerkraft.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/feuerkraft.hxx
===================================================================
--- trunk/src/feuerkraft.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/feuerkraft.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,108 +0,0 @@
-//  $Id: feuerkraft.hxx,v 1.8 2003/06/09 20:27:31 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef FEUERKRAFT_HH
-#define FEUERKRAFT_HH
-
-#include <ClanLib/application.h>
-
-class CL_DisplayWindow;
-class CommandLineArguments;
-
-/**
-   \mainpage %Feuerkraft Index Page
- 
-   \section intro Introduction
- 
-   This is the source code documentation for Feuerkraft, not all
-   members and functions might be documented, but source code is
-   included, so you might still figure out what a function should do
-   and what it shouldn't.
- 
-
-   \section code Quick Overview
-
-   A very quick overview about the source code, it works like this:
-
-   - everything starts from FeuerkraftMain
-
-   - FeuerkraftMain constructs the GameWorld and a View
-
-   - FeuerkraftMain enters a while(true) loop and updates the
-   GameWorld repeatatly and redraws the View as necessary
-
-   - everything in GameWorld is a GameObj and has a id, by which it
-   can be accessed
-
-   - GameObj objects are grouped into two main subclasses, Building
-   objects and Unit objects
-
-   - a Building is a GameObj that is aligned to the tile grid and
-   unmovable
-
-   - a Unit is something moveable, which is not restricted by the
-   tile grid and which the player can controll
-
-   - other GameObj objects might included brushes and other stuff that
-   is not controllable by the player, but that is not yet written
-
-   FIXME: Just a 'test' introduction, to fill the empty index page,
-   rewrite me with something usefull
-
-
-   \section style Coding Style
-   
-   Coding style is mostly the default GNU Emacs one for C++, in
-   addition to that namespaces have a indent level of 0.
-
-   Pointer holding objects allocated with \c new and which need to get
-   deleted by \c delete are named SomeObject*, while pointers which
-   only hold references to objects managed and allocated elsewhere are
-   named SomeObjectPtr. typedef for SomeObjectPtr should be in the
-   some_object.hxx file.
-*/
-
-/** Command Line arguments in a parsed and easily accessible form,
-    no need to touch \a argc or \a argv */
-extern CommandLineArguments* args;
-
-/** Feuerkraft is wrapper class around main(), which itself is part of
-    clanApp. */
-class Feuerkraft : public CL_ClanApplication
-{
-private:
-  /** Pointer to the main display window of Feuerkraft. FIXME: Could
-      probally be placed in a DisplayManager or something like that */
-  CL_DisplayWindow*     window;
-
-public:
-  Feuerkraft();
-  ~Feuerkraft();
-  
-  void init();
-  void deinit();
-  int  main(int argc, char** argv);
-
-private:
-  void key_down(const CL_InputEvent& event);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/feuerkraft_error.hpp (from rev 341, trunk/src/feuerkraft_error.hxx)


Property changes on: trunk/src/feuerkraft_error.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/feuerkraft_error.hxx
===================================================================
--- trunk/src/feuerkraft_error.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/feuerkraft_error.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,39 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_ERROR_HXX
-#define HEADER_FEUERKRAFT_ERROR_HXX
-
-#include <string>
-
-/** Exception class for all Feuerkraft errors */
-class FeuerkraftError
-{
-private:
-  std::string message;
-public:
-  FeuerkraftError(const std::string& message) 
-    : message(message) {}
-
-  const char* what() const throw() { return message.c_str(); }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/field.hpp (from rev 341, trunk/src/field.hxx)


Property changes on: trunk/src/field.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/field.hxx
===================================================================
--- trunk/src/field.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/field.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,67 +0,0 @@
-//  $Id: field.hxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef FIELD_HXX
-#define FIELD_HXX
-
-#include <vector>
-
-template<class T>
-class Field
-{
-private:
-  int width;
-  int height;
-  std::vector<T> data;
-public:
-  typedef typename std::vector<T>::iterator  iterator;
-
-  iterator begin() { return data.begin(); }
-  iterator end()   { return data.end(); }
-
-  Field (int arg_width, int arg_height)
-    : width (arg_width), height (arg_height)
-  {
-    data.resize (width * height);
-  }
-
-  void resize (int arg_width, int arg_height) 
-  {
-    width  = arg_width;
-    height = arg_height;
-    data.resize (width * height);
-  }
-
-  T& operator () (int x, int y) {
-    assert(x >= 0 && x < width && y >= 0 && y < height);
-    return data[width * y + x];
-  }
-
-  int get_width() const {
-    return width;
-  }
-
-  int get_height() const {
-    return height;
-  }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/fonts.hpp (from rev 341, trunk/src/fonts.hxx)


Property changes on: trunk/src/fonts.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/fonts.hxx
===================================================================
--- trunk/src/fonts.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/fonts.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,36 +0,0 @@
-//  $Id: fonts.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_FONTS_HXX
-#define HEADER_FEUERKRAFT_FONTS_HXX
-
-#include <ClanLib/Display/font.h>
-
-namespace Fonts {
-
-extern CL_Font font;
-
-void init();
-void deinit();
-
-} // namespace Fonts
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_delta.hpp (from rev 341, trunk/src/game_delta.hxx)


Property changes on: trunk/src/game_delta.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_delta.hxx
===================================================================
--- trunk/src/game_delta.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_delta.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,52 +0,0 @@
-//  $Id: game_delta.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GAMEDELTA_HXX
-#define GAMEDELTA_HXX
-
-/** The GameDelta class holds all informations that are required to
-    bring the GameWorld from its current stage to its next stage,
-    which means it will basically hold the time delta between frames,
-    along with input that is to be passed to the game engine. A
-    GameDelta is used as an argument to GameObj::update(). 
-
-    GameDelta is used instead of a simple float because input should
-    also be handled as argument to the update() function instead of
-    reading it directly, this allows easy recording and playback of
-    game sessions. */
-class GameDelta
-{
-private:
-  float time_delta;
-  
-public:
-  /* Returns the controller which is bound to the given ControllerID
-
-  Pseudo Code:
-     
-     Controller* get_controller (ControllerID id);
-   */
-
-  /** Number of seconds since the last update */
-  float get_time ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_mission.hpp (from rev 341, trunk/src/game_mission.hxx)


Property changes on: trunk/src/game_mission.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_mission.hxx
===================================================================
--- trunk/src/game_mission.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_mission.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,66 +0,0 @@
-//  $Id: game_mission.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GAMEMISSION_HXX
-#define GAMEMISSION_HXX
-
-#include <string>
-#include <libguile.h>
-
-class GameWorld;
-
-/** The GameMission class holds all the data which is relevant for a
-    mission. Which means it will hold the GameWorld data, briefing
-    data, mission description, scripts and meta-data such as creation
-    time, author, email, etc. */
-// FIXME: Data -> GameObj seperation not here!
-class GameMission
-{
-private:
-  std::string author_name;
-  std::string author_email;
-  unsigned int creation_time;
-  GameWorld* world;
-  
-public:
-  /** Create an GameMission out of an SCM description. A game mission
-      is stored in a directory with the files [FIXME:...] */
-  GameMission (SCM desc);
-  virtual ~GameMission ();
-
-  /** Return the date of the mission creation in number of seconds
-      since 1. Jan 1970 (standard unix time) */
-  unsigned int get_creation_time ();
-  
-  // FIXME: What about support for multiple authors? -> useless?!
-
-  /** Return the authors name */
-  std::string get_author_name ();
-
-  /** Return the authors email address */
-  std::string get_author_email ();
-
-  /** Return a pointer to the GameWorld for this mission !!! FIXME:
-      how do we handle multiple GameWorld's in a single mission? */
-  GameWorld*  get_world ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_obj.hpp (from rev 341, trunk/src/game_obj.hxx)


Property changes on: trunk/src/game_obj.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_obj.hxx
===================================================================
--- trunk/src/game_obj.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_obj.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,119 +0,0 @@
-//  $Id: game_obj.hxx,v 1.13 2003/08/20 00:15:10 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GAMEOBJ_HH
-#define GAMEOBJ_HH
-
-#include <assert.h>
-#include "game_world.hxx"
-
-class Building;
-class Radar;
-class View;
-class LevelMap;
-class GameWorld;
-class GameObjData;
-class PropertySet;
-
-class GameObj
-{
-protected:
-  friend class GameWorld;
-
-  int id;
-
-  bool hidden;
-  bool remove_me;
-
-  friend class GameObjManager;
-  void set_id(int i) { id = i; }
-
-  PropertySet* properties;
-public:
-  GameObj();
-  virtual ~GameObj ();
-
-  /** @return the id of the GameObj, this must only be called after
-      the GameObj has been added to a GameWorld/GameObjManager,
-      calling it before will raise an assertion. */
-  int get_id() const { assert(id != -1); return id; }
-
-  PropertySet* get_properties() { return properties; }
-
-  /** This is called once somebody alters the properties, might be
-      needed if one for example changes the surface-string and
-      requires the surface to be reloaded.
-  
-      FIXME: Might be a stupid way to do it, a surface with self
-      reloading capabilities might be better, but might not always
-      work. */
-  virtual void properties_updated() {}
-
-  /** Draw the object onto the main view, which means the object will
-      be drawn in normal game grafic */
-  virtual void draw(View& view) =0;
-
-  /** Draw the energie bar, this is done in a seperate function to
-      avoid rotation and scaling of the energie bar */
-  virtual void draw_energie(View& view) {}
-
-  /** Draw the object to the radar */
-  virtual void draw_radar (Radar& radar) {}
-
-  /** Draw the object to the levelmap, the levelmap gives an overview
-      about the complete level */
-  virtual void draw_levelmap(LevelMap& view) {}
-  
-  /** Update the object once a game loop */
-  virtual void update (float) {}
-
-  /** Mark the object as removable */
-  void remove() { remove_me = true; }
-
-  /** Hides an object by removing it from the list of active word
-      objects. Hidden objects are not shown and not updated. You can
-      unhide an object by calling \a show(). */
-  void hide() { hidden = true; }
-
-  /** Shows a hidden object */
-  void show() { hidden = false; }
-
-  /** @return true if an object is hidden */
-  bool is_hidden() const { return hidden; }
-
-  // @return true if the object can be removed from the world
-  virtual bool removable () { return remove_me; }
-  
-  virtual void on_collision(GameObj* obj);
-  virtual void on_collision_with_building(Building* building);
-
-  //
-  virtual float get_z_pos () { return 0; }
-
-  /* Stuff that is used for the radar and probally for physics later
-     on */
-  virtual float get_physical_mass () { return 1.0; }
-  virtual float get_physical_size () { return 1.0; }
-};
-
-typedef GameObj* GameObjPtr;
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_obj_data.hpp (from rev 341, trunk/src/game_obj_data.hxx)


Property changes on: trunk/src/game_obj_data.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_obj_data.hxx
===================================================================
--- trunk/src/game_obj_data.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_obj_data.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,42 +0,0 @@
-//  $Id: game_obj_data.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GAMEOBJDATA_HXX
-#define GAMEOBJDATA_HXX
-
-class GameWorld;
-class GameObj;
-
-class GameObjData
-{
-private:
-
-public:
-  /** Create the correct GameObj out of an GameObjData object. This is
-      something like a virtual constructor. */
-  virtual GameObj* create() =0;
-  
-  /** Convert the data from a given data object into an SCM which can
-      be written to a save game file or similar things */
-  virtual SCM dump_to_scm () =0;
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_obj_data_factory.hpp (from rev 341, trunk/src/game_obj_data_factory.hxx)


Property changes on: trunk/src/game_obj_data_factory.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_obj_data_factory.hxx
===================================================================
--- trunk/src/game_obj_data_factory.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_obj_data_factory.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,42 +0,0 @@
-//  $Id: game_obj_data_factory.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GAMEOBJDATAFACTORY_HXX
-#define GAMEOBJDATAFACTORY_HXX
-
-#include <libguile.h>
-
-class GameObjData;
-
-class GameObjDataFactory
-{
-private:
-
-public:
-  /** Create a GameObjData out of a symbol and a data, 
-      FIXME: Abstractfactory stuff could be usefull here, but might
-      FIXME: not be extremly important
-      This function might return NULL on error! (no exceptions at the moment)
-  */
-  static GameObjData* create (SCM symbol, SCM data);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_obj_factory.hpp (from rev 341, trunk/src/game_obj_factory.hxx)


Property changes on: trunk/src/game_obj_factory.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_obj_factory.hxx
===================================================================
--- trunk/src/game_obj_factory.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_obj_factory.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,69 +0,0 @@
-//  $Id: game_obj_factory.hxx,v 1.5 2003/06/22 17:22:47 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_GAME_OBJ_FACTORY_HXX
-#define HEADER_GAME_OBJ_FACTORY_HXX
-
-#include <vector>
-#include "alist.hxx"
-
-class GameObj;
-
-class GameObjAbstractFactory
-{
-public:
-  virtual GameObj* create(const AList& lst) =0;
-};
-
-template<class T>
-class GameObjGenericFactory : public GameObjAbstractFactory
-{
-public:
-  GameObj* create(const AList& lst) { return new T(lst); }
-};
-
-/** */
-class GameObjFactory
-{
-private:
-  static GameObjFactory* instance_;
-  GameObjFactory();
-public:
-  static GameObjFactory* instance();
-
-private:
-  typedef std::vector<GameObjAbstractFactory*> Factories;
-  Factories factories;
-
-  GameObjAbstractFactory* get_factory(int type_id);
-public:
-  GameObj* create(int type_id, const AList& alist);
-
-  /** @return type_id of the newly registered type */
-  int register_factory(const char* name, GameObjAbstractFactory* factory);
-private:
-  GameObj* create_raw_object(int type_id, const AList& lst);
-
-  GameObjFactory (const GameObjFactory&);
-  GameObjFactory& operator= (const GameObjFactory&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_obj_manager.hpp (from rev 341, trunk/src/game_obj_manager.hxx)


Property changes on: trunk/src/game_obj_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_obj_manager.hxx
===================================================================
--- trunk/src/game_obj_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_obj_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,75 +0,0 @@
-//  $Id: game_obj_manager.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_GAME_OBJ_MANAGER_HXX
-#define HEADER_GAME_OBJ_MANAGER_HXX
-
-#include <list>
-
-class GameObj;
-class GameWorld;
-
-/** */
-class GameObjManager
-{
-public:
-  typedef std::list<GameObj*> GameObjs;
-  typedef GameObjs::iterator    iterator;
-  
-private:
-  int next_obj_id;
-  GameObjs   game_objs;
-  GameWorld* game_world;
-
-  static GameObjManager* current_manager;
-public:
-
-  static GameObjManager* current() { return current_manager; }
-
-  GameObjManager(GameWorld* world);
-  /**  */
-  GameObj* get_object_by_id(int id);
-
-  /**  */
-  int add_object(GameObj* obj);
-
-  void remove_object(GameObj* obj);
-
-  GameObjs& get_objects() { return game_objs; }
-
-  iterator begin() { return game_objs.begin(); }
-  iterator end()   { return game_objs.end(); }
-
-  GameWorld* get_world() { return game_world; }
-
-  template<class Func>
-  void for_each_game_obj(Func func) {
-    for (GameObjs::iterator i = game_objs.begin(); i != game_objs.end(); ++i)
-      {
-        func(**i);
-      }
-  }
-private:
-  GameObjManager (const GameObjManager&);
-  GameObjManager& operator= (const GameObjManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_session.hpp (from rev 341, trunk/src/game_session.hxx)


Property changes on: trunk/src/game_session.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_session.hxx
===================================================================
--- trunk/src/game_session.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_session.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,68 +0,0 @@
-//  $Id: game_session.hxx,v 1.1 2003/06/18 13:04:21 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_GAME_SESSION_HXX
-#define HEADER_GAME_SESSION_HXX
-
-#include <string>
-
-class BuildingTypeManager;
-class CollisionManager;
-class GameWorld;
-class View;
-
-/** */
-class GameSession
-{
-private:
-  enum ControlState { UNIT_CONTROL, MENU_CONTROL } control_state; 
-
-  std::string filename;
-  bool  do_quit;
-  bool  do_pause;
-  float deltas;
-  int   loops;
-  int   frames;
-  int   start_time;
-
-  BuildingTypeManager* buildingtypemanager;
-  CollisionManager*    collision_mgr;
-  GameWorld* world;
-  View*      view;
-
-public:
-  GameSession(const std::string& arg_filename);
-  
-  void init();
-  void deinit();
-
-  /** Run a GameSession, quit when some end condition occures */
-  void update();
-
-  void pause();
-
-  void save(const std::string& arg_filename);
-private:
-  GameSession (const GameSession&);
-  GameSession& operator= (const GameSession&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_session_manager.hpp (from rev 341, trunk/src/game_session_manager.hxx)


Property changes on: trunk/src/game_session_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_session_manager.hxx
===================================================================
--- trunk/src/game_session_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_session_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,58 +0,0 @@
-//  $Id: game_session_manager.hxx,v 1.1 2003/06/10 00:38:50 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_GAME_SESSION_MANAGER_HXX
-#define HEADER_GAME_SESSION_MANAGER_HXX
-
-#include <string>
-
-class GameSession;
-
-/** */
-class GameSessionManager
-{
-private:
-  static GameSessionManager* instance_;
-public:
-  static GameSessionManager* instance();
-
-private:
-  bool session_changed;
-  bool do_quit;
-  GameSession* current_session;
-  GameSession* new_session;
-public:
-  GameSessionManager();
-  ~GameSessionManager();
-
-  void load(const std::string& filename);
-  void save(const std::string& filename);
-
-  void run();
-  void pause();
-  void quit();
-  
-private:
-  GameSessionManager (const GameSessionManager&);
-  GameSessionManager& operator= (const GameSessionManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_world.hpp (from rev 341, trunk/src/game_world.hxx)


Property changes on: trunk/src/game_world.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_world.hxx
===================================================================
--- trunk/src/game_world.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_world.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,86 +0,0 @@
-//  $Id: game_world.hxx,v 1.13 2003/06/22 21:51:21 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GAMEWORLD_HH
-#define GAMEWORLD_HH
-
-#include "vector2d.hxx"
-#include "game_world_data.hxx"
-
-class View;
-class LevelMap;
-class GameObj;
-class GroundMap;
-class BuildingMap;
-class TriggerManager;
-class GameObjManager;
-class BuildingManager;
-class GameWorld;
-
-typedef GameWorld* GameWorldPtr;
-
-class GameWorld : public GameWorldData
-{
-private:
-  friend class GameWorldBuilder;
-
-  GameObjManager*  game_obj_manager;
-  BuildingManager* building_manager;
-  TriggerManager*  trigger_manager;
-
-  // FIXME: This is a ugly ugly hack...
-  GameObj* buildingmap;
-  
-  GroundMap* groundmap;
-  float current_time;
-  FloatVector2d wind;
-  SCM world_module;
-  SCM last_module;
-
-public:
-  GameWorld (SCM scm);
-  ~GameWorld ();
-
-  float get_time() { return current_time; }
-  
-  /** @return the current speed and direction of the wind */
-  FloatVector2d get_wind() const;
-
-  /// Return a reference to the objects in the world
-  void add(GameObj*);
-  void add_front(GameObj*);
-
-  void draw(View& view);
-  void draw_energie(View& view);
-  void draw_levelmap(LevelMap& levelmap);
-  void update(float delta);
-
-  BuildingMap* get_buildingmap ();
-  GroundMap*   get_groundmap ();
-  GameObjManager* get_game_obj_manager();
-
-private:
-  static GameWorld* current_world;
-public:
-  static GameWorld* current() { return current_world; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_world_builder.hpp (from rev 341, trunk/src/game_world_builder.hxx)


Property changes on: trunk/src/game_world_builder.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_world_builder.hxx
===================================================================
--- trunk/src/game_world_builder.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_world_builder.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,53 +0,0 @@
-//  $Id: game_world_builder.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_GAME_WORLD_BUILDER_HXX
-#define HEADER_GAME_WORLD_BUILDER_HXX
-
-#include "world_builder.hxx"
-
-class GameWorld;
-
-/** */
-class GameWorldBuilder
-  : public WorldBuilder
-{
-private:
-  GameWorld* world;
-
-public:
-  GameWorldBuilder();
-  ~GameWorldBuilder();
-
-  void add_object(const std::string& type, const AList&);
-  void add_brush(const std::string& resname, const AList&);
-  void add_building(const std::string&, const AList&);
-  void add_groundmap(const std::string&, const AList&);
-  void add_script(const std::string& resname);
-
-  /** @return the created world, must only called once! */
-  GameWorld* get_world();
-private:
-  GameWorldBuilder (const GameWorldBuilder&);
-  GameWorldBuilder& operator= (const GameWorldBuilder&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/game_world_data.hpp (from rev 341, trunk/src/game_world_data.hxx)


Property changes on: trunk/src/game_world_data.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_world_data.hxx
===================================================================
--- trunk/src/game_world_data.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/game_world_data.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,56 +0,0 @@
-//  $Id: game_world_data.hxx,v 1.5 2003/06/22 21:51:21 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GAMEWORLDDATA_HXX
-#define GAMEWORLDDATA_HXX
-
-#include <libguile.h>
-#include <vector>
-#include <string>
-
-class GameObjData;
-class GroundMapData;
-class BuildingMapData;
-class GameWorld;
-
-class GameWorldData
-{
-protected:
-  bool needs_delete;
-  std::vector<GameObjData*> gameobj_data;
-  std::vector<std::string> scripts;
-  GroundMapData* groundmap_data;
-  BuildingMapData* buildingmap_data;
-  
-public:
-  explicit GameWorldData (SCM desc);
-  ~GameWorldData ();
- 
-  /** Convert the data from a given data object into an SCM which can
-      be written to a save game file or similar things */
-  SCM dump_to_scm ();
-  
-private:
-  void parse_objects(SCM desc);
-  void parse_scripts(SCM desc);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/generic/random.hpp (from rev 341, trunk/src/generic/random.hxx)


Property changes on: trunk/src/generic/random.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/generic/random.hxx
===================================================================
--- trunk/src/generic/random.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/generic/random.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,37 +0,0 @@
-//  $Id: random.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef RANDOM_HXX
-#define RANDOM_HXX
-
-class Random
-{
-private:
-
-public:
-  static float frand (float max);
-  static float frand (float min, float max);
-
-  static int rand (int max);
-  static int rand (int min, int max);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/geometry.hpp (from rev 341, trunk/src/geometry.hxx)


Property changes on: trunk/src/geometry.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/geometry.hxx
===================================================================
--- trunk/src/geometry.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/geometry.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,115 +0,0 @@
-//  $Id: geometry.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GEOMETRY_HH
-#define GEOMETRY_HH
-
-#include <math.h>
-
-class Rectangle;
-class Line;
-class Circle;
-class Point;
-
-class Geometry
-{
-private:
-  
-public:
-  // Dispatcher
-  bool do_not_intersec (const Geometry&) =0;
-
-  bool do_not_intersec (const Circle&) =0;
-  bool do_not_intersec (const Line&) =0;
-  bool do_not_intersec (const Rectangle&) =0;
-  bool do_not_intersec (const Point&) =0;
-};
-
-class Circle : public Geometry
-{
-public:
-  Circle (double x, double y, double radius);
-
-  bool do_not_intersec (const Geometry& obj) { return obj.do_not_intersec (*this); }
-
-  bool do_not_intersec (const Circle&);
-  bool do_not_intersec (const Line&);
-  bool do_not_intersec (const Rectangle&);
-  bool do_not_intersec (const Point&);
-
-  double get_radius ();
-  Point  get_position ();
-};
-
-class Rectangle: public Geometry
-{
-public:
-  Rectangle (double x, doubel y, double width, double height, double rotation);
-
-  bool do_not_intersec (const Geometry& obj) { return obj.do_not_intersec (*this); }
-
-  bool do_not_intersec (const Circle&);
-  bool do_not_intersec (const Line&);
-  bool do_not_intersec (const Rectangle&);
-  bool do_not_intersec (const Point&);
-};
-
-class Line : public Geometry
-{
-private:
-  double x1, y1;
-  double x2, y2;
-public:
-  Line (double x2, double y2, double x2, double y2);
-
-  bool do_not_intersec (const Geometry& obj) { return obj.do_not_intersec (*this); }
-
-  bool do_not_intersec (const Circle&);
-  bool do_not_intersec (const Line&);
-  bool do_not_intersec (const Rectangle&);
-  bool do_not_intersec (const Point&);
-
-  double get_length ();
-};
-
-class Point : public Geometry
-{
-private:
-  double x;
-  double y;
-public:
-  Point (double x, double y);
-
-  bool do_not_intersec (const Geometry& obj) { return obj.do_not_intersec (*this); }
-
-  bool do_not_intersec (const Circle&);
-  bool do_not_intersec (const Line&);
-  bool do_not_intersec (const Rectangle&);
-  bool do_not_intersec (const Point&);
-
-  double get_x () { return x; }
-  double get_y () { return y; }
-  double distance (Point& p) { 
-    return std::fabs(std::sqrt((p.x - x) * (p.x - x) + (p.y - y) * (p.y - y)));
-  }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/globals.hpp (from rev 341, trunk/src/globals.hxx)


Property changes on: trunk/src/globals.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/globals.hxx
===================================================================
--- trunk/src/globals.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/globals.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,30 +0,0 @@
-//  $Id: globals.hxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_GLOBALS_HXX
-#define HEADER_GLOBALS_HXX
-
-extern bool music_enabled;
-extern bool sound_enabled;
-extern bool draw_colmap;
-extern int  verbose; 
-
-#endif
-
-/* EOF */

Copied: trunk/src/goal_manager.hpp (from rev 341, trunk/src/goal_manager.hxx)


Property changes on: trunk/src/goal_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/goal_manager.hxx
===================================================================
--- trunk/src/goal_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/goal_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,41 +0,0 @@
-//  $Id: goal_manager.hxx,v 1.1 2003/06/18 13:05:35 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_GOAL_MANAGER_HXX
-#define HEADER_GOAL_MANAGER_HXX
-
-/** The GoalManager keeps track of game events such as a soldier
-    entering a vehicle, a specific vehicle getting destroyed und stuff
-    like that. Other parts of the engine can make use of this
-    information to manage primary/secondary missions goals.
- */
-class GoalManager
-{
-private:
-public:
-  // FIXME: Design me
-  GoalManager() {}
-private:
-  GoalManager (const GoalManager&);
-  GoalManager& operator= (const GoalManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/grid_map.hpp (from rev 341, trunk/src/groundmap/grid_map.hxx)


Property changes on: trunk/src/groundmap/grid_map.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/grid_map.hxx
===================================================================
--- trunk/src/groundmap/grid_map.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/grid_map.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,77 +0,0 @@
-//  $Id: grid_map.hxx,v 1.7 2003/06/22 19:22:57 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GRIDMAP_HXX
-#define GRIDMAP_HXX
-
-#include <vector>
-#include <map>
-#include <ClanLib/Display/surface.h>
-
-#include "../view.hxx"
-#include "ground_map.hxx"
-#include "grid_tile_data.hxx"
-#include "grid_map_data.hxx"
-#include "grid_tile_generator.hxx"
-
-class GridTile;
-
-/**
-   The GridMap works by having a grid of ground properties and
-   generating a tilemap of that data. The ground properties define
-   how a vehicle behaves on the ground, while the generated tiles are
-   really just there to make it look good.
-*/
-class GridMap : public GroundMap,
-		public GridMapData
-{
-private:
-  /** width of the map in tiles */
-  int width;
-
-  /** height of the map in tiles */
-  int height;
-  
-  /** This is the map, all tiles in this vector are just pointers to
-      the tiles in 'tiles' */
-  std::vector<GridTile*> gridmap;
-
-  /** All real tiles are stored in this map, delete them here */
-  GridTileGenerator tiles;
-
-  /** A surface where each pixel-color represents a tile, used in the
-      draw_levelmap() function */ 
-  CL_Surface surface;
-
-public:
-  GridMap (const GridMapData& data);
-  virtual ~GridMap ();
-
-  /** Return the type of the ground at the world coordinates \a x and
-      \a y */
-  GroundType get_groundtype (float x, float y);
-
-  void draw (View& view);
-  void draw_levelmap (LevelMap& levelmap);
-  void update (float);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/grid_map_data.hpp (from rev 341, trunk/src/groundmap/grid_map_data.hxx)


Property changes on: trunk/src/groundmap/grid_map_data.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/grid_map_data.hxx
===================================================================
--- trunk/src/groundmap/grid_map_data.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/grid_map_data.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,56 +0,0 @@
-//  $Id: grid_map_data.hxx,v 1.5 2003/06/22 19:22:57 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GRIDMAPDATA_HXX
-#define GRIDMAPDATA_HXX
-
-#include <vector>
-
-#include <guile/gh.h>
-#include <ClanLib/Display/pixel_buffer.h>
-#include "ground_type.hxx"
-#include "ground_map_data.hxx"
-
-class CL_PixelBuffer;
-
-/**  
- */
-class GridMapData : public GroundMapData
-{
-protected:
-  int grid_width;
-  int grid_height;
-
-  /** The data of the grid */
-  std::vector<GroundType> grid_data;
-  
-  CL_PixelBuffer provider;
-  
-public:
-  GridMapData (SCM desc);
-  virtual ~GridMapData ();
-
-  GroundMap* create ();
-private:
-  void parse_from_file (SCM desc);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/grid_tile.hpp (from rev 341, trunk/src/groundmap/grid_tile.hxx)


Property changes on: trunk/src/groundmap/grid_tile.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/grid_tile.hxx
===================================================================
--- trunk/src/groundmap/grid_tile.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/grid_tile.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,42 +0,0 @@
-//  $Id: grid_tile.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GRIDTILE_HXX
-#define GRIDTILE_HXX
-
-#include <string>
-#include <ClanLib/display.h>
-#include "grid_tile_data.hxx"
-
-class View;
-
-class GridTile
-{
-private:
-  CL_Sprite sprite;
-
-public:
-  GridTile (std::string filename);
- 
-  void draw (View& view, float x, float y);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/grid_tile_data.hpp (from rev 341, trunk/src/groundmap/grid_tile_data.hxx)


Property changes on: trunk/src/groundmap/grid_tile_data.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/grid_tile_data.hxx
===================================================================
--- trunk/src/groundmap/grid_tile_data.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/grid_tile_data.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,63 +0,0 @@
-//  $Id: grid_tile_data.hxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GRIDTILEDATA_HXX
-#define GRIDTILEDATA_HXX
-
-#include <iostream>
-#include "ground_type.hxx"
-
-class GridTile;
-
-/** A GridTileData object consistf a logical description of a grid
-    tile, which means the ground type of each edge will be described.
-    Via the create() call a fitting Tile can be generated. */
-class GridTileData
-{
-public:
-  GroundType ul;
-  GroundType ur;
-  GroundType br;
-  GroundType bl;
-
-public:
-  GridTileData ()
-  {
-    // FIXME: We could make this even more abstract and not use
-    // groundtype directly, so that we could apply theming support
-    // (night, day, winter)
-    ul = ur = br = bl = GT_SAND;
-  }
-
-  GridTileData (GroundType arg_ul, GroundType arg_ur, GroundType arg_br, GroundType arg_bl)
-    : ul (arg_ul), ur (arg_ur), br (arg_br), bl (arg_bl)
-  {
-  }
-
-  GridTile* create ();
-
-  bool operator==(const GridTileData& a);
-};
-
-bool operator<(const GridTileData& a, const GridTileData& b);
-std::ostream& operator<<(std::ostream& s, const GridTileData& b);
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/grid_tile_generator.hpp (from rev 341, trunk/src/groundmap/grid_tile_generator.hxx)


Property changes on: trunk/src/groundmap/grid_tile_generator.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/grid_tile_generator.hxx
===================================================================
--- trunk/src/groundmap/grid_tile_generator.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/grid_tile_generator.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,57 +0,0 @@
-//  $Id: grid_tile_generator.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GRIDTILEGENERATOR_HXX
-#define GRIDTILEGENERATOR_HXX
-
-#include <vector>
-#include <map>
-#include <string>
-#include <guile/gh.h>
-#include "ground_type.hxx"
-#include "grid_tile_data.hxx"
-
-class GridTile;
-
-/** Creates/loads the tiles for a GridMap out of an description */
-class GridTileGenerator
-{
-private:
-
-public:
-  typedef std::pair<GridTileData, std::vector<GridTile*> > TileTableEntry;
-  typedef std::vector<std::pair<GridTileData, std::vector<GridTile*> > > TileTable;
-  TileTable tiles;
-
-  GridTile* emptytile;
-
-  GridTileGenerator (std::string filename);
-  ~GridTileGenerator ();
-
-  GridTile* create (const GridTileData& data);
-private:
-  GroundType symbol2GroundType (SCM);
-  void parse_line (SCM desc);
-  GridTileData scm2GridTileData (SCM);
-  std::vector<GridTile*> scm2GridTileVector (SCM);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/ground_map.hpp (from rev 341, trunk/src/groundmap/ground_map.hxx)


Property changes on: trunk/src/groundmap/ground_map.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/ground_map.hxx
===================================================================
--- trunk/src/groundmap/ground_map.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/ground_map.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,48 +0,0 @@
-//  $Id: ground_map.hxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GROUNDMAP_HXX
-#define GROUNDMAP_HXX
-
-#include "../view.hxx"
-#include "../game_obj.hxx"
-#include "ground_type.hxx"
-
-/** The GroundMap interface defines the basic interaction between
-    vehicles and the ground. It allows a GameObj to know what the
-    current groundtype is and similar things
-*/
-class GroundMap : public GameObj
-{
-private:
-
-public:
-  GroundMap ()
-  {
-  }
-
-  /** Return the type of ground, x and y are in world coordinates */
-  virtual GroundType get_groundtype (float x, float y) =0;
-
-  float get_z_pos () { return -5; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/ground_map_data.hpp (from rev 341, trunk/src/groundmap/ground_map_data.hxx)


Property changes on: trunk/src/groundmap/ground_map_data.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/ground_map_data.hxx
===================================================================
--- trunk/src/groundmap/ground_map_data.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/ground_map_data.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,35 +0,0 @@
-//  $Id: ground_map_data.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GROUNDMAPDATA_HXX
-#define GROUNDMAPDATA_HXX
-
-class GroundMap;
-
-class GroundMapData
-{
-private:
-
-public:
-  virtual GroundMap* create() =0;
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/ground_map_data_factory.hpp (from rev 341, trunk/src/groundmap/ground_map_data_factory.hxx)


Property changes on: trunk/src/groundmap/ground_map_data_factory.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/ground_map_data_factory.hxx
===================================================================
--- trunk/src/groundmap/ground_map_data_factory.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/ground_map_data_factory.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,43 +0,0 @@
-//  $Id: ground_map_data_factory.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GROUNDMAPDATAFACTORY_HXX
-#define GROUNDMAPDATAFACTORY_HXX
-
-#include <guile/gh.h>
-
-class GroundMapData;
-
-/** Factory for creating GroundMap */
-class GroundMapDataFactory
-{
-private:
-
-public:
-  /** Create a GroundMapData out of an SCM descriptor, syntax of 'desc' is
-      like this:
-      
-      ((tilemap ...))
-  */
-  static GroundMapData* create (SCM desc);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/ground_type.hpp (from rev 341, trunk/src/groundmap/ground_type.hxx)


Property changes on: trunk/src/groundmap/ground_type.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/ground_type.hxx
===================================================================
--- trunk/src/groundmap/ground_type.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/ground_type.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,69 +0,0 @@
-//  $Id: ground_type.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GROUNDTYPE_HXX
-#define GROUNDTYPE_HXX
-
-#include <string>
-
-/** The GroundType defines the type of the ground, it has influence on
-    the speed and acceleration of vehicles. It has also influence on
-    the detonation type of shells and rocket (splash instead of a big
-    explosion and such). 
-
-    FIXME: GroundType<->Palette relation is hardcoded
-*/
-enum GroundType 
-{ 
-  /** This GroundType is used to mark empty tiles, vehicles should not
-      react and it and the Worlds groundmap must not return it,
-      instead it should fallback to the default value for the current
-      map. */
-  GT_EMPTY,
-  
-  /** Wheel driven vehicles will be slower on this ground type, chain
-      driven vehicles won't be much influenced by this */
-  GT_SAND,
-
-  /** FIXME: description */
-  GT_GRASS,
-
-  /** FIXME: description */
-  GT_MUD,
-
-  /** All vehicles can drive in flatwater, but some will seriously
-      slow down */
-  GT_FLATWATER,
-
-  /** Land vehicle can't drive here, only ships and hovercrafts */
-  GT_DEEPWATER,
-
-  /** Street and parking places have the GroundType GT_ASPHALT, wheel
-      vehicles will be fast on here. */
-  GT_ASPHALT, 
-
-  /** also known Dark sand */
-  GT_WETSAND
-};
-
-std::string GroundType2string(const GroundType& a);
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/multi_ground_map.hpp (from rev 341, trunk/src/groundmap/multi_ground_map.hxx)


Property changes on: trunk/src/groundmap/multi_ground_map.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/multi_ground_map.hxx
===================================================================
--- trunk/src/groundmap/multi_ground_map.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/multi_ground_map.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,48 +0,0 @@
-//  $Id: multi_ground_map.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef MULTIGROUNDMAP_HXX
-#define MULTIGROUNDMAP_HXX
-
-#include <vector>
-#include "multi_ground_map_data.hxx"
-#include "ground_map.hxx"
-
-class MultiGroundMap : public GroundMap,
-		       public MultiGroundMapData
-{
-private:
-  std::vector<GroundMap*> maps;
-
-public:
-  MultiGroundMap (const MultiGroundMapData& data);
-  ~MultiGroundMap ();
-
-  /** Return the type of ground, x and y are in world coordinates */
-  GroundType get_groundtype (float x, float y);
-  
-  void draw(View& view);
-  void draw_levelmap (LevelMap& levelmap);
-
-  void add (GroundMap* groundmap);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/multi_ground_map_data.hpp (from rev 341, trunk/src/groundmap/multi_ground_map_data.hxx)


Property changes on: trunk/src/groundmap/multi_ground_map_data.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/multi_ground_map_data.hxx
===================================================================
--- trunk/src/groundmap/multi_ground_map_data.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/multi_ground_map_data.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,42 +0,0 @@
-//  $Id: multi_ground_map_data.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef MULTIGROUNDMAPDATA_HXX
-#define MULTIGROUNDMAPDATA_HXX
-
-#include <vector>
-#include "ground_map_data.hxx"
-
-class MultiGroundMapData : public GroundMapData
-{
-protected:
-  std::vector<GroundMapData*> mapsdata;
-
-public:
-  MultiGroundMapData ();
-  virtual ~MultiGroundMapData ();
-
-  void add (GroundMapData*);
-
-  GroundMap* create();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/sprite_tile.hpp (from rev 341, trunk/src/groundmap/sprite_tile.hxx)


Property changes on: trunk/src/groundmap/sprite_tile.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/sprite_tile.hxx
===================================================================
--- trunk/src/groundmap/sprite_tile.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/sprite_tile.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,45 +0,0 @@
-//  $Id: sprite_tile.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef SPRITETILE_HXX
-#define SPRITETILE_HXX
-
-#include <ClanLib/display.h>
-#include "ground_type.hxx"
-#include "tile.hxx"
-#include "sprite_tile_data.hxx"
-
-class SpriteTile : public Tile,
-		   public SpriteTileData
-{
-private:
-  CL_Sprite sprite;
-
-public:
-  SpriteTile(const SpriteTileData& data);
-  
-  void draw(View& view, float x, float y);
-
-  /** FIXME: 'float delta' should be replaced with GameDelta */
-  void update(float delta);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/sprite_tile_data.hpp (from rev 341, trunk/src/groundmap/sprite_tile_data.hxx)


Property changes on: trunk/src/groundmap/sprite_tile_data.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/sprite_tile_data.hxx
===================================================================
--- trunk/src/groundmap/sprite_tile_data.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/sprite_tile_data.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,45 +0,0 @@
-//  $Id: sprite_tile_data.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef SPRITETILEDATA_HXX
-#define SPRITETILEDATA_HXX
-
-#include <string>
-#include "tile_data.hxx"
-
-class SpriteTile;
-
-class SpriteTileData : public TileData
-{
-public:
-  SpriteTileData ();
-  virtual ~SpriteTileData ();
-
-  /** The location of the Sprite which is used for this Tile. FIXME:
-      Should be a ResourceLocation instead of std::string */
-  std::string sprite_location;
-
-  /** FIXME: Should be renamed if we need a EditorSpriteTile or
-      something like that */
-  Tile* create_Tile ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/tile.hpp (from rev 341, trunk/src/groundmap/tile.hxx)


Property changes on: trunk/src/groundmap/tile.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/tile.hxx
===================================================================
--- trunk/src/groundmap/tile.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/tile.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,38 +0,0 @@
-//  $Id: tile.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef TILE_HXX
-#define TILE_HXX
-
-class View;
-
-class Tile
-{
-private:
-
-public:
-  virtual void draw(View&, float x, float y) =0;
-
-  /** FIXME: 'float delta' should be replaced with GameDelta */
-  virtual void update (float delta) =0;
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/tile_data.hpp (from rev 341, trunk/src/groundmap/tile_data.hxx)


Property changes on: trunk/src/groundmap/tile_data.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/tile_data.hxx
===================================================================
--- trunk/src/groundmap/tile_data.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/tile_data.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,33 +0,0 @@
-//  $Id: tile_data.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef TILEDATA_HXX
-#define TILEDATA_HXX
-
-class Tile;
-
-class TileData
-{
-public:
-  virtual Tile* create_Tile () =0;
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/tile_data_factory.hpp (from rev 341, trunk/src/groundmap/tile_data_factory.hxx)


Property changes on: trunk/src/groundmap/tile_data_factory.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/tile_data_factory.hxx
===================================================================
--- trunk/src/groundmap/tile_data_factory.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/tile_data_factory.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,46 +0,0 @@
-//  $Id: tile_data_factory.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef TILEFACTORY_HXX
-#define TILEFACTORY_HXX
-
-#include <guile/gh.h>
-
-class TileData;
-class SpriteTileData;
-
-/** The tile factory is used to create a Tile out of an SCM
-    description
-    
-    FIXME: This could also be placed in the constructor or does this
-    FIXME: have any big advantages?
-    FIXME: Disadvantages: SpriteTileData need public member variables
-*/
-class TileDataFactory
-{
-private:
-
-public:
-  static TileData* create (SCM desc);
-  static SpriteTileData* create_SpriteTileData (SCM desc);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/tile_map.hpp (from rev 341, trunk/src/groundmap/tile_map.hxx)


Property changes on: trunk/src/groundmap/tile_map.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/tile_map.hxx
===================================================================
--- trunk/src/groundmap/tile_map.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/tile_map.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,58 +0,0 @@
-//  $Id: tile_map.hxx,v 1.5 2003/06/22 19:22:57 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef TILEMAP_HXX
-#define TILEMAP_HXX
-
-#include <vector>
-#include "ground_map.hxx"
-#include "tile_map_data.hxx"
-
-class Tile;
-
-/** TileMap is a unused class at this moment, use \a GridMap
-    instead */
-class TileMap : public GroundMap,
-		protected TileMapData
-{
-private:
-  /** The real tiles are in this list  */
-  std::vector<Tile*> tiles;
-  
-  /** The tiles in this list are just pointers to the tiles in the
-      'tiles' vector, so you shouldn't call non-constant operations on
-      them. */
-  std::vector<Tile*> tilemap;
-public:
-  /** arg_width and arg_height give the number of tiles in each
-      direction, they give *not* the width and height in world
-      coordinates. tile_size must be the size of the tiles. */
-  TileMap (const TileMapData& data);
-
-  virtual ~TileMap ();
-
-  GroundType get_groundtype (float x, float y);
-  void draw (View& view);
-  void draw_levelmap (LevelMap& levelmap);
-  void update (float);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/tile_map_data.hpp (from rev 341, trunk/src/groundmap/tile_map_data.hxx)


Property changes on: trunk/src/groundmap/tile_map_data.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/tile_map_data.hxx
===================================================================
--- trunk/src/groundmap/tile_map_data.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/groundmap/tile_map_data.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,71 +0,0 @@
-//  $Id: tile_map_data.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef TILEMAPDATA_HXX
-#define TILEMAPDATA_HXX
-
-#include <guile/gh.h>
-#include <vector>
-
-#include "ground_map_data.hxx"
-
-class TileData;
-class TileMap;
-
-/** TileMapData holds all data that is necesarry for creating a TileMap
- */
-class TileMapData : public GroundMapData
-{
-public:
-  int width;
-  int height;
-
-  /** Data for creating Tile's */
-  std::vector<TileData*> tiles_data;
-
-  /** Data for the tilemap, each 'int' here, refers to a position in
-      tiles_data */
-  std::vector<int> tilemap_data;
-
-public:
-  /** Create a TileMapData out of an SCM description, the structure is
-      like this:
-      
-      (tilemap (width 100)
-               (height 100)
-               (tiles (spritetile ...)
-                      (someothertiletype ...)
-                       ...)
-               (map 1 2 3 4 5 2 3 11 2 3 ...))
-   */
-  TileMapData (SCM desc);
-  virtual ~TileMapData ();
-
-private:
-  void parse_from_file (SCM desc);
-  void parse_tiles (SCM desc);
-  void parse_map (SCM desc);
-
-public:
-  GroundMap* create ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/gui_obj.hpp (from rev 341, trunk/src/gui_obj.hxx)


Property changes on: trunk/src/gui_obj.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/gui_obj.hxx
===================================================================
--- trunk/src/gui_obj.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/gui_obj.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,38 +0,0 @@
-//  $Id: gui_obj.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GUIOBJ_HH
-#define GUIOBJ_HH
-
-class CL_GraphicContext;
-
-class GuiObj
-{
-private:
-  
-public:
-  GuiObj() {}
-  virtual ~GuiObj() {}
-  virtual void draw (CL_GraphicContext& gc) =0;
-  virtual void update (float delta) =0;
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/guile.hpp (from rev 341, trunk/src/guile.hxx)


Property changes on: trunk/src/guile.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/guile.hxx
===================================================================
--- trunk/src/guile.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/guile.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,90 +0,0 @@
-//  $Id: guile.hxx,v 1.13 2003/06/22 17:22:47 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GUILE_HXX
-#define GUILE_HXX
-
-#include <libguile.h>
-#include <string>
-#include <iostream>
-
-#include "vector2d.hxx"
-
-#include "alist.hxx"
-
-class Property;
-class PropertySet;
-
-/** A loose collection of Guile helper functions */
-namespace Guile {
-
-/** Convert a scheme string into a C++ std::string, converting other
-    non string SCM data isn't currently supported */
-std::string scm2string (SCM data);
-
-/** Convert a FloatVector2d into a SCM of the form (pos 12.2 40.912 234) */
-SCM vector2scm (const FloatVector2d& vec);
-
-/** Used in the BuildingMap: x,y => (pos x y) */
-SCM pos2scm (int x, int y);
-
-SCM symbol_value_pair (const std::string&, float);
-
-/** Pretty print the object given by obj */
-void pretty_print (std::ostream& s, SCM obj);
-
-bool equal_p(SCM a, SCM b);
-
-SCM symbol2scm(const char* str);
-
-std::string keyword2string(SCM keyword);
-
-std::string symbol2string(SCM symbol);
-
-/** Enters the read-eval-print-loop, which can be exited by (q) */
-void enter_repl();
-
-/** Sets a property from a SCM */
-void scm2property(PropertySet& properties, const char* name, SCM value);
-
-/** Converts a given property class to a SCM */
-SCM  property2scm(const Property& property);
-
-/** Convert a SCM of the form '((symbol value) ...) to an AList, types
-    are automatically converted. */
-AList scm2alist(SCM lst);
-
-/** Convert a SCM of the form (list #:keyword value #:keyword value
-    ...) to an AList */
-AList keywords2alist(SCM lst);
-
-/** Switches on debugging for Guile, causing line numbers and
-    backtraces be printed on errors */
-void enable_debug();
-
-/** Disable all debugging */
-void disable_debug();
-
-void enable_readline();
-
-} // namespace Guile
-
-#endif
-
-/* EOF */

Copied: trunk/src/handle_manager.hpp (from rev 341, trunk/src/handle_manager.hxx)


Property changes on: trunk/src/handle_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/handle_manager.hxx
===================================================================
--- trunk/src/handle_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/handle_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,99 +0,0 @@
-//  $Id: handle_manager.hxx,v 1.3 2003/06/18 13:03:13 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_HANDLE_MANAGER_HXX
-#define HEADER_HANDLE_MANAGER_HXX
-
-#include <vector>
-
-/** The HandleManager should take care of objects that get created or
-    exported from the Scheme world. The HandleManager should assign an
-    uniq id to every object that gets allocated and should allow to
-    lookup a object by a given id. Getting the id for a given object
-    should also be possible. A Handle and a HandleManager is always
-    bound to a specific object type, The HandleManager does not
-    provide any way to cleanup at the moment. */
-template<class T>
-class HandleManager
-{
-protected:
-  typedef std::vector<T*> Objects;
-  Objects objects;
-public:
-  HandleManager() {}
-  ~HandleManager() 
-  {
-    for(typename Objects::iterator i = objects.begin(); i != objects.end(); ++i)
-      {
-        delete *i;
-      }    
-  }
-
-  typedef int Handle;
-
-  T* create()
-  {
-    T* obj = new T();
-    objects.push_back(obj);
-    return obj;
-  }
-  
-  template<class Arg1>
-  T* create(const Arg1& arg1)
-  {
-    T* obj = new T(arg1);
-    objects.push_back(obj);
-    return obj;
-  }
-
-  template<class Arg1, class Arg2>
-  T* create(const Arg1& arg1, const Arg2& arg2)
-  {
-    T* obj = new T(arg1, arg2);
-    objects.push_back(obj);
-    return obj;
-  }
-
-  
-  T* lookup_by_handle(Handle handle)
-  {
-    if (handle >= 0 && handle < int(objects.size()))
-      return objects[handle];
-    else
-      return 0;    
-  }
-
-  Handle lookup_by_object(T* obj)
-  {
-    for(typename Objects::iterator i = objects.begin(); i != objects.end(); ++i)
-      {
-        if (*i == obj)
-          return i - objects.begin(); // return the index of the object
-      }
-    return -1;
-  }
-
-private:
-  HandleManager (const HandleManager&);
-  HandleManager& operator= (const HandleManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/help.hpp (from rev 341, trunk/src/help.hxx)


Property changes on: trunk/src/help.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/help.hxx
===================================================================
--- trunk/src/help.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/help.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,44 +0,0 @@
-//  $Id: help.hxx,v 1.1 2003/06/05 21:34:23 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_HELP_HXX
-#define HEADER_HELP_HXX
-
-#include <ClanLib/Display/font.h>
-#include "gui_obj.hxx"
-
-/** */
-class Help : public GuiObj
-{
-private:
-  CL_Font font;
-public:
-  Help();
-  ~Help();
-  
-  void draw(CL_GraphicContext& gc);
-  void update(float delta);
-private:
-  Help (const Help&);
-  Help& operator= (const Help&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/axis_button.hpp (from rev 341, trunk/src/input/axis_button.hxx)


Property changes on: trunk/src/input/axis_button.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/axis_button.hxx
===================================================================
--- trunk/src/input/axis_button.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/axis_button.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,53 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_AXIS_BUTTON_HXX
-#define HEADER_AXIS_BUTTON_HXX
-
-#include "input_button.hxx"
-
-class InputAxis;
-
-/** */
-class AxisButton : public InputButton
-{
-private:
-  CL_Slot on_axis_move_slot;
-  InputAxis* axis;
-  bool down;
-
-  /** true if the range 0..1 should be used to trigger, false if -1..0
-      should be used */
-  bool top;
-public:
-  AxisButton(InputAxis* axis, bool top);
-  ~AxisButton();
-
-  void update(float delta);
-  
-private:
-  void on_axis_move(float pos);
-
-  AxisButton (const AxisButton&);
-  AxisButton& operator= (const AxisButton&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/axis_factory.hpp (from rev 341, trunk/src/input/axis_factory.hxx)


Property changes on: trunk/src/input/axis_factory.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/axis_factory.hxx
===================================================================
--- trunk/src/input/axis_factory.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/axis_factory.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,38 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_AXIS_FACTORY_HXX
-#define HEADER_AXIS_FACTORY_HXX
-
-#include <guile/gh.h>
-#include "input_axis.hxx"
-
-/** */
-class AxisFactory
-{
-public:
-  static InputAxis* create(SCM lst);
-private:
-  static InputAxis* create_joystick_axis(SCM lst);
-  static InputAxis* create_button_axis(SCM lst);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/button_axis.hpp (from rev 341, trunk/src/input/button_axis.hxx)


Property changes on: trunk/src/input/button_axis.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/button_axis.hxx
===================================================================
--- trunk/src/input/button_axis.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/button_axis.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,50 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_BUTTON_AXIS_HXX
-#define HEADER_BUTTON_AXIS_HXX
-
-#include "input_axis.hxx"
-
-class InputButton;
-
-class ButtonAxis : public InputAxis
-{
-private:
-  InputButton* left;
-  InputButton* right;
-
-  bool left_state;
-  bool right_state;
-  
-  float pos;
-private:
-  void on_left_up();
-  void on_left_down();
-
-  void on_right_up();
-  void on_right_down();
-public:
-  ButtonAxis(InputButton* left, InputButton* right);
-  void update(float delta);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/button_factory.hpp (from rev 341, trunk/src/input/button_factory.hxx)


Property changes on: trunk/src/input/button_factory.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/button_factory.hxx
===================================================================
--- trunk/src/input/button_factory.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/button_factory.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,46 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_BUTTON_FACTORY_HXX
-#define HEADER_BUTTON_FACTORY_HXX
-
-#include <guile/gh.h>
-
-class InputButton;
-
-/** */
-class ButtonFactory
-{
-private:
-public:
-  static InputButton* create(SCM lst);
-
-private:
-  static InputButton* create_joystick_button(SCM lst);
-  static InputButton* create_keyboard_button(SCM lst);
-  static InputButton* create_axis_button(SCM lst);
-  static InputButton* create_multi_button(SCM lst);
-
-  ButtonFactory (const ButtonFactory&);
-  ButtonFactory& operator= (const ButtonFactory&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/controller.hpp (from rev 341, trunk/src/input/controller.hxx)


Property changes on: trunk/src/input/controller.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/controller.hxx
===================================================================
--- trunk/src/input/controller.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/controller.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,59 +0,0 @@
-//  $Id: controller.hxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_CONTROLLER_HXX
-#define HEADER_CONTROLLER_HXX
-
-#include <vector>
-#include "../controller_def.hxx"
-#include "input_event.hxx"
-
-/** The Controller class presents the current state of the controller
-    and the input events that occurred on the controller since the
-    last update */
-class Controller
-{
-private:
-  /** State of all buttons, indexed by ButtonName */
-  std::vector<bool> buttons;
-  
-  /** State of all axis, indexed by AxisName */
-  std::vector<float> axes;
-
-  InputEventLst events;
-
-public:
-  Controller();
-
-  float get_axis_state  (int name) const;
-  bool  get_button_state(int name) const;
-
-  void  set_axis_state  (int name, float pos);
-  void  set_button_state(int name, bool down);
-
-  void add_axis_event  (int name, float pos);
-  void add_button_event(int name, bool down);
-
-  InputEventLst get_events() const;
-  void set_events(const InputEventLst& lst);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/input_axis.hpp (from rev 341, trunk/src/input/input_axis.hxx)


Property changes on: trunk/src/input/input_axis.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_axis.hxx
===================================================================
--- trunk/src/input/input_axis.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/input_axis.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,42 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_AXIS_HXX
-#define HEADER_INPUT_AXIS_HXX
-
-#include <vector>
-#include <ClanLib/Signals/slot.h>
-#include <ClanLib/Signals/signal_v1.h>
-
-class InputAxis
-{
-protected:
-  std::vector<CL_Slot> slots;
-  CL_Signal_v1<float> move;  
-public:
-  InputAxis() {}
-  virtual ~InputAxis() {}
-
-  virtual void update(float delta) {}
-  CL_Signal_v1<float>& on_move() { return move; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/input_axis_input_device.hpp (from rev 341, trunk/src/input/input_axis_input_device.hxx)


Property changes on: trunk/src/input/input_axis_input_device.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_axis_input_device.hxx
===================================================================
--- trunk/src/input/input_axis_input_device.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/input_axis_input_device.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,41 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_AXIS_INPUT_DEVICE_HXX
-#define HEADER_INPUT_AXIS_INPUT_DEVICE_HXX
-
-#include <ClanLib/Display/input_device.h>
-#include "input_axis.hxx"
-
-class InputAxisInputDevice : public InputAxis
-{
-private:
-  CL_InputDevice dev;
-  int axis_num;
-
-  void on_axis_move(const CL_InputEvent& event); 
-
-public:
-  InputAxisInputDevice(CL_InputDevice& dev, int num);
-  void update(float delta) {}
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/input_button.hpp (from rev 341, trunk/src/input/input_button.hxx)


Property changes on: trunk/src/input/input_button.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_button.hxx
===================================================================
--- trunk/src/input/input_button.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/input_button.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,46 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_BOTTON_HXX
-#define HEADER_INPUT_BOTTON_HXX
-
-#include <vector>
-#include <ClanLib/Signals/slot.h>
-#include <ClanLib/Signals/signal_v0.h>
-
-class InputButton
-{
-protected:
-  std::vector<CL_Slot> slots;
-  CL_Signal_v0 button_down;
-  CL_Signal_v0 button_up;
-
-public:
-  InputButton() {}
-  virtual ~InputButton() {}
-  
-  virtual void update(float delta) {}
-
-  CL_Signal_v0& on_key_down() { return button_down; }
-  CL_Signal_v0& on_key_up()   { return button_up; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/input_button_input_device.hpp (from rev 341, trunk/src/input/input_button_input_device.hxx)


Property changes on: trunk/src/input/input_button_input_device.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_button_input_device.hxx
===================================================================
--- trunk/src/input/input_button_input_device.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/input_button_input_device.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,43 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_BOTTON_INPUT_DEVICE_HXX
-#define HEADER_INPUT_BOTTON_INPUT_DEVICE_HXX
-
-#include <ClanLib/Display/input_device.h>
-#include "input_button.hxx"
-
-class InputButtonInputDevice : public InputButton
-{
-private:
-  CL_InputDevice dev;
-  int keycode;
-
-  void on_key_down(const CL_InputEvent& event);
-  void on_key_up(const CL_InputEvent& event);
-
-public:
-  InputButtonInputDevice(CL_InputDevice& dev, int keycode);
-  
-  void update(float delta) {}
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/input_event.hpp (from rev 341, trunk/src/input/input_event.hxx)


Property changes on: trunk/src/input/input_event.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_event.hxx
===================================================================
--- trunk/src/input/input_event.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/input_event.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,63 +0,0 @@
-//  $Id: input_event.hxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_EVENT_HXX
-#define HEADER_INPUT_EVENT_HXX
-
-#include <vector>
-
-enum InputEventType { BUTTON_EVENT, AXIS_EVENT };
-
-struct ButtonEvent
-{
-  int name;
-
-  /** true if down, false if up */
-  bool down;
-
-  bool is_down() const { return down; }
-  bool is_up()   const { return !down; }
-};
-
-struct AxisEvent
-{
-  int name;
-
-  /** Pos can be in range from [-1.0, 1.0], some axis will only use [0,1.0] */
-  float pos;
-
-  float get_pos() { return pos; }
-};
-
-struct InputEvent 
-{
-  InputEventType type;
-    
-  union 
-  {
-    struct ButtonEvent button;
-    struct AxisEvent   axis;
-  };
-};
-
-typedef std::vector<InputEvent> InputEventLst;
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/input_manager.hpp (from rev 341, trunk/src/input/input_manager.hxx)


Property changes on: trunk/src/input/input_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_manager.hxx
===================================================================
--- trunk/src/input/input_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/input_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,57 +0,0 @@
-//  $Id: input_manager.hxx,v 1.3 2003/06/06 18:36:24 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_MANAGER_HXX
-#define HEADER_INPUT_MANAGER_HXX
-
-#include <vector>
-#include "controller.hxx"
-#include "input_event.hxx"
-
-class InputRecorder;
-class InputManagerImpl;
-
-/** */
-class InputManager
-{
-private:
-  static InputManagerImpl* impl;
-  static InputRecorder* recorder;
-public:
-  /** Init the InputManager with the data found in \a filename */
-  static void init(const std::string& filename = std::string());
-
-  /** Init the playback of a previously recorded file */
-  static void init_playback(const std::string& filenam);
-  static void deinit();
-
-  /** Record all input events to \a filename */
-  static void setup_recorder(const std::string& filename);
-
-  static void update(float delta);
-  static Controller get_controller();
-  static void clear();
-private:
-  InputManager(const InputManager&);
-  InputManager& operator=(const InputManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/input_manager_custom.hpp (from rev 341, trunk/src/input/input_manager_custom.hxx)


Property changes on: trunk/src/input/input_manager_custom.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_manager_custom.hxx
===================================================================
--- trunk/src/input/input_manager_custom.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/input_manager_custom.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,60 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_MANAGER_CUSTOM_HXX
-#define HEADER_INPUT_MANAGER_CUSTOM_HXX
-
-#include <guile/gh.h>
-#include <ClanLib/Display/input_device.h>
-#include <ClanLib/Display/input_event.h>
-#include "input_event.hxx"
-#include "input_button.hxx"
-#include "input_axis.hxx"
-#include "input_manager_impl.hxx"
-
-/** */
-class InputManagerCustom : public InputManagerImpl
-{
-private:
-  std::vector<CL_Slot> slots;
-
-  typedef std::vector<InputAxis*>   Axes;
-  typedef std::vector<InputButton*> Buttons;
-  
-  Axes    axes;
-  Buttons buttons;
-
-public:
-  InputManagerCustom(SCM lst);
-  
-  void update(float delta);
-
-  void on_button_up(int name);
-  void on_button_down(int name);
-  void on_axis_move(float pos, int name);
-private:
-  void init(SCM lst);
-
-  InputManagerCustom (const InputManagerCustom&);
-  InputManagerCustom& operator= (const InputManagerCustom&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/input_manager_impl.hpp (from rev 341, trunk/src/input/input_manager_impl.hxx)


Property changes on: trunk/src/input/input_manager_impl.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_manager_impl.hxx
===================================================================
--- trunk/src/input/input_manager_impl.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/input_manager_impl.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,53 +0,0 @@
-//  $Id: input_manager_impl.hxx,v 1.3 2003/06/06 18:36:24 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_MANAGER_IMPL_HXX
-#define HEADER_INPUT_MANAGER_IMPL_HXX
-
-#include "controller.hxx"
-#include "input_event.hxx"
-
-/** */
-class InputManagerImpl
-{
-protected:
-  Controller controller;
-  InputEventLst events;
-
-public:
-  InputManagerImpl() {}
-  virtual ~InputManagerImpl() {}
-
-  virtual void update(float delta) =0;
-  
-  InputEventLst get_events();
-
-  Controller get_controller();
-  void clear();
-
-  void add_axis_event  (int name, float pos);
-  void add_button_event(int name, bool down);
-private:
-  InputManagerImpl(const InputManagerImpl&);
-  InputManagerImpl& operator=(const InputManagerImpl&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/input_manager_player.hpp (from rev 341, trunk/src/input/input_manager_player.hxx)


Property changes on: trunk/src/input/input_manager_player.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_manager_player.hxx
===================================================================
--- trunk/src/input/input_manager_player.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/input_manager_player.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,55 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_MANAGER_PLAYER_HXX
-#define HEADER_INPUT_MANAGER_PLAYER_HXX
-
-#include <queue>
-#include <string>
-#include <guile/gh.h>
-#include "input_manager_impl.hxx"
-
-/** Playback class for events recorded my the InputRecorder */
-class InputManagerPlayer : public InputManagerImpl
-{
-private:
-  struct Entry {
-    Entry(int num, const InputEventLst& lst) 
-      : entry_num(num), events(lst)
-    {}
-    int entry_num;
-    InputEventLst events;
-  };
-
-  int entry_counter;
-  std::queue<Entry> entries;
-public:
-  InputManagerPlayer(const std::string& filename);
-  
-  void update(float delta);
-private:
-  InputEvent scm2event(SCM lst);
-
-  InputManagerPlayer (const InputManagerPlayer&);
-  InputManagerPlayer& operator= (const InputManagerPlayer&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/input_recorder.hpp (from rev 341, trunk/src/input/input_recorder.hxx)


Property changes on: trunk/src/input/input_recorder.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_recorder.hxx
===================================================================
--- trunk/src/input/input_recorder.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/input_recorder.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,46 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_RECORDER_HXX
-#define HEADER_INPUT_RECORDER_HXX
-
-#include <fstream>
-#include "controller.hxx"
-
-/** The InputRecorder hooks into the InputManager and records all
-    input events to a file, thus allowing the later playback of the
-    events. */
-class InputRecorder
-{
-private:
-  std::ofstream out;
-  int entry_counter;
-public:
-  InputRecorder(const std::string& filename);
-  ~InputRecorder();
-
-  void record(const Controller& controller);
-private:
-  InputRecorder (const InputRecorder&);
-  InputRecorder& operator= (const InputRecorder&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/input/multi_button.hpp (from rev 341, trunk/src/input/multi_button.hxx)


Property changes on: trunk/src/input/multi_button.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/multi_button.hxx
===================================================================
--- trunk/src/input/multi_button.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/input/multi_button.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,46 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_MULTI_BUTTON_HXX
-#define HEADER_MULTI_BUTTON_HXX
-
-#include <vector>
-#include "input_button.hxx"
-
-/** */
-class MultiButton : public InputButton
-{
-private:
-  typedef std::vector<InputButton*> Buttons;
-  Buttons buttons;
-  std::vector<CL_Slot> slots;  
-  int press_count;
-public:
-  MultiButton();
-  
-  void add(InputButton*);
-  void update(float delta);
-private:
-  void released();
-  void pressed();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/ipc.hpp (from rev 341, trunk/src/ipc.hxx)


Property changes on: trunk/src/ipc.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/ipc.hxx
===================================================================
--- trunk/src/ipc.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/ipc.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,47 +0,0 @@
-//  $Id: ipc.hxx,v 1.1 2003/06/04 13:16:17 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_IPC_HXX
-#define HEADER_FEUERKRAFT_IPC_HXX
-
-#include <fstream>
-#include <string>
-
-/** Provides a named pipe that other processes can use to communicate
-    with Feuerkraft */
-class IPC
-{
-private:
-  std::string filename;
-  int stream_fd;
-public:
-  /** Create a named pipe with \a filename */
-  IPC(const std::string& arg_filename);
-  ~IPC();
-  
-  /** Look at the pipe to see if any information is waiting to be
-      read */
-  void update();
-private:
-  bool something_to_read();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/keyboard_manager.hpp (from rev 341, trunk/src/keyboard_manager.hxx)


Property changes on: trunk/src/keyboard_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/keyboard_manager.hxx
===================================================================
--- trunk/src/keyboard_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/keyboard_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,88 +0,0 @@
-//  $Id: keyboard_manager.hxx,v 1.6 2003/10/31 23:24:41 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_KEYBOARD_MANAGER_HXX
-#define HEADER_KEYBOARD_MANAGER_HXX
-
-#include <vector>
-#include <ClanLib/Display/input_event.h>
-
-/** Management class for keyboard events, if a key is pressed it looks
-    up a callback and if one it set it evalutes the callback. This
-    class is mainly used for user-created callback functions from
-    Guile */
-class KeyboardManager
-{
-private:
-  static KeyboardManager* instance_;
-public:
-  static KeyboardManager* instance() { 
-    if (instance_) 
-      return instance_;
-    else
-      return instance_ = new KeyboardManager();
-  }
-private:
-  std::vector<CL_Slot> slots;
-
-  struct Callback {
-    int key_id;
-    Callback(int id)
-      : key_id(id)
-    {}
-
-    virtual void run() =0;
-  };
-  
-  template<class C>
-  struct GenericCallback
-    : public Callback {
-    C callback;
-    GenericCallback(int key_id, const C& c) 
-      : Callback(key_id), 
-        callback(c)
-    {
-    }
-
-    virtual ~GenericCallback() {}
-
-    void run() { callback(); }
-  };
-
-  typedef std::vector<Callback*> Callbacks; 
-  Callbacks callbacks;
-public:
-  KeyboardManager();
-  ~KeyboardManager();
-
-  template<class C>
-  void register_down_callback(int key_id, const C& c) {
-    callbacks.push_back(new GenericCallback<C>(key_id, c));
-  }
-private:
-  void button_up(const CL_InputEvent& event);
-  void button_down(const CL_InputEvent& event);
-
-  KeyboardManager (const KeyboardManager&);
-  KeyboardManager& operator= (const KeyboardManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/keys.hpp (from rev 341, trunk/src/keys.hxx)


Property changes on: trunk/src/keys.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/keys.hxx
===================================================================
--- trunk/src/keys.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/keys.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,28 +0,0 @@
-//  $Id: keys.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_KEYS_HXX
-#define HEADER_KEYS_HXX
-
-const char* keyid2string(int id);
-int string2keyid(const char* key);
-
-#endif
-
-/* EOF */

Copied: trunk/src/level_map.hpp (from rev 341, trunk/src/level_map.hxx)


Property changes on: trunk/src/level_map.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/level_map.hxx
===================================================================
--- trunk/src/level_map.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/level_map.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,40 +0,0 @@
-//  $Id: level_map.hxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef LEVELMAP_HXX
-#define LEVELMAP_HXX
-
-#include "gui_obj.hxx"
-
-class GameWorld;
-
-class LevelMap : public GuiObj
-{
-private:
-public:
-  LevelMap ();
-  ~LevelMap ();
-
-  void update (float delta);
-  void draw (CL_GraphicContext& gc);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/line_segments.hpp (from rev 341, trunk/src/line_segments.hxx)


Property changes on: trunk/src/line_segments.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/line_segments.hxx
===================================================================
--- trunk/src/line_segments.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/line_segments.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,108 +0,0 @@
-//  $Id: line_segments.hxx,v 1.9 2003/06/06 20:55:24 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_LINE_SEGMENTS_HXX
-#define HEADER_LINE_SEGMENTS_HXX
-
-#include "vector2d.hxx"
-#include <vector>
-
-class View;
-          
-/** */
-class LineSegments
-{
-private:
-  enum { STRAIGHT, RADIAL };
-
-  struct StraightSegment {
-    float x1, y1; ///< start
-    float x2, y2; ///< goal
-  };
-
-  struct RadialSegment {
-    float x, y;        ///< position of the circle
-    float radius;      ///< radius of the circle
-    float start_angle; ///< start angle in radians
-    float end_angle;   ///< end angle in radians
-    bool  turn_right;  ///< true if counterclockwise
-  };
-  
-  // FIXME: Replace me with OO
-  struct Segment {
-    int   type;   ///< type of the segment
-    float length; ///< length of the segment, calculated from the segment
-    
-    union {
-      struct RadialSegment   radial;
-      struct StraightSegment straight;
-    };
-  };
-
-  typedef std::vector<Segment> Segments;
-  Segments segments;
-  
-  float init_x, init_y, init_orientation;
-
-  float calc_length(const Segment&);
-  Segments::iterator get_segment(float l);
-
-  /** @return the position on the line segment after having traveled
-      \a l 'pixels' on it */
-  FloatVector2d get_pos(const Segment&, float l);
-  float     get_orientation(const Segment&, float l);
-
-  bool calc_route(float start_x, float start_y, 
-                  float dest_x, float dest_y, 
-                  float start_orientation, 
-                  float radius, bool turn_right,
-                  float& px, float& py, float& qx, float& qy, 
-                  float& angle_start, float& angle_final, float& length);
-public:
-  LineSegments(float init_x, float init_y, float init_orientation);
-
-  float     get_end_orientation();
-  FloatVector2d get_end_pos();
-
-  FloatVector2d get_pos(float l);
-  float     get_orientation(float l);
-
-  /** @return length of all segments together */
-  float get_length();
-  
-  /** Remove all segments */
-  void clear();
-
-  /** Set the position of the line segment */
-  void set_pos(float init_x, float init_y, float init_orientation);
-
-  void add_straight_segment(float x1, float y1, float x2, float y2);
-  void add_radial_segment(float x, float y, float radius, 
-                          float start_angle, float stop_angle, bool turn_right);
-  
-  /** Generate one or more segments to the given controll point */
-  void add_controll_point(float x, float y, float turn_radius);
-
-  /** Some code to draw the path for debugging */
-  void draw(View& view);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/marker.hpp (from rev 341, trunk/src/marker.hxx)


Property changes on: trunk/src/marker.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/marker.hxx
===================================================================
--- trunk/src/marker.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/marker.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,54 +0,0 @@
-//  $Id: marker.hxx,v 1.3 2003/06/23 09:56:39 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_MARKER_HXX
-#define HEADER_MARKER_HXX
-
-#include <ClanLib/Display/sprite.h>
-#include "game_obj.hxx"
-#include "vector2d.hxx"
-
-class AList;
-class View;
-
-/** A marker is a special guide for the player that gives visual
-    informations on the radar and on the map. */
-class Marker : public GameObj
-{
-private:
-  CL_Sprite sprite;
-  FloatVector2d pos;
-  float passed_time;
-public:
-  Marker(const AList& lst);
-  ~Marker();
-
-  void draw  (View& view);
-  void draw_radar(Radar& radar);
-  void update(float delta);
-
-  float get_z_pos() { return 10000; }
-private:
-  Marker (const Marker&);
-  Marker& operator= (const Marker&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/math.hpp (from rev 341, trunk/src/math.hxx)


Property changes on: trunk/src/math.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/math.hxx
===================================================================
--- trunk/src/math.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/math.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,192 +0,0 @@
-//  $Id: math.hxx,v 1.7 2003/06/18 13:03:13 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PINGUS_MATH_HXX
-#define HEADER_PINGUS_MATH_HXX
-
-#include <stdlib.h>
-
-/** A collection of small math helper functions, some of them might be
-    equal in functionality to standard STL functions, but provided
-    here for portability and broken STL implementations 
-    
-    @brief A collection of mathematical helper functions */
-namespace Math {
-
-const double pi   = 3.14159265358979323846;	/* pi */
-const double pi_2 = 1.57079632679489661923;	/* pi/2 */
-
-const double east  = 0;
-const double north = pi_2;
-const double west  = pi;
-const double south = 3.0*pi_2;
-
-inline double deg2rad(double deg) 
-{
-  return deg / 180.0 * pi;
-}
-
-inline double rad2deg(double rad) 
-{
-  return rad / pi * 180;
-}
-
-template<class T> 
-T min (const T& a, const T& b) 
-{
-  if (a < b)
-    return a;
-  else
-    return b;
-}
-
-template<class T> 
-T max (const T& a, const T& b) 
-{
-  if (a > b)
-    return a;
-  else
-    return b;
-}
-
-template<class T> 
-T mid (const T& a, const T& b, const T& c) 
-{
-  return max<T>((a), min<T>((b), (c)));
-}
-
-inline
-double frand()
-{
-  return double(rand()) / (RAND_MAX+1.0);
-}
-
-inline
-bool rand_bool()
-{
-  return rand()%2 == 0;
-}
-
-inline 
-float normalize_angle(float angle)
-{
-  // FIXME: Use fmod here
-  if (angle < 0)
-    return normalize_angle(angle + 2*pi);
-  else if (angle > 2*pi)
-    return normalize_angle(angle - 2*pi);
-  else 
-    return angle;
-}
-
-struct Point {
-  float x, y;
-};
-
-struct Triangle {
-  Point a;
-  Point b;
-  Point c;
-};
-
-struct Quad {
-  Point a;
-  Point b;
-  Point c;
-  Point d;
-};
-
-inline
-bool lines_intersect(float x1, float y1, float x2, float y2,
-                     float x3, float y3, float x4, float y4)
-{
-  float b_x = x2 - x1;
-  float b_y = y2 - y1;
-
-  float d_x = x4 - x3;
-  float d_y = y4 - x3;
-
-  // The lines are parallel
-  if ((b_y*d_x - b_x*d_y) == 0.0)
-    return false;
-  
-  float lambda = ((y3*d_x - x3*d_y) + (x1*d_y - y1*d_x)) / (b_y*d_x - b_x*d_y);
-  float mu;
-
-  if (d_x != 0.0)
-    mu = (x1 + (lambda * b_x) - x3) / d_x;
-  else
-    mu = (y1 + (lambda * b_y) - y3) / d_y;
-  
-  return (lambda >= 0 && lambda <= 1.0
-          && mu >= 0 && mu <= 1.0);
-}
-
-inline
-bool lines_intersect(const Point& a1, const Point& a2,
-                     const Point& b1, const Point& b2)
-{
-  return lines_intersect(a1.x, a1.y, a2.x, a2.y,
-                         b1.x, b1.y, b2.x, b2.y);
-}
-
-bool point_inside_triangle(float px, float py,
-                           float x1, float y1, float x2, float y2, float x3, float y3);
-
-inline
-bool point_inside_triangle(const Point p, const Triangle& triangle)
-{
-  return point_inside_triangle(p.x, p.y,
-                               triangle.a.x, triangle.a.y,
-                               triangle.b.x, triangle.b.y,
-                               triangle.c.x, triangle.c.y);
-}
-
-inline
-bool point_inside_triangle(float px, float py,
-                           float x1, float y1, float x2, float y2, float x3, float y3)
-{
-  float b0 =  (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);
-  float b1 = ((x2 - px) * (y3 - py) - (x3 - px) * (y2 - py)) / b0;
-  float b2 = ((x3 - px) * (y1 - py) - (x1 - px) * (y3 - py)) / b0;
-  float b3 = ((x1 - px) * (y2 - py) - (x2 - px) * (y1 - py)) / b0;
-  
-  if(b1 > 0 && b2 > 0 && b3 > 0) // strictly inside
-    {
-      return true;
-    }
-  else if((b1>=0 && b2>=0 && b3>=0) && (b1+b2+b3) >= 0) // on edge.
-    {
-      return true;
-    }
-  else
-    {
-      return false;
-    }
-}
-
-bool point_inside_quad(const Point& p, const Quad& q);
-bool quad_collide(const Quad& a, const Quad& b);
-bool triangle_collide(const Triangle& a, const Triangle& b);
-
-} // namespace Math
-
-#endif
-
-/* EOF */

Copied: trunk/src/menu.hpp (from rev 341, trunk/src/menu.hxx)


Property changes on: trunk/src/menu.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/menu.hxx
===================================================================
--- trunk/src/menu.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/menu.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,64 +0,0 @@
-//  $Id: menu.hxx,v 1.5 2003/10/31 23:24:41 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_MENU_HXX
-#define HEADER_MENU_HXX
-
-#include <vector>
-#include "input/input_event.hxx"
-#include "gui_obj.hxx"
-
-class MenuItem;
-
-/** */
-class Menu : public GuiObj
-{
-private:
-  typedef std::vector<MenuItem*> MenuItems;
-  MenuItems items;
-  int current_item;
-  float pos;
-  bool moving;
-public:
-  Menu();
-  ~Menu();
-
-  void draw (CL_GraphicContext& gc);
-  void update(float delta);
-  void add_item(MenuItem*);
-  
-  void next_item();
-  void previous_item();
-
-  /** Evaluate the current item */
-  void call_current_item();
-
-  /** Hide the current menu */
-  void hide();
-
-  /** */
-  void process_events(const InputEventLst& );
-private:
-  Menu (const Menu&);
-  Menu& operator= (const Menu&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/menu_handle_mgr.hpp (from rev 341, trunk/src/menu_handle_mgr.hxx)


Property changes on: trunk/src/menu_handle_mgr.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/menu_handle_mgr.hxx
===================================================================
--- trunk/src/menu_handle_mgr.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/menu_handle_mgr.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,32 +0,0 @@
-//  $Id: menu_handle_mgr.hxx,v 1.1 2003/06/06 09:49:35 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_MENU_HANDLE_MGR_HXX
-#define HEADER_MENU_HANDLE_MGR_HXX
-
-#include "menu.hxx"
-#include "menu_item.hxx"
-#include "handle_manager.hxx"
-
-extern HandleManager<Menu>     menu_handle_mgr;
-extern HandleManager<MenuItem> menu_item_handle_mgr;
-
-#endif
-
-/* EOF */

Copied: trunk/src/menu_item.hpp (from rev 341, trunk/src/menu_item.hxx)


Property changes on: trunk/src/menu_item.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/menu_item.hxx
===================================================================
--- trunk/src/menu_item.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/menu_item.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,78 +0,0 @@
-//  $Id: menu_item.hxx,v 1.4 2003/06/18 13:03:13 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_MENU_ITEM_HXX
-#define HEADER_MENU_ITEM_HXX
-
-#include <string>
-
-class Menu;
-
-class MenuItemFunctor
-{
-public:
-  MenuItemFunctor() {}
-  virtual ~MenuItemFunctor() {}
-  
-  virtual void call() {}
-};
-
-class MenuItemSubMenuFunctor : public MenuItemFunctor
-{
-private:
-  Menu* submenu;
-public:
-  MenuItemSubMenuFunctor(Menu* arg_submenu);
-  void call();
-};
-
-template<class Func>
-class MenuItemGenericFunctor : public MenuItemFunctor
-{
-private:
-  Func func;
-public:
-  MenuItemGenericFunctor(const Func& arg_func)
-    : func(arg_func) {}
-
-  void call() { func(); }
-};
-
-/** */
-class MenuItem
-{
-private:
-  std::string label;
-  MenuItemFunctor* functor;
-public:
-  MenuItem(const std::string& arg_label, MenuItemFunctor* arg_functor);
-  ~MenuItem();
-
-  void draw(int x, int y);
-  void draw_highlight(int x, int y);
-
-  void call();
-private:
-  MenuItem (const MenuItem&);
-  MenuItem& operator= (const MenuItem&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/message_buffer.hpp (from rev 341, trunk/src/message_buffer.hxx)


Property changes on: trunk/src/message_buffer.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/message_buffer.hxx
===================================================================
--- trunk/src/message_buffer.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/message_buffer.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,56 +0,0 @@
-//  $Id: message_buffer.hxx,v 1.2 2003/06/08 15:49:00 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_MESSAGE_BUFFER_HXX
-#define HEADER_MESSAGE_BUFFER_HXX
-
-#include <vector>
-#include "gui_obj.hxx"
-
-struct MessageBufferEntry {
-  std::string message;
-  float display_time;
-};
-
-/** */
-class MessageBuffer : public GuiObj
-{
-private:
-  int x_pos;
-  int y_pos;
-  typedef std::vector<MessageBufferEntry> Buffer;
-  Buffer buffer;
-  static MessageBuffer* current_;
-public:
-  static MessageBuffer* current();
-
-  MessageBuffer(int x, int y);
-  
-  void add(const std::string& );
-
-  void draw(CL_GraphicContext& gc);
-  void update(float delta);
-private:
-  MessageBuffer (const MessageBuffer&);
-  MessageBuffer& operator= (const MessageBuffer&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/mine.hpp (from rev 341, trunk/src/mine.hxx)


Property changes on: trunk/src/mine.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/mine.hxx
===================================================================
--- trunk/src/mine.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/mine.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,53 +0,0 @@
-//  $Id: mine.hxx,v 1.10 2003/06/20 20:54:23 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef MINE_HH
-#define MINE_HH
-
-#include "game_obj.hxx"
-#include "explosion.hxx"
-
-class AList;
-
-class Mine : public GameObj
-{
-private:
-  FloatVector2d pos;
-  float active;
-  bool  detonated;
-
-  CL_Sprite sur;
-  CL_Sprite sur_active;
-  CL_Sprite hole;
-public:
-  Mine(const AList& lst);
-  virtual ~Mine() {}
-
-  FloatVector2d get_pos () { return pos; }
-  void update (float);
-  void draw (View& view);
-  void detonate ();
-  bool is_active ();
-
-  void on_collision(GameObj* obj);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/output_world_builder.hpp (from rev 341, trunk/src/output_world_builder.hxx)


Property changes on: trunk/src/output_world_builder.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/output_world_builder.hxx
===================================================================
--- trunk/src/output_world_builder.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/output_world_builder.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,48 +0,0 @@
-//  $Id: output_world_builder.hxx,v 1.4 2003/06/22 21:51:21 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_OUTPUT_WORLD_BUILDER_HXX
-#define HEADER_OUTPUT_WORLD_BUILDER_HXX
-
-#include <iostream>
-#include "world_builder.hxx"
-
-/** Class for converting or serializing a GameWorld */
-class OutputWorldBuilder
-  : public WorldBuilder
-{
-public:
-  OutputWorldBuilder();
-
-  void add_object(const std::string& type, const AList&);
-  void add_brush(const std::string& resname, const AList&);
-  void add_building(const std::string&, const AList&);
-  void add_groundmap(const std::string&, const AList&);
-  void add_script(const std::string& resname);
-
-private:
-  void print_alist(const AList& alist);
-
-  OutputWorldBuilder (const OutputWorldBuilder&);
-  OutputWorldBuilder& operator= (const OutputWorldBuilder&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/particles/explosion_particle.hpp (from rev 341, trunk/src/particles/explosion_particle.hxx)


Property changes on: trunk/src/particles/explosion_particle.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/explosion_particle.hxx
===================================================================
--- trunk/src/particles/explosion_particle.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/particles/explosion_particle.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,100 +0,0 @@
-//  $Id: explosion_particle.hxx,v 1.9 2003/06/06 09:49:00 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef EXPLOSIONPARTICLE_HXX
-#define EXPLOSIONPARTICLE_HXX
-
-#include <ClanLib/display.h>
-#include "view.hxx"
-#include "particle.hxx"
-#include "../math.hxx"
-#include "../resource_manager.hxx"
-
-class ExplosionParticle : public Particle
-{
-private:
-  float size;
-  CL_Sprite sprite;
-  CL_Sprite sprite_light;
-  float max_life_time;
-  bool direction;
-  float angle;
-public:
-  ExplosionParticle(const FloatVector2d& arg_pos, const FloatVector2d& arg_vel, float arg_size)
-  {
-    velocity = arg_vel;
-    pos = arg_pos;
-
-    life_time = ((rand() % 10) / 40.0f) + .5;
-    max_life_time = life_time;
-
-    size = arg_size;
-
-    direction = rand () % 2;
-
-    angle = rand () % 360;
-
-    // FIXME: memory leak
-    sprite = resources->get_sprite("feuerkraft/explosion");
-    sprite_light = resources->get_sprite("feuerkraft/explosion-light");
-    sprite.rotate (angle);
-    sprite.set_blend_func(blend_src_alpha, blend_one);
-  
-    //std::cout << "Angle: " << angle << std::endl;
-  }
-
-  void update (float delta) {
-    Particle::update (delta);
-    
-    if (direction)
-      {
-	angle += .5f * delta;
-      }
-    else
-      {
-	angle -= .5f * delta;
-      }
-  }
-  
-  void draw (View& view) 
-  {
-    if (life_time > 0)
-      {
-	float alpha = 1.0f - (life_time/max_life_time);
-
-	sprite.set_alpha (1.0f - (alpha * alpha));
-
-	sprite.set_scale (((1 - life_time/max_life_time)) * size,
-                          ((1 - life_time/max_life_time)) * size);
-
-	sprite_light.set_scale (((1 - life_time/max_life_time)) * size * 2.0f,
-                                ((1 - life_time/max_life_time)) * size * 2.0f);
-
-        sprite.set_angle(Math::rad2deg(angle));
-	view.get_sc().color().draw(sprite, pos.x, pos.y);
-	view.get_sc().light().draw(sprite_light, pos.x, pos.y);
-      }
-  }
-
-  float get_z_pos () { return 200; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/particles/fire_emitter.hpp (from rev 341, trunk/src/particles/fire_emitter.hxx)


Property changes on: trunk/src/particles/fire_emitter.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/fire_emitter.hxx
===================================================================
--- trunk/src/particles/fire_emitter.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/particles/fire_emitter.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,36 +0,0 @@
-//  $Id: fire_emitter.hxx,v 1.2 2003/06/18 13:03:13 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FIRE_EMITTER_HXX
-#define HEADER_FIRE_EMITTER_HXX
-
-/** */
-class FireEmitter
-{
-private:
-public:
-  FireEmitter();
-private:
-  FireEmitter (const FireEmitter&);
-  FireEmitter& operator= (const FireEmitter&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/particles/fire_particle.hpp (from rev 341, trunk/src/particles/fire_particle.hxx)


Property changes on: trunk/src/particles/fire_particle.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/fire_particle.hxx
===================================================================
--- trunk/src/particles/fire_particle.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/particles/fire_particle.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,45 +0,0 @@
-//  $Id: fire_particle.hxx,v 1.1 2003/06/07 17:18:34 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FIRE_PARTICLE_HXX
-#define HEADER_FIRE_PARTICLE_HXX
-
-#include <ClanLib/Display/sprite.h>
-#include "../vector2d.hxx"
-#include "../game_obj.hxx"
-
-/** */
-class FireParticle : public GameObj
-{
-private:
-  CL_Sprite sprite;
-  FloatVector2d pos;
-  float life_time;
-public:
-  FireParticle(const FloatVector2d& arg_pos);
-
-  void update(float delta);
-  void draw (View& view);
-
-  float get_z_pos () { return 100.0f; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/particles/grass_particle.hpp (from rev 341, trunk/src/particles/grass_particle.hxx)


Property changes on: trunk/src/particles/grass_particle.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/grass_particle.hxx
===================================================================
--- trunk/src/particles/grass_particle.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/particles/grass_particle.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,70 +0,0 @@
-//  $Id: grass_particle.hxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef GRASSPARTICLE_HXX
-#define GRASSPARTICLE_HXX
-
-#include "particle.hxx"
-#include "../resource_manager.hxx"
-
-class GrassParticle : public Particle
-{
-private:
-  CL_Sprite sprite;
-  float size;
-  float angle;
-  float max_life_time;
-  
-public:
-  GrassParticle(const FloatVector2d& arg_pos)
-  {
-    pos = arg_pos;
-    size = 1;
-    angle = rand () % 360;    
-    sprite = resources->get_sprite("feuerkraft/grasssmoke");
-    max_life_time = 10.0f;
-    life_time = max_life_time;
-    //velocity = FloatVector2d (80.0f, 0.0f);
-  }
-
-  virtual ~GrassParticle ()
-  {
-  }
-
-  void update (float delta) {
-    Particle::update (delta);
-
-    life_time -= delta;
-  }
-
-  void draw (View& view) 
-  {    
-    sprite.set_alpha ((life_time/max_life_time) * 0.4);
-    sprite.set_scale (0.8f + ((1 - life_time/max_life_time)) * 4.0f,
-		       0.8f + ((1 - life_time/max_life_time)) * 4.0f);
-    sprite.set_angle(angle);
-    view.get_sc().color().draw(sprite, pos.x, pos.y);
-  }
-
-  float get_z_pos () { return 100; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/particles/particle.hpp (from rev 341, trunk/src/particles/particle.hxx)


Property changes on: trunk/src/particles/particle.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/particle.hxx
===================================================================
--- trunk/src/particles/particle.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/particles/particle.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,55 +0,0 @@
-//  $Id: particle.hxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef PARTICLE_HXX
-#define PARTICLE_HXX
-
-#include <ClanLib/core.h>
-#include "../game_obj.hxx"
-
-class Particle : public GameObj
-{
-public:
-  FloatVector2d pos;
-  FloatVector2d velocity;
-  FloatVector2d acceleration;
-
-  // Lifetime of the particle in seconds
-  float life_time;
-
-public:
-  Particle () {}
-  virtual ~Particle () {}
-
-  virtual void update (float delta) {
-    life_time -= delta;
-    
-    pos += velocity * delta;
-    velocity += acceleration * delta;
-  }
-
-  virtual bool alive () { return life_time > 0; }
-  FloatVector2d get_pos () { return pos; }
-
-  bool removable () { return !alive (); }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/particles/particle_system.hpp (from rev 341, trunk/src/particles/particle_system.hxx)


Property changes on: trunk/src/particles/particle_system.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/particle_system.hxx
===================================================================
--- trunk/src/particles/particle_system.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/particles/particle_system.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,34 +0,0 @@
-//  $Id: particle_system.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef PARTICLESYSTEM_HXX
-#define PARTICLESYSTEM_HXX
-
-class ParticleSystem
-{
-private:
-  std::vector<Particle*> particles;
-public:
-  void update(float delta);
-  void add(Particle* particle);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/particles/rocket_smoke_particle.hpp (from rev 341, trunk/src/particles/rocket_smoke_particle.hxx)


Property changes on: trunk/src/particles/rocket_smoke_particle.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/rocket_smoke_particle.hxx
===================================================================
--- trunk/src/particles/rocket_smoke_particle.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/particles/rocket_smoke_particle.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,48 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_ROCKET_SMOKE_PARTICLE_HXX
-#define HEADER_ROCKET_SMOKE_PARTICLE_HXX
-
-#include "particle.hxx"
-
-/** */
-class RocketSmokeParticle : public Particle
-{
-private:
-  float max_life_time;
-  float size;
-  float angle;
-  CL_Sprite sprite;
-  
-public:
-  RocketSmokeParticle(const FloatVector2d& arg_pos);
-  ~RocketSmokeParticle();
-private:
-  RocketSmokeParticle (const RocketSmokeParticle&);
-  RocketSmokeParticle& operator= (const RocketSmokeParticle&);
-
-  void update (float delta);
-  void draw (View& view);
-  float get_z_pos ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/particles/sand_particle.hpp (from rev 341, trunk/src/particles/sand_particle.hxx)


Property changes on: trunk/src/particles/sand_particle.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/sand_particle.hxx
===================================================================
--- trunk/src/particles/sand_particle.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/particles/sand_particle.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,73 +0,0 @@
-//  $Id: sand_particle.hxx,v 1.1 2003/06/18 13:05:35 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef SANDPARTICLE_HXX
-#define SANDPARTICLE_HXX
-
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "particle.hxx"
-
-class SandParticle : public Particle
-{
-private:
-  CL_Sprite sprite;
-  float size;
-  float angle;
-  float max_life_time;
-public:
-  SandParticle(const FloatVector2d& arg_pos)
-  {
-    pos = arg_pos;
-    size = 1;
-    angle = rand () % 360;    
-    sprite = resources->get_sprite("feuerkraft/sandsmoke");
-    max_life_time = 10.0f;
-    life_time = max_life_time;
-    //velocity = FloatVector2d (80.0f, 0.0f);
-  }
-
-  virtual ~SandParticle ()
-  {
-  }
-
-  void update (float delta) 
-  {
-    pos += GameWorld::current()->get_wind() * delta * 0.3f;
-
-    Particle::update (delta);
-
-    life_time -= delta;
-  }
-
-  void draw (View& view) 
-  {    
-    sprite.set_alpha ((life_time/max_life_time) * .3);
-    sprite.set_scale (0.65f + ((1 - life_time/max_life_time)) * 4.0f,
-                      0.65f + ((1 - life_time/max_life_time)) * 4.0f);
-    sprite.set_angle(angle);
-    view.get_sc().color().draw(sprite, pos.x, pos.y);
-  }
-
-  float get_z_pos () { return 100; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/particles/smoke_emitter.hpp (from rev 341, trunk/src/particles/smoke_emitter.hxx)


Property changes on: trunk/src/particles/smoke_emitter.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/smoke_emitter.hxx
===================================================================
--- trunk/src/particles/smoke_emitter.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/particles/smoke_emitter.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,42 +0,0 @@
-//  $Id: smoke_emitter.hxx,v 1.1 2003/06/07 17:19:19 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SMOKE_EMITTER_HXX
-#define HEADER_SMOKE_EMITTER_HXX
-
-#include "../vector2d.hxx"
-
-/** */
-class SmokeEmitter
-{
-private:
-  FloatVector2d pos;
-  float last_particle;
-public:
-  SmokeEmitter(const FloatVector2d& arg_pos);
-  void set_pos(const FloatVector2d& arg_pos);
-  void update(float delta);
-private:
-  SmokeEmitter (const SmokeEmitter&);
-  SmokeEmitter& operator= (const SmokeEmitter&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/particles/smoke_particle.hpp (from rev 341, trunk/src/particles/smoke_particle.hxx)


Property changes on: trunk/src/particles/smoke_particle.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/smoke_particle.hxx
===================================================================
--- trunk/src/particles/smoke_particle.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/particles/smoke_particle.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,73 +0,0 @@
-//  $Id: smoke_particle.hxx,v 1.9 2003/06/07 16:16:08 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef SMOKEPARTICLE_HXX
-#define SMOKEPARTICLE_HXX
-
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "particle.hxx"
-
-class SmokeParticle : public Particle
-{
-private:
-  CL_Sprite sprite;
-  float size;
-  float angle;
-  float max_life_time;
-public:
-  SmokeParticle(const FloatVector2d& arg_pos)
-  {
-    pos = arg_pos;
-    size = 1;
-    angle = rand () % 360;    
-    sprite = resources->get_sprite("feuerkraft/smoke");
-    max_life_time = 10.0f;
-    life_time = max_life_time;
-    //velocity = FloatVector2d (80.0f, 0.0f);
-  }
-
-  virtual ~SmokeParticle ()
-  {
-  }
-
-  void update (float delta) 
-  {
-    pos += GameWorld::current()->get_wind() * delta;
-
-    Particle::update (delta);
-
-    life_time -= delta;
-  }
-
-  void draw (View& view) 
-  {    
-    sprite.set_alpha ((life_time/max_life_time) * .3);
-    sprite.set_scale (0.8f + ((1 - life_time/max_life_time)) * 4.0f,
-		       0.8f + ((1 - life_time/max_life_time)) * 4.0f);
-    sprite.set_angle(angle);
-    view.get_sc().color().draw(sprite, pos.x, pos.y);
-  }
-
-  float get_z_pos () { return 100; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/path_manager.hpp (from rev 341, trunk/src/path_manager.hxx)


Property changes on: trunk/src/path_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/path_manager.hxx
===================================================================
--- trunk/src/path_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/path_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,67 +0,0 @@
-//  $Id: path_manager.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PINGUS_PATH_MANAGER_HXX
-#define HEADER_PINGUS_PATH_MANAGER_HXX
-
-#include <string>
-#include <list>
-
-class PathManager
-{
-private:
-  std::list<std::string> path_list;
-  typedef std::list<std::string>::const_iterator PathIter;
-
-  bool path_found;
-  std::string base_path;
-public:
-  PathManager ();
-  ~PathManager ();
-
-  /** Search for a path which contains all the files given in
-      file_list */
-  bool find_path (const std::list<std::string>& file_list);
-
-  /** Search for a path which contains the file 'file' */
-  bool find_path (const std::string& file);
-
-  /** Set the path directly without using find_path/add_path
-      Must include trailing slash */
-  void set_path (const std::string& path);
-
-  /** Add a path to the search list */
-  void add_path (const std::string& path);
-
-  std::string get_base_path () { return base_path; }
-
-  /** Complete a releative path to the absolute path, the returned
-      path contains a trailing slash */
-  std::string complete (const std::string& relative_path);
-
-private:
-  PathManager (const PathManager&);
-  PathManager& operator= (const PathManager&);
-};
-
-extern PathManager path_manager;
-
-#endif
-
-/* EOF */

Copied: trunk/src/pathfinder.hpp (from rev 341, trunk/src/pathfinder.hxx)


Property changes on: trunk/src/pathfinder.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/pathfinder.hxx
===================================================================
--- trunk/src/pathfinder.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/pathfinder.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,59 +0,0 @@
-//  $Id: pathfinder.hxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PATHFINDER_HXX
-#define HEADER_PATHFINDER_HXX
-
-#include <math.h>
-
-// Datatypes shared by all the pathfinder 
-
-enum { PARENT_NONE = 0, //!< Parent isn't set
-       PARENT_GOAL,  //!< This is the goal node, it doesn't have a parent
-       PARENT_NORTH, //!< parent is in north direction
-       PARENT_SOUTH, //!< parent is in south direction
-       PARENT_EAST,  //!< parent is in east direction
-       PARENT_WEST   //!< parent is in west direction
-}; 
-
-/** A position on a Field */
-struct Pos 
-{
-  Pos(short arg_x, short arg_y) : x(arg_x), y(arg_y) {}
-  Pos() {}
- 
-  short x;
-  short y;
-};
-
-inline float PosDistance(const Pos& a, const Pos& b)
-{
-  return sqrt((b.x - a.x) * (b.x - a.x)
-              + (b.y - a.y) * (b.y - a.y));
-}
-
-inline float PosMDistance(const Pos& a, const Pos& b)
-{
-  return (b.x - a.x) * (b.x - a.x)
-    + (b.y - a.y) * (b.y - a.y);
-}
-
-#endif
-
-/* EOF */

Copied: trunk/src/player.hpp (from rev 341, trunk/src/player.hxx)


Property changes on: trunk/src/player.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/player.hxx
===================================================================
--- trunk/src/player.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/player.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,58 +0,0 @@
-//  $Id: player.hxx,v 1.6 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PLAYER_HXX
-#define HEADER_PLAYER_HXX
-
-class Unit;
-
-/** The player class keeps track of all the stuff that is owned by a
-    player (Controller, Unit, UnitView, etc) */
-class Player
-{
-private:
-  /** The soldier unit representing the player, after player death it
-      might change/respawn */
-  Unit* soldier;
-
-  /** The currently active units that gets input events (vehicle,
-      heli, soldier, etc.) */
-  Unit* unit;
-
-public:
-  Player(Unit* unit);
-
-  Unit* get_soldier();
-  
-  /** Set the current soldier of the player */
-  void set_soldier(Unit* new_soldier);
-
-  void  set_current_unit(Unit*);
-  Unit* get_current_unit();
-
-private:
-  Player (const Player&);
-  Player& operator= (const Player&);
-};
-
-typedef Player* PlayerPtr;
-
-#endif
-
-/* EOF */

Copied: trunk/src/player_view.hpp (from rev 341, trunk/src/player_view.hxx)


Property changes on: trunk/src/player_view.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/player_view.hxx
===================================================================
--- trunk/src/player_view.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/player_view.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,43 +0,0 @@
-//  $Id: player_view.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PLAYER_VIEW_HXX
-#define HEADER_PLAYER_VIEW_HXX
-
-#include "vehicle_view.hxx"
-
-class Player;
-
-/** */
-class PlayerViewUpdater : public VehicleViewUpdater
-{
-private:
-  Player* player;
-public:
-  PlayerViewUpdater(Player* arg_player);
-
-  void update(float delta, ViewState& state);
-private:
-  PlayerViewUpdater (const PlayerViewUpdater&);
-  PlayerViewUpdater& operator= (const PlayerViewUpdater&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/projectile.hpp (from rev 341, trunk/src/projectile.hxx)


Property changes on: trunk/src/projectile.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/projectile.hxx
===================================================================
--- trunk/src/projectile.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/projectile.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,63 +0,0 @@
-//  $Id: projectile.hxx,v 1.11 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef PROJECTILE_HH
-#define PROJECTILE_HH
-
-#include "vector2d.hxx"
-#include "game_obj.hxx"
-#include "resource_manager.hxx"
-
-class Projectile : public GameObj
-{
-private:
-  FloatVector2d pos;
-  CL_Sprite sur;
-  CL_Sprite sur_light;
-  FloatVector2d tmp_pos;
-  FloatVector2d velocity;
-  float lifetime;
-  
-  /** Pointer back to the parent objects which created this
-      projectile. Its used to avoid friendly fire (aka shooting
-      yourself in the food). */
-  GameObj* parent;
-
-public:
-  Projectile(GameObj* p, const FloatVector2d& arg_pos, const FloatVector2d& arg_velocity);
-  virtual ~Projectile();
-
-  virtual FloatVector2d get_pos () { return pos; }
-
-  GameObj* get_parent() const { return parent; }
-
-  void draw (View& view);
-  void update (float);
-  bool removable ();
-
-  void on_collision(GameObj* obj);
-  void on_collision_with_building(Building* building);
-
-  void detonate ();
-  bool is_colliding(FloatVector2d) { return false;}
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/property.hpp (from rev 341, trunk/src/property.hxx)


Property changes on: trunk/src/property.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/property.hxx
===================================================================
--- trunk/src/property.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/property.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,80 +0,0 @@
-//  $Id: property.hxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PROPERTY_HXX
-#define HEADER_PROPERTY_HXX
-
-#include <string>
-
-/** A Property is a generic objects which can hold data of most
-    primitive data types */
-class Property
-{
-public:
-  enum Type {
-    T_EMPTY, T_BOOL, T_INT, T_FLOAT, T_STRING
-  };
-
-protected:
-  union Data {
-    bool*        m_bool;
-    int*         m_int;
-    float*       m_float;
-    std::string* m_string;
-  };
- 
-  std::string name;
-  Type type;
-  Data data;
-
-public:
-  Property(const std::string& name);
-  Property(const std::string& name, bool*);
-  Property(const std::string& name, int*);
-  Property(const std::string& name, float*);
-  Property(const std::string& name, std::string*);
-  ~Property();
-
-  void set_name(const std::string& arg_name) { name = arg_name; }
-  std::string get_name() const { return name; }
-
-  Type get_type() const { return type; }
-  
-  void set_bool(bool);
-  void set_int(int);
-  void set_float(float);
-  void set_string(const std::string&);
-
-  bool  get_bool() const;
-  int   get_int()  const;
-  float get_float() const;
-  std::string get_string() const;
-
-  /** @return the value of the property as string. If it is not a
-      T_STRING, it is converted to a string on return */
-  std::string to_string() const;
-
-  friend std::ostream& operator<<(std::ostream& s, const Property& property);
-};
-
-std::ostream& operator<<(std::ostream& s, const Property& property);
-
-#endif
-
-/* EOF */

Copied: trunk/src/property_set.hpp (from rev 341, trunk/src/property_set.hxx)


Property changes on: trunk/src/property_set.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/property_set.hxx
===================================================================
--- trunk/src/property_set.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/property_set.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,67 +0,0 @@
-//  $Id: property_set.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_PROPERTY_SET_HXX
-#define HEADER_FEUERKRAFT_PROPERTY_SET_HXX
-
-#include <map>
-#include <string>
-
-class Property;
-
-/** */
-class PropertySet
-{
-private:
-  typedef std::map<std::string, Property*>  Properties;
-  Properties properties;
-public:
-  typedef Properties::iterator iterator;
-  typedef Properties::const_iterator const_iterator;
-
-  PropertySet();
-  ~PropertySet();
-  
-  void register_bool  (const std::string& name, bool* value_ptr);
-  void register_int   (const std::string& name, int* value_ptr);
-  void register_float (const std::string& name, float* value_ptr);
-  void register_string(const std::string& name, std::string* value_ptr);
-
-  void set_bool  (const std::string& name, bool value);
-  void set_int   (const std::string& name, int value);
-  void set_float (const std::string& name, float value);
-  void set_string(const std::string& name, const std::string& value);
-
-  Property* lookup(const std::string& name);
-
-  const_iterator begin() const { return properties.begin(); }
-  const_iterator end()   const { return properties.end(); }
-
-  iterator begin(){ return properties.begin(); }
-  iterator end()  { return properties.end(); }
-private:
-  Property& create_property(const std::string& name);
-
-  PropertySet (const PropertySet&);
-  PropertySet& operator= (const PropertySet&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/radar.hpp (from rev 341, trunk/src/radar.hxx)


Property changes on: trunk/src/radar.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/radar.hxx
===================================================================
--- trunk/src/radar.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/radar.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,63 +0,0 @@
-//  $Id: radar.hxx,v 1.12 2003/06/23 10:01:41 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright(C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or(at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef RADAR_HH
-#define RADAR_HH
-
-#include "vector2d.hxx"
-#include "game_world.hxx"
-#include "gui_obj.hxx"
-#include "resource_manager.hxx"
-
-class Building;
-class Player;
-class Vehicle;
-typedef Player* PlayerPtr;
-
-class Radar : public GuiObj
-{
-private:
-  PlayerPtr player;
-  
-  CL_Sprite background;
-
-  /** Position of the radar on the screen */
-  FloatVector2d pos;
-
-  float angle;
-
-public:
-  Radar(const FloatVector2d& arg_pos, PlayerPtr v);
-  ~Radar();
-
-  void draw(CL_GraphicContext& gc);
-  void update(float delta);
-
-  /** Draw a blip to the radar, where 'pos' is in world coordinates
-      and size is the size of the object(1: projectile, 2: vehicle,
-      3: large vehicle, 4: building) */
-  void draw_blip(const FloatVector2d& pos, int size, 
-		  float red = 1.0f, float green = 0.0f, float blue = 0.0f);
-};
-
-typedef Radar* RadarPtr;
-
-#endif
-
-/* EOF */

Copied: trunk/src/resource_manager.hpp (from rev 341, trunk/src/resource_manager.hxx)


Property changes on: trunk/src/resource_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/resource_manager.hxx
===================================================================
--- trunk/src/resource_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/resource_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,52 +0,0 @@
-//  $Id: resource_manager.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef RESOURCEMANAGER_HXX
-#define RESOURCEMANAGER_HXX
-
-#include <string>
-#include <ClanLib/Display/surface.h>
-#include <ClanLib/Display/sprite.h>
-#include <ClanLib/Display/font.h>
-
-class CL_Font;
-class CL_ResourceManager;
-
-/** lalala... ugly */
-class ResourceManager
-{
-private:
-  CL_ResourceManager* resource_manager;
-
-public:
-  ResourceManager ();
-  ~ResourceManager ();
-
-  /** Load a CL_Sprite */
-  CL_Surface get_surface(const std::string& location);
-  CL_Sprite  get_sprite(const std::string& location);
-  CL_Font    get_font(const std::string& location);
-};
-
-//extern CL_SpriteProviderStorage* storage;
-extern ResourceManager* resources;
-
-#endif
-
-/* EOF */

Copied: trunk/src/robot_tank.hpp (from rev 341, trunk/src/robot_tank.hxx)


Property changes on: trunk/src/robot_tank.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/robot_tank.hxx
===================================================================
--- trunk/src/robot_tank.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/robot_tank.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,58 +0,0 @@
-//  $Id: robot_tank.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_ROBOT_TANK_HXX
-#define HEADER_ROBOT_TANK_HXX
-
-#include "vector2d.hxx"
-#include "vehicles/vehicle.hxx"
-
-/** */
-class RobotTank : public Vehicle
-{
-private:
-  enum ThrottleState { T_ACCELERATE, T_BREAK, T_NEUTRAL, T_MAX };
-  enum SteeringState { S_LEFT, S_RIGHT, S_NEUTRAL, S_MAX };
-  ThrottleState throttle_state;
-  SteeringState steering_state;
-  float max_velocity;
-
-  CL_Sprite sprite;
-  
-  float ai_count;
-
-public:
-  RobotTank(float x, float y, float orientation, float velocity);
-
-  void update (float delta);
-  void update_ai (float delta);
-
-  void draw(View& view);
-  void draw_energie(View& view);
-  void draw_radar(Radar& radar);
-  void draw_levelmap(LevelMap& view);
-  bool is_colliding (FloatVector2d obj_pos) { return false; }
-private:
-  RobotTank (const RobotTank&);
-  RobotTank& operator= (const RobotTank&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/rocket.hpp (from rev 341, trunk/src/rocket.hxx)


Property changes on: trunk/src/rocket.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/rocket.hxx
===================================================================
--- trunk/src/rocket.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/rocket.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,56 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_ROCKET_HXX
-#define HEADER_ROCKET_HXX
-
-#include "vector2d.hxx"
-#include "game_obj.hxx"
-
-/** */
-class Rocket : public GameObj
-{
-private:
-  CL_Sprite sprite;
-  CL_Sprite sprite_light;
-  CL_Sprite sprite_highlight;
-  CL_Sprite smoke;
-  FloatVector2d pos;
-  float orientation;
-  float velocity;
-  float max_velocity;
-  float life_time;
-  float release_count;
-public:
-  Rocket(const FloatVector2d& pos, float orientation);
-  ~Rocket();
-
-  void draw(View& view);
-  void update(float delta);
-
-  void detonate();
-  void on_collision_with_building(Building* building);
-private:
-  Rocket (const Rocket&);
-  Rocket& operator= (const Rocket&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/satchel_charge.hpp (from rev 341, trunk/src/satchel_charge.hxx)


Property changes on: trunk/src/satchel_charge.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/satchel_charge.hxx
===================================================================
--- trunk/src/satchel_charge.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/satchel_charge.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,50 +0,0 @@
-//  $Id: satchel_charge.hxx,v 1.2 2003/06/20 20:54:23 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SATCHEL_CHARGE_HXX
-#define HEADER_SATCHEL_CHARGE_HXX
-
-#include <ClanLib/Display/sprite.h>
-#include "game_obj.hxx"
-
-class AList;
-
-/** A SatchelCharge is basically a remote controlled mine. FIXME:
-    FIXME: Merging SatchelCharge and Mine into an own class might be a
-    good idea */
-class SatchelCharge : public GameObj
-{
-private:
-  FloatVector2d pos;
-  CL_Sprite sprite;
-public:
-  SatchelCharge(const AList& lst);
-
-  void update (float);
-  void draw (View& view);
-    
-  void detonate();
-private:
-  SatchelCharge (const SatchelCharge&);
-  SatchelCharge& operator= (const SatchelCharge&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/scm_functor.hpp (from rev 341, trunk/src/scm_functor.hxx)


Property changes on: trunk/src/scm_functor.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scm_functor.hxx
===================================================================
--- trunk/src/scm_functor.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scm_functor.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,46 +0,0 @@
-//  $Id: scm_functor.hxx,v 1.5 2003/09/15 20:23:53 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SCM_FUNCTOR_HXX
-#define HEADER_SCM_FUNCTOR_HXX
-
-#include <libguile.h>
-
-/** */
-class SCMFunctor
-{
-private:
-  SCM func;
-public:
-  SCMFunctor(SCM func);
-  virtual ~SCMFunctor();
-
-  SCMFunctor(const SCMFunctor&);
-
-  SCMFunctor& operator= (const SCMFunctor&);
-
-  void operator()();
-  void operator()(SCM arg);
-  void operator()(SCM arg1, SCM arg2);
-  void operator()(SCM arg1, SCM arg2, SCM arg3);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/scm_sequence_hook.hpp (from rev 341, trunk/src/scm_sequence_hook.hxx)


Property changes on: trunk/src/scm_sequence_hook.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scm_sequence_hook.hxx
===================================================================
--- trunk/src/scm_sequence_hook.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scm_sequence_hook.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,44 +0,0 @@
-//  $Id: scm_sequence_hook.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SCM_SEQUENCE_HOOK_HXX
-#define HEADER_SCM_SEQUENCE_HOOK_HXX
-
-#include <libguile.h>
-#include "sequence_manager.hxx"
-
-/** */
-class SCMSequenceHook : public SequenceHook
-{
-private:
-  SCM func;
-public:
-  SCMSequenceHook(SCM func);
-  virtual ~SCMSequenceHook();
-
-  SCMSequenceHook(const SCMSequenceHook&);
-
-  SCMSequenceHook& operator= (const SCMSequenceHook&);
-
-  void call();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/screen.hpp (from rev 341, trunk/src/screen.hxx)


Property changes on: trunk/src/screen.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/screen.hxx
===================================================================
--- trunk/src/screen.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/screen.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,51 +0,0 @@
-//  $Id: screen.hxx,v 1.8 2003/06/06 09:49:00 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef SCREEN_HH
-#define SCREEN_HH
-
-#include <vector>
-#include "gui_obj.hxx"
-
-/** A screen is a collection of gui objects, it basically represents a
-    complete screen. */
-class Screen
-  : public GuiObj
-{
-private:
-  std::vector<GuiObj*> gui_objs;
-  typedef std::vector<GuiObj*>::iterator GuiObjIter;
-  
-public:
-  Screen ();
-  virtual ~Screen ();
-
-  virtual void draw (CL_GraphicContext& gc);
-  virtual void update (float delta);
- 
-  bool has(GuiObj* obj);
- 
-  /** FIXME: Who takes controll over the allocated object? Currently nobody... -> MEMLEAK*/
-  virtual void add (GuiObj* obj);
-  virtual void remove (GuiObj* obj);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/screenshot.hpp (from rev 341, trunk/src/screenshot.hxx)


Property changes on: trunk/src/screenshot.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/screenshot.hxx
===================================================================
--- trunk/src/screenshot.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/screenshot.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,41 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SCREENSHOT_HXX
-#define HEADER_SCREENSHOT_HXX
-
-#include <string>
-
-class CL_PixelBuffer;
-
-/** */
-class Screenshot
-{
-private:
-public:
-  static CL_PixelBuffer take_screen_shot();
-  static void write_screenshot_pnm(const std::string& filename);
-private:
-  Screenshot (const Screenshot&);
-  Screenshot& operator= (const Screenshot&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/ai_commands.hpp (from rev 341, trunk/src/scripting/ai_commands.hxx)


Property changes on: trunk/src/scripting/ai_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/ai_commands.hxx
===================================================================
--- trunk/src/scripting/ai_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/ai_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,38 +0,0 @@
-//  $Id: ai_commands.hxx,v 1.2 2003/06/20 20:54:23 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_AI_COMMANDS_HXX
-#define HEADER_AI_COMMANDS_HXX
-
-void ai_goto(int handle, float x, float y);
-void ai_stop(int handle);
-
-/** Check if an object has an AI attached to it 
-    @return true if object has AI, false otherwise */
-bool ai_has(int handle);
-
-/** Attach an AI object to an GameObject if it doesn't already have an
-    AI */
-void ai_attach(int handle);
-
-void ai_dettach(int handle);
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/ai_vehicle_commands.hpp (from rev 341, trunk/src/scripting/ai_vehicle_commands.hxx)


Property changes on: trunk/src/scripting/ai_vehicle_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/ai_vehicle_commands.hxx
===================================================================
--- trunk/src/scripting/ai_vehicle_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/ai_vehicle_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,67 +0,0 @@
-//  $Id: ai_vehicle_commands.hxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_AI_VEHICLE_COMMANDS_HXX
-#define HEADER_AI_VEHICLE_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-/** 
- * @brief Create a vehicle at the given coordinates
- * 
- * @param x  x coordinate in world-coordinates
- * @param y  y coordinate in world-coordinates
- * 
- * @return id of the vehicle
- */
-int  ai_vehicle_create(int x, int y);
-
-/** 
- * @brief Order an vehicle to wait before doing the next order
- * 
- * @param object_id  id of the object to which the command should go
- * @param seconds    let the vehicle wait \a seconds seconds before
- *                   continuing with the next order
- */
-void ai_vehicle_wait(int object_id, float seconds);
-
-/** 
- * @brief Order a vehicle to drive to the given world coordinates
- * 
- * @param object_id 
- * @param x 
- * @param y 
- */
-void ai_vehicle_drive_to(int object_id, int x, int y);
-
-/** 
- * @brief Remove all current orders that a vehicle has accumulated
- * 
- * @param object_id id of the vehicle that should get the order
- * 
- * The vehicle will halt immediately after the command has been given
- */
-void ai_vehicle_clear_orders(int object_id);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/building_commands.hpp (from rev 341, trunk/src/scripting/building_commands.hxx)


Property changes on: trunk/src/scripting/building_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/building_commands.hxx
===================================================================
--- trunk/src/scripting/building_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/building_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,52 +0,0 @@
-//  $Id: building_commands.hxx,v 1.7 2003/06/23 09:04:10 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_BUILDING_COMMONDS_HXX
-#define HEADER_BUILDING_COMMONDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-/** Create a building from type \a type at the tile position x, y
-    @return a handler to the building */
-int  building_create(int type, int x, int y);
-
-SCM  building_get_property(int handle, const char* name);
-void building_set_property(int handle, const char* name, SCM value);
-
-/** Remove the given building */
-void building_remove(int handle);
-
-/** @return the building at the given tile */
-int  building_get_tile(int x, int y);
-
-/** @return the building at the given coordinates */
-int  building_get(int x, int y);
-
-int  building_create_type(const char* name, SCM lst);
-
-/** Get a type_id by the types name 
-    @return type_id or 0 if no type given with that name */
-int  building_get_type_from_name(const char* name);
-
-/*@}*/
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/clanlib_commands.hpp (from rev 341, trunk/src/scripting/clanlib_commands.hxx)


Property changes on: trunk/src/scripting/clanlib_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/clanlib_commands.hxx
===================================================================
--- trunk/src/scripting/clanlib_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/clanlib_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,31 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_CLANLIB_COMMANDS_HXX
-#define HEADER_CLANLIB_COMMANDS_HXX
-
-#include <guile/gh.h>
-
-SCM  clanlib_get_post_keep_alive_func();
-void clanlib_set_post_keep_alive_func(SCM func);
-void clanlib_call_post_keep_alive_func();
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/comm_commands.hpp (from rev 341, trunk/src/scripting/comm_commands.hxx)


Property changes on: trunk/src/scripting/comm_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/comm_commands.hxx
===================================================================
--- trunk/src/scripting/comm_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/comm_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,34 +0,0 @@
-//  $Id: comm_commands.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_COMM_COMMANDS_HXX
-#define HEADER_COMM_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-void comm_send_message(int color, const char* str);
-
-void comm_unit_message(int unit, const char* str);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/debug_commands.hpp (from rev 341, trunk/src/scripting/debug_commands.hxx)


Property changes on: trunk/src/scripting/debug_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/debug_commands.hxx
===================================================================
--- trunk/src/scripting/debug_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/debug_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,31 +0,0 @@
-//  $Id: debug_commands.hxx,v 1.1 2003/06/18 13:04:21 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_DEBUG_COMMANDS_HXX
-#define HEADER_DEBUG_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-void debug_set_flag(const char* name, bool value);
-bool debug_get_flag(const char* name);
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/dialog_commands.hpp (from rev 341, trunk/src/scripting/dialog_commands.hxx)


Property changes on: trunk/src/scripting/dialog_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/dialog_commands.hxx
===================================================================
--- trunk/src/scripting/dialog_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/dialog_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,37 +0,0 @@
-//  $Id: dialog_commands.hxx,v 1.2 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_DIALOG_COMMANDS_HXX
-#define HEADER_DIALOG_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-/** Display a dialog window with \a text and call a callback once the
-    dialog window was closed */
-int  dialog_create(const char* text);
-
-/** Add an answer choice to the dialog */
-void dialog_add_choice(int dialog_id, const char* text, SCM callback);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/display_commands.hpp (from rev 341, trunk/src/scripting/display_commands.hxx)


Property changes on: trunk/src/scripting/display_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/display_commands.hxx
===================================================================
--- trunk/src/scripting/display_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/display_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,37 +0,0 @@
-//  $Id: display_commands.hxx,v 1.4 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_DISPLAY_COMMANDS_HXX
-#define HEADER_DISPLAY_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-bool display_levelmap_visible();
-void display_show_levelmap();
-void display_hide_levelmap();
-
-void display_show_help();
-void display_hide_help();
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/effect_commands.hpp (from rev 341, trunk/src/scripting/effect_commands.hxx)


Property changes on: trunk/src/scripting/effect_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/effect_commands.hxx
===================================================================
--- trunk/src/scripting/effect_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/effect_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,32 +0,0 @@
-//  $Id: effect_commands.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_EFFECT_COMMANDS_HXX
-#define HEADER_EFFECT_COMMANDS_HXX
-
-/** \addtogroup scripting */
-//@{
-
-void effect_add_explosion(int x, int y);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/game_commands.hpp (from rev 341, trunk/src/scripting/game_commands.hxx)


Property changes on: trunk/src/scripting/game_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/game_commands.hxx
===================================================================
--- trunk/src/scripting/game_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/game_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,43 +0,0 @@
-//  $Id: game_commands.hxx,v 1.2 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_GAME_COMMANDS_HXX
-#define HEADER_GAME_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-/** Pause the currently running game */
-void game_pause();
-
-/** Quit the currently running game */
-void game_quit();
-
-/** Load the game given by \a filename and replace the current one */
-void game_load(const char* filename);
-
-/** Dump the currently running game to filename (aka. creating a
-    savegame) */
-void game_save(const char* filename);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/gameobj_commands.hpp (from rev 341, trunk/src/scripting/gameobj_commands.hxx)


Property changes on: trunk/src/scripting/gameobj_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/gameobj_commands.hxx
===================================================================
--- trunk/src/scripting/gameobj_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/gameobj_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,55 +0,0 @@
-//  $Id: gameobj_commands.hxx,v 1.7 2003/06/22 21:51:21 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_GAMEOBJ_COMMANDS_HXX
-#define HEADER_GAMEOBJ_COMMANDS_HXX
-
-#include <guile/gh.h>
-
-/** @addtogroup scripting */
-//@{
-
-SCM  gameobj_get_property(int handle, const char* name);
-void gameobj_set_property(int handle, const char* name, SCM value);
-
-/** @return a list of available properties */
-SCM gameobj_properties(int handle);
-
-/** Create a game object with the parameters given as \a lst 
-    @return handle to the GameObj */
-int gameobj_create(int type_id, SCM lst);
-
-/** Remove the game object given by \a handle from the world */
-void gameobj_remove(int handle);
-
-/** @return a list of all gameobjects */
-SCM  gameobj_get_all();
-
-bool gameobj_is_helicopter(int handle);
-bool gameobj_is_vehicle(int handle);
-bool gameobj_is_unit(int handle);
-bool gameobj_is_soldier(int handle);
-
-void satchel_detonate(int handle);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/input_commands.hpp (from rev 341, trunk/src/scripting/input_commands.hxx)


Property changes on: trunk/src/scripting/input_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/input_commands.hxx
===================================================================
--- trunk/src/scripting/input_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/input_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,51 +0,0 @@
-//  $Id: input_commands.hxx,v 1.6 2003/06/20 20:54:23 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_COMMANDS_HXX
-#define HEADER_INPUT_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-/** @brief Register a callback on a key press event 
- *  @param key   a string representing the key, see keys.hxx
- *  @param func  a procedure taking zero arguments
- * 
- *  Currently this is a bit limited and buggy, mouse events and other
- *  input events might also be grabbed when the correct string is
- *  \a key string supplied.
- */
-void input_register_callback(const char* key, SCM func);
-
-/** @brief Return the current mouse x position on the screen */
-int  input_get_mouse_x();
-
-/** @brief Return the current mouse y position on the screen  */
-int  input_get_mouse_y();
-
-/** Return the current mouse x position on the world */
-float input_get_mouse_world_x();
-/** Return the current mouse y position on the world */
-float input_get_mouse_world_y();
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/menu_commands.hpp (from rev 341, trunk/src/scripting/menu_commands.hxx)


Property changes on: trunk/src/scripting/menu_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/menu_commands.hxx
===================================================================
--- trunk/src/scripting/menu_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/menu_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,54 +0,0 @@
-//  $Id: menu_commands.hxx,v 1.4 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_MENU_COMMANDS_HXX
-#define HEADER_MENU_COMMANDS_HXX
-
-#include <libguile.h>
-
-/** @addtogroup scripting */
-//@{
-
-/** Create an empty menu
-    @return menu_id of the newly created menu */
-int menu_create();
-
-/** Display the menu given by \a menu_id on the screen, hide any other
-    menu that might currently be visible */
-void menu_show(int menu_id);
-
-/** Hide the currently visible menu */
-void menu_hide();
-
-bool menu_visible();
-
-/** @return item_id */
-int  menu_add_item(int menu_id, const char* label, SCM func);
-
-/** Add a menu item that links to a submenu */
-int  menu_add_submenu_item(int menu_id, const char* label, int sub_menu_id);
-
-/** Remove an item from a menu */
-void menu_remove_item(int menu_id, int item_id);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/object_commands.hpp (from rev 341, trunk/src/scripting/object_commands.hxx)


Property changes on: trunk/src/scripting/object_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/object_commands.hxx
===================================================================
--- trunk/src/scripting/object_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/object_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,32 +0,0 @@
-//  $Id: object_commands.hxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_OBJECT_COMMANDS_HXX
-#define HEADER_OBJECT_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-void object_remove(int id);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/player_commands.hpp (from rev 341, trunk/src/scripting/player_commands.hxx)


Property changes on: trunk/src/scripting/player_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/player_commands.hxx
===================================================================
--- trunk/src/scripting/player_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/player_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,39 +0,0 @@
-//  $Id: player_commands.hxx,v 1.4 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PLAYER_COMMANDS_HXX
-#define HEADER_PLAYER_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-/** Sets the players control to the given vehicle */
-void player_set_current_unit(int handle);
-
-/** @return the vehicle that the player currently controlls */
-int  player_get_current_unit();
-
-int  player_get_soldier();
-void player_set_soldier(int handle);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/script_helper.hpp (from rev 341, trunk/src/scripting/script_helper.hxx)


Property changes on: trunk/src/scripting/script_helper.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/script_helper.hxx
===================================================================
--- trunk/src/scripting/script_helper.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/script_helper.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,83 +0,0 @@
-//  $Id: script_helper.hxx,v 1.3 2003/06/20 20:54:23 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SCRIPT_HELPER_HXX
-#define HEADER_SCRIPT_HELPER_HXX
-
-#include <iostream>
-#include "../ai_manager.hxx"
-#include "../game_obj_manager.hxx"
-
-namespace Scripting {
-
-/** @return the object that has id */
-template<class T>
-T* get_object(int object_id)
-{
-  T* obj = dynamic_cast<T*>(GameObjManager::current()->get_object_by_id(object_id));
-
-  if (obj)
-    {
-      return obj;
-    }
-  else
-    {
-      std::cout  << "Scripting: no object given by id: " << object_id << std::endl;
-      return 0;
-    } 
-}
-
-template<>
-GameObj* get_object(int object_id)
-{
-  return GameObjManager::current()->get_object_by_id(object_id);
-}
-
-/** @return the AI for the given object or 0 if no AI is attached to
-    the object */
-template<class T>
-T* get_ai(int object_id)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(object_id);
-
-  if (obj)
-    {
-      AI* ai = AIManager::instance()->get_ai(obj);
-      T* s_ai = 0;
-      
-      if (ai && (s_ai = dynamic_cast<T*>(ai)))
-        return s_ai;
-      else 
-        {
-          std::cout << "Scripting: object doesn't have AI" << std::endl;
-          return 0;
-        }
-    }
-  else
-    {
-      std::cout  << "Scripting: no object given by id: " << object_id << std::endl;
-      return 0;
-    } 
-}
-
-} // namespace Scripting
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/scripting.hpp (from rev 341, trunk/src/scripting/scripting.hxx)


Property changes on: trunk/src/scripting/scripting.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/scripting.hxx
===================================================================
--- trunk/src/scripting/scripting.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/scripting.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,33 +0,0 @@
-//  $Id: scripting.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_SCRIPTING_HXX
-#define HEADER_FEUERKRAFT_SCRIPTING_HXX
-
-/** @addtogroup scripting Scripting - Functions that are exported to Guile 
- * All functions which belong to this group are accessible via %Guile.
- * The names are the same, except that all '_' are converted to
- * '-'. 
- */
-//@{
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/sequence_commands.hpp (from rev 341, trunk/src/scripting/sequence_commands.hxx)


Property changes on: trunk/src/scripting/sequence_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/sequence_commands.hxx
===================================================================
--- trunk/src/scripting/sequence_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/sequence_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,36 +0,0 @@
-//  $Id: sequence_commands.hxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SEQUENCE_COMMANDS_HXX
-#define HEADER_SEQUENCE_COMMANDS_HXX
-
-#include <libguile.h>
-
-/** @addtogroup scripting */
-//@{
-
-int  sequence_start();
-void sequence_end(int id);
-void sequence_add_hook(SCM func);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/sound_commands.hpp (from rev 341, trunk/src/scripting/sound_commands.hxx)


Property changes on: trunk/src/scripting/sound_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/sound_commands.hxx
===================================================================
--- trunk/src/scripting/sound_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/sound_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,36 +0,0 @@
-//  $Id: sound_commands.hxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SOUND_COMMANDS_HXX
-#define HEADER_SOUND_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-void sound_play_music(const char* name);
-void sound_stop_music();
-
-int  sound_play_sound(const char* name);
-void sound_stop_sound(int handle);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/trigger_commands.hpp (from rev 341, trunk/src/scripting/trigger_commands.hxx)


Property changes on: trunk/src/scripting/trigger_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/trigger_commands.hxx
===================================================================
--- trunk/src/scripting/trigger_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/trigger_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,49 +0,0 @@
-//  $Id: trigger_commands.hxx,v 1.4 2003/06/09 20:27:31 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_TRIGGER_COMMANDS_HXX
-#define HEADER_TRIGGER_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-/** @brief Register a callback that is called after \a seconds
- *         seconds 
- *  @param seconds  number of seconds that have to pass until the
- *                  callback is called
- *  @param func     procedure taking zero arguments
-*/
-void trigger_add_timed(float seconds, SCM func);
-
-/** @brief Register a callback that is called once a vehicles enters
- *         the given tile.
- *  @param x    tile x coordinate
- *  @param y    tile y coordinate
- *  @param func Callback taking one argument, which is the id of the
- *              vehicle that triggered the trigger
- */
-void trigger_add_tile(int x, int y, SCM func);
-
-void trigger_add_region(int x1, int y1, int x2, int y2, SCM func);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/vehicle_commands.hpp (from rev 341, trunk/src/scripting/vehicle_commands.hxx)


Property changes on: trunk/src/scripting/vehicle_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/vehicle_commands.hxx
===================================================================
--- trunk/src/scripting/vehicle_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/vehicle_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,48 +0,0 @@
-//  $Id: vehicle_commands.hxx,v 1.7 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_VEHICLE_COMMANDS_HXX
-#define HEADER_FEUERKRAFT_VEHICLE_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-#if 0
-void vehicle_set_fuel(int fuel);
-int  vehicle_get_fuel();
-
-/** @returns weapon_id */
-int  vehicle_get_weapon(int number);
-
-/** Set the given vehicle to the given x,y coordinates */
-void vehicle_set_position(int vehicle_handle, int x, int y);
-#endif 
-
-/** Find the nearest vehicle to the given coordinates, if the nearest
-    vehicle is further away than \a max_distance, it is ignored and 0
-    is returned */
-int vehicle_find_nearest(float x, float y, float max_distance);
-
-void helicopter_start_or_land(int handle);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/scripting/weapon_commands.hpp (from rev 341, trunk/src/scripting/weapon_commands.hxx)


Property changes on: trunk/src/scripting/weapon_commands.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/weapon_commands.hxx
===================================================================
--- trunk/src/scripting/weapon_commands.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/scripting/weapon_commands.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,33 +0,0 @@
-//  $Id: weapon_commands.hxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_WEAPON_COMMANDS_HXX
-#define HEADER_WEAPON_COMMANDS_HXX
-
-/** @addtogroup scripting */
-//@{
-
-int  weapon_get_ammo(int weapon_id);
-void weapon_set_ammo(int weapon_id, int ammoniton);
-
-//@}
-
-#endif
-
-/* EOF */

Copied: trunk/src/sequence_manager.hpp (from rev 341, trunk/src/sequence_manager.hxx)


Property changes on: trunk/src/sequence_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sequence_manager.hxx
===================================================================
--- trunk/src/sequence_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/sequence_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,86 +0,0 @@
-//  $Id: sequence_manager.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SEQUENCE_MANAGER_HXX
-#define HEADER_SEQUENCE_MANAGER_HXX
-
-#include <vector>
-
-class SequenceHook
-{
-private:
-  int id;
-public:
-  SequenceHook();
-  
-  int  get_id() const { return id; }
-  void set_id(int arg_id) { id = arg_id; }
-
-  virtual void call() =0;
-};
-
-template<class Func>
-class GenericSequenceHook : public SequenceHook
-{
-private:
-  Func func;
-public:
-  GenericSequenceHook(Func arg_func) 
-    : func(arg_func)
-  {
-  }
-
-  virtual ~GenericSequenceHook() {}
-
-  void call() { func(); }
-};
-
-/** */
-class SequenceManager
-{
-private:
-  int current_sequence_id;
-  typedef std::vector<SequenceHook*> Hooks;
-  Hooks hooks;
-
-  static SequenceManager* current_; 
-public:
-  static SequenceManager* current() {
-    if (current_) 
-      return current_; 
-    else
-      return current_ = new SequenceManager();
-  }
-
-  SequenceManager();
-
-  /** Start a sequenze and return an id, stuff that gets added to the
-      sequence hook, will get called once the end_sequence is called
-      with the returned id */
-  int  start_sequence();
-
-  /** End a sequence and call the hook accociated with sequence_id */
-  void end_sequence(int sequence_id);
-
-  void add_hook(SequenceHook* hook);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/sexpr_world_reader.hpp (from rev 341, trunk/src/sexpr_world_reader.hxx)


Property changes on: trunk/src/sexpr_world_reader.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sexpr_world_reader.hxx
===================================================================
--- trunk/src/sexpr_world_reader.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/sexpr_world_reader.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,55 +0,0 @@
-//  $Id: sexpr_world_reader.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SEXPR_WORLD_READER_HXX
-#define HEADER_SEXPR_WORLD_READER_HXX
-
-#include <guile/gh.h>
-#include <string>
-
-class WorldBuilder;
-
-/** */
-class SexprWorldReader
-{
-private:
-  WorldBuilder* builder;
-  SCM data;
-  
-public:
-  SexprWorldReader(const std::string& arg_filename, WorldBuilder* arg_builder);
-  SexprWorldReader(SCM data, WorldBuilder* arg_builder);
-
-  void run();
-private:
-  void parse_file(SCM desc);
-
-  void parse_buildings(SCM data);
-  void parse_objects(SCM data);
-  void parse_brushes(SCM data);
-  void parse_groundmap(SCM data);
-  void parse_scripts(SCM data);
-
-  SexprWorldReader (const SexprWorldReader&);
-  SexprWorldReader& operator= (const SexprWorldReader&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/shockwave.hpp (from rev 341, trunk/src/shockwave.hxx)


Property changes on: trunk/src/shockwave.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/shockwave.hxx
===================================================================
--- trunk/src/shockwave.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/shockwave.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,44 +0,0 @@
-//  $Id: shockwave.hxx,v 1.8 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef SHOCKWAVE_HH
-#define SHOCKWAVE_HH
-
-#include "vector2d.hxx"
-#include "game_obj.hxx"
-#include "resource_manager.hxx"
-
-class Shockwave : public GameObj
-{
-private:
-  FloatVector2d pos;
-  CL_Sprite sprite;
-  float progress;
-public:
-  Shockwave (FloatVector2d arg_pos);
-  virtual ~Shockwave ();
-
-  void draw (View& view);
-  void update (float);
-  float  get_z_pos () { return -1; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/shortcut_pathfinder.hpp (from rev 341, trunk/src/shortcut_pathfinder.hxx)


Property changes on: trunk/src/shortcut_pathfinder.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/shortcut_pathfinder.hxx
===================================================================
--- trunk/src/shortcut_pathfinder.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/shortcut_pathfinder.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,364 +0,0 @@
-//  $Id: shortcut_pathfinder.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SHORTCUT_PATHFINDER_HXX
-#define HEADER_SHORTCUT_PATHFINDER_HXX
-
-#include <queue>
-#include <vector>
-#include "field.hxx"
-#include "pathfinder.hxx"
-
-struct Node {
-  unsigned int visited : 1;
-  /// If parent != PARENT_NONE then is in open
-  unsigned int parent  : 3; 
-  unsigned int cost    : 8;
-
-  unsigned int x       : 8;
-  unsigned int y       : 8;
-};
-
-/** Shortcut Pathfinder, it works like this:
-    1. add all neightbours from the start node to open_nodes
-    2. for next node in open_nodes
-    -  check if goal node
-    -  add all neightbours to open_nodes
-    3. goto 2
-
-    The open_nodes PQ is shorted after the distance from the node to
-    the goal node, thus it is heading streight to the target node, but
-    unlike AStar or Shortcut it doesn't take the cost correctly into
-    account and it is only able to find a short path, not neccessarily
-    the shortest.
-
-    Average Speed of this pathfinder is ~.2msec for a 256x256 grid.
-*/
-template<class FieldType,
-         class Walkable,
-         class Cost>
-class ShortcutPathfinder
-{
-public:
-  enum State { WORKING,
-               NO_PATH_AVAILABLE, 
-               PATH_FOUND, 
-               ALREADY_ON_GOAL };
-
-  struct PQComp
-  {
-    inline bool operator()(Node* a, Node* b) {
-      return a->cost > b->cost;
-    }
-  };
-private:
-  FieldType& field;
-  Walkable walkable;
-  Cost     cost;
-  Field<Node> node_field;
-  typedef std::priority_queue<Node*,
-                              std::vector<Node*>, 
-                              PQComp> OpenNodes;
-  OpenNodes open_nodes;
-
-  Pos start;
-  Pos end;
-  int rounds;
-  int max_rounds;
-  std::vector<Pos> path;
-
-  std::vector<Node*> dirty_nodes;
-
-  State state;
-public:
-  ShortcutPathfinder(FieldType* arg_field, const Walkable& arg_walkable, const Cost& arg_cost)
-    : field(*arg_field),
-      walkable(arg_walkable),
-      cost(arg_cost),
-      node_field(field.get_width(), field.get_height())
-  {
-    for(int y = 0; y < node_field.get_height(); ++y)
-      for(int x = 0; x < node_field.get_width(); ++x)
-        {
-          Node& node = node_field(x,y);
-          node.visited = 0;
-          node.parent  = PARENT_NONE;
-          node.cost    = 0;
-          node.x = x;
-          node.y = y;
-        }  
-  }
-
-  void init(Pos& arg_start, Pos& arg_end)
-  {
-    max_rounds = 300;
-    rounds = 0;
-    start = arg_start;
-    end   = arg_end;
-
-    path.clear();
-
-    if (start.x == end.x
-        && start.y == end.y)
-      {
-        state = ALREADY_ON_GOAL;
-        return;
-      }
-
-    // clean the node_field
-    for(typename std::vector<Node*>::iterator i = dirty_nodes.begin(); i != dirty_nodes.end(); ++i)
-      {
-        Node& node = *(*i);
-        node.visited = 0;
-        node.parent  = PARENT_NONE;
-        node.cost    = 0;
-      }
-    dirty_nodes.clear();
-
-    open_nodes = OpenNodes();
-
-    state = WORKING;
-
-    Node& node = node_field(start.x, start.y);
-  
-    node.visited = 1;
-    node.cost    = 0;
-    node.parent  = PARENT_GOAL;
-
-    make_neighbors_open(node);
-  }
-
-  inline bool finished() 
-  {
-    return state != WORKING;
-  }
-
-  bool is_path_node(int x, int y)
-  {
-    if (path.empty()) 
-      return false;
-    else
-      {
-        for (std::vector<Pos>::iterator i = path.begin(); i != path.end(); ++i)
-          {
-            if (i->x == x && i->y == y)
-              return true;
-          }
-        return false;
-      }
-  }
-
-  std::vector<Pos>& get_path() { return path; }
-
-  State get_state() { return state; }
-  
-  void
-  ShortcutPathfinder::construct_path()
-  {
-    //std::cout << "Construct path" << std::endl;
-    // We construct the path reverse, so we start at the end
-    Node current_node = node_field(end.x, end.y);
-
-    while(current_node.parent != PARENT_GOAL)
-      {
-        //std::cout << ">>> Node: " << current_node.x << " " << current_node.y << std::endl;
-
-        path.push_back(Pos(current_node.x, current_node.y));
-        current_node = resolve_parent(current_node);
-      }
-    //std::cout << "OPenNodes: " << open_nodes.size() << std::endl;
-  }
- 
-  void
-  ShortcutPathfinder::make_neighbors_open(Node& cnode)
-  {
-    // FIXME: We don't handle neightbors with smaller cost here
-    /*
-      if n' is in Open
-      and n'.cost < = newcost
-      continue
-    */
-    if (cnode.x != 0)
-      {
-        if (walkable(field(cnode.x - 1, cnode.y))) // node is walkable
-          {
-            Node& west = node_field(cnode.x - 1, cnode.y);
-
-            if (west.visited == 0 && west.parent == PARENT_NONE)
-              {
-                west.parent = PARENT_EAST;
-                //west.cost   = cnode.cost + 1;
-                west.cost = cost(west);
-                add_to_open_nodes(west);
-              }
-          }
-      }
-
-    if (int(cnode.x) != node_field.get_width()-1  && walkable(field(cnode.x+1, cnode.y)))
-      {
-        Node& east = node_field(cnode.x + 1, cnode.y);
-        if (east.visited == 0  && east.parent == PARENT_NONE) 
-          {
-            east.parent = PARENT_WEST;
-            //east.cost   = cnode.cost + 1;
-            east.cost     = cost(east);
-            add_to_open_nodes(east);
-          }
-      }
-
-    if (cnode.y != 0 && walkable(field(cnode.x, cnode.y - 1)))
-      {
-        Node& north = node_field(cnode.x, cnode.y - 1);
-        if (north.visited == 0  && north.parent == PARENT_NONE)
-          {
-            north.parent = PARENT_SOUTH;
-            //north.cost   = cnode.cost + 1;
-            north.cost     = cost(north);
-            add_to_open_nodes(north);
-          }
-      }
-  
-    if (int(cnode.y) != node_field.get_height() - 1  && walkable(field(cnode.x, cnode.y+1)))
-      {
-        Node& south = node_field(cnode.x, cnode.y + 1);
-        if (south.visited == 0  && south.parent == PARENT_NONE)
-          {
-            south.parent = PARENT_NORTH;
-            //south.cost   = cnode.cost + 1;
-            south.cost     = cost(south);
-            add_to_open_nodes(south);
-          }
-      }
-  }
-  
-  inline void process_one_open_node()
-  {
-    if (++rounds == max_rounds)
-      {
-        state = NO_PATH_AVAILABLE;
-        return;
-      }
-
-    if (open_nodes.empty())
-      {
-        state = NO_PATH_AVAILABLE;
-        return;
-      }
-    else
-      {
-        Node& cnode = *open_nodes.top();
-        open_nodes.pop();
-
-        assert(cnode.visited == 0);
-        cnode.visited = 1;
-      
-        // Goal reached
-        if (int(cnode.x) == end.x && int(cnode.y) == end.y)
-          {
-            construct_path();
-            state = PATH_FOUND;
-            return;
-          }
-     
-        make_neighbors_open(cnode);
-      }
-  }
-
-  inline void add_to_open_nodes(Node& cnode)
-  {
-    assert(cnode.parent != PARENT_NONE);
-    dirty_nodes.push_back(&cnode);
-    open_nodes.push(&cnode);
-  }
-
-  Node&
-  ShortcutPathfinder::resolve_parent(Node& node)
-  {
-    assert(node.parent != PARENT_NONE);
-
-    switch(node.parent)
-      {
-      case PARENT_NORTH:
-        return node_field(node.x, node.y - 1);
-      case PARENT_SOUTH:
-        return node_field(node.x, node.y + 1);
-      case PARENT_EAST:
-        return node_field(node.x + 1, node.y);
-      case PARENT_WEST:
-        return node_field(node.x - 1, node.y);
-      default:
-        assert(!"resolve path error");
-      }
-    assert(!"resolve path error2");
-    return *(Node*)0;
-  }
-
-  void display()
-  {
-    //std::cout << "c" << std::endl;
-    for(int y = 0; y < node_field.get_height(); ++y)
-      {
-        for(int x = 0; x < node_field.get_width(); ++x)
-          {
-            if (0)
-              {
-                if (node_field(x,y).parent == PARENT_SOUTH)
-                  std::cout << "s";
-                else if (node_field(x,y).parent == PARENT_WEST)
-                  std::cout << "w";
-                else if (node_field(x,y).parent == PARENT_EAST)
-                  std::cout << "e";
-                else if (node_field(x,y).parent == PARENT_NORTH)
-                  std::cout << "n";
-                else
-                  std::cout << " ";
-              }
-            if (!walkable(field(x,y)))
-              std::cout << "X";
-            else
-              {
-                //std::cout << " .,-nmlIFB"[cost(node_field(x,y))];
-              }
-
-            if (x == start.x && y == start.y)
-              std::cout << "S";
-            else if (x == end.x && y == end.y)
-              std::cout << "G";
-            else if (is_path_node(x,y))
-              std::cout << "#";
-            else if (node_field(x,y).visited)
-              std::cout << ",";
-            else
-              std::cout << " ";
-          }
-        std::cout << std::endl;
-      }
-    //std::cout << "OpenNodes: " << open_nodes.size() << std::endl;
-    //std::cout << "State: " << state << std::endl;
-  }
-
-};
-
-#endif
-
-// Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 shortcut_pathfinder.cxx  -o shortcut_pathfinder -lclanCore"
-// End:
-
-/* EOF */

Copied: trunk/src/soldier.hpp (from rev 341, trunk/src/soldier.hxx)


Property changes on: trunk/src/soldier.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/soldier.hxx
===================================================================
--- trunk/src/soldier.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/soldier.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,62 +0,0 @@
-//  $Id: soldier.hxx,v 1.16 2003/06/20 20:54:23 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef SOLDIER_HH
-#define SOLDIER_HH
-
-#include "soldier_ai.hxx"
-#include "unit.hxx"
-#include "resource_manager.hxx"
-
-class AList;
-class SoldierAI;
-
-class Soldier : public Unit
-{
-private:
-  SoldierAI* ai;
-  CL_Sprite sur;
-  CL_Sprite sur_light;
-
-  // Controll variables
-  float acceleration;
-  float steering;
-  
-public:
-  Soldier(const AList& lst);
-  ~Soldier();
-
-  void update_controlls(const Controller& events);
-
-  float get_angle () { return 0.0; }
-  void  draw (View& view);
-  void  update (float);
-
-  bool is_colliding(FloatVector2d);
-  
-  float get_physical_size () { return 1.0; }
-
-  void attach_ai();
-
-  void deattach_ai();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/soldier_ai.hpp (from rev 341, trunk/src/soldier_ai.hxx)


Property changes on: trunk/src/soldier_ai.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/soldier_ai.hxx
===================================================================
--- trunk/src/soldier_ai.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/soldier_ai.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,51 +0,0 @@
-//  $Id: soldier_ai.hxx,v 1.2 2003/06/18 14:38:28 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SOLDIER_AI_HXX
-#define HEADER_SOLDIER_AI_HXX
-
-#include "vector2d.hxx"
-#include "input/controller.hxx"
-#include "ai.hxx"
-
-class Soldier;
-
-/** */
-class SoldierAI : public AI
-{
-private:
-  Soldier* soldier;
-  Controller controller;
-
-  enum State { WAITING, GOTO_TARGET, RANDOM } state;
-
-  FloatVector2d target_pos;
-public:
-  SoldierAI(Soldier* arg_soldier);
-  GameObj* get_object();
-
-  void update(float delta);
-
-  void goto_to(const FloatVector2d& target_pos);
-  void stop();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/sound/sound.hpp (from rev 341, trunk/src/sound/sound.hxx)


Property changes on: trunk/src/sound/sound.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sound/sound.hxx
===================================================================
--- trunk/src/sound/sound.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/sound/sound.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,62 +0,0 @@
-//  $Id: sound.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PINGUS_SOUND_HXX
-#define HEADER_PINGUS_SOUND_HXX
-
-#include <string>
-#include "sounds.hxx"
-
-class PingusSound
-{
-protected:
-  /** FIXME: this should be SoundImpl, not PingusSound */
-  static PingusSound* sound;
-
-protected:
-  PingusSound () { }
-
-  virtual void real_play_sound(const std::string & name, float volume, float panning) =0;
-  virtual void real_play_music(const std::string & name, float volume) =0;
-  virtual void real_stop_music() =0;
-
-public:
-  static void init (PingusSound* s = 0);
-  static void deinit ();
-
-  /** Load a sound file and play it immediately.
-
-      @param name     Name of the sound, aka 'ohno'
-      @param volume   volume
-      @param panning  panning */
-  static void play_sound(const std::string & name, float volume = 1.0f, float panning = 0.0f);
-
-  static void play_music(const std::string & name, float volume = 1.0f);
-  static void stop_music();
-
-  static void play_sound(Sound::Name name, float volume = 1.0f, float panning = 0.0f);
-
-private:
-  PingusSound (const PingusSound&);
-  PingusSound& operator= (const PingusSound&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/sound/sound_dummy.hpp (from rev 341, trunk/src/sound/sound_dummy.hxx)


Property changes on: trunk/src/sound/sound_dummy.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sound/sound_dummy.hxx
===================================================================
--- trunk/src/sound/sound_dummy.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/sound/sound_dummy.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,44 +0,0 @@
-//  $Id: sound_dummy.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PINGUS_SOUND_DUMMY_HXX
-#define HEADER_PINGUS_SOUND_DUMMY_HXX
-
-#include "sound.hxx"
-
-namespace Sound {
-
-class PingusSoundDummy : public PingusSound
-{
-public:
-  PingusSoundDummy () { }
-
-  virtual void real_play_sound (const std::string & filename, float volume, float panning);
-  virtual void real_play_music (const std::string & filename, float volume);
-  virtual void real_stop_music();
-private:
-  PingusSoundDummy (const PingusSoundDummy&);
-  PingusSoundDummy& operator= (const PingusSoundDummy&);
-};
-
-} // namespace Sound
-
-#endif
-
-/* EOF */

Copied: trunk/src/sound/sound_real.hpp (from rev 341, trunk/src/sound/sound_real.hxx)


Property changes on: trunk/src/sound/sound_real.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sound/sound_real.hxx
===================================================================
--- trunk/src/sound/sound_real.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/sound/sound_real.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,76 +0,0 @@
-//  $Id: sound_real.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PINGUS_SOUND_REAL_HXX
-#define HEADER_PINGUS_SOUND_REAL_HXX
-
-#include <config.h>
-#include <vector>
-#include "sound.hxx"
-#include <ClanLib/Sound/soundbuffer_session.h>
-
-class CL_SoundBuffer;
-class CL_SoundBuffer_Session;
-class CL_SoundOutput;
-
-namespace Sound {
-
-/** A simple wrapper class around SDL_Mixer, it will init itself
-    automatically if a sound is played. */
-class PingusSoundReal : public PingusSound
-{
-private:
-  CL_SoundOutput* output;
-
-  /** The current music file */
-  CL_SoundBuffer * music_sample;
-
-  /** Music Controller Session */
-  CL_SoundBuffer_Session* music_session;
-
-public:
-  PingusSoundReal ();
-  virtual ~PingusSoundReal ();
-
-  /** Load a music file and play it immediately.
-
-      @param filename The complete filename
-      @param volume   The volume to play the music with  */
-  virtual void real_play_music(const std::string & filename, float volume);
-
-  virtual void real_stop_music();
-
-  /** Load a sound file and play it immediately
-
-      @param filename The complete filename
-      @param volume   The volume to play the sound at
-      @param panning  The panning to play the sound with */
-
-  virtual void real_play_sound(const std::string & filename, float volume, float panning);
-
-private:
-  PingusSoundReal (const PingusSoundReal&);
-  PingusSoundReal& operator= (const PingusSoundReal&);
-};
-
-} // namespace Sound
-
-#endif
-
-/* EOF */

Copied: trunk/src/sound/sound_res_mgr.hpp (from rev 341, trunk/src/sound/sound_res_mgr.hxx)


Property changes on: trunk/src/sound/sound_res_mgr.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sound/sound_res_mgr.hxx
===================================================================
--- trunk/src/sound/sound_res_mgr.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/sound/sound_res_mgr.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,46 +0,0 @@
-//  $Id: sound_res_mgr.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PINGUS_SOUND_RES_MGR_HXX
-#define HEADER_PINGUS_SOUND_RES_MGR_HXX
-
-#include <map>
-
-class CL_SoundBuffer;
-
-typedef CL_SoundBuffer* SoundHandle;
-
-/** */
-class SoundResMgr
-{
-private:
-  typedef std::map<std::string, CL_SoundBuffer*> SoundMap;
-  static SoundMap sound_map;
-
-public:
-  static SoundHandle load(const std::string& name);
-
-private:
-  SoundResMgr (const SoundResMgr&);
-  SoundResMgr& operator= (const SoundResMgr&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/sound/sounds.hpp (from rev 341, trunk/src/sound/sounds.hxx)


Property changes on: trunk/src/sound/sounds.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sound/sounds.hxx
===================================================================
--- trunk/src/sound/sounds.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/sound/sounds.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,36 +0,0 @@
-//  $Id: sounds.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_PINGUS_SOUNDS_HXX
-#define HEADER_PINGUS_SOUNDS_HXX
-
-namespace Sound
-{
-  enum Name {
-    DIGGER,
-    PLOP,
-    GOODIDEA,
-    OHNO,
-    TICK
-  };
-}
-
-#endif
-
-/* EOF */

Copied: trunk/src/start_screen.hpp (from rev 341, trunk/src/start_screen.hxx)


Property changes on: trunk/src/start_screen.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/start_screen.hxx
===================================================================
--- trunk/src/start_screen.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/start_screen.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,53 +0,0 @@
-//  $Id: start_screen.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef STARTSCREEN_HXX
-#define STARTSCREEN_HXX
-
-#include <ClanLib/display.h>
-
-/** FIXME: Mega ugly peace of code, should be replaced with something better */
-class StartScreen
-{
-private:
-  CL_DisplayWindow* display;
-  CL_Sprite logo;
-  CL_Sprite endlogo;
-  float display_time;
-public:
-  typedef enum { S_STARTLOGO, 
-		 S_FADETOGAME,
-		 S_GAME,
-		 S_ENDLOGO,
-		 S_FADETOBLACK,
-		 S_QUIT } LogoMode;
-  LogoMode logo_mode;
-  
-public:
-  StartScreen (CL_DisplayWindow* arg_display);
-  ~StartScreen ();
-  
-  void draw ();
-  void update (float delta);
-  bool done ();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/system.hpp (from rev 341, trunk/src/system.hxx)


Property changes on: trunk/src/system.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/system.hxx
===================================================================
--- trunk/src/system.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/system.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,122 +0,0 @@
-//  $Id: system.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 1999 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-//  02111-1307, USA. 
-
-#ifndef SYSTEM_HH
-#define SYSTEM_HH
-
-#include <string>
-#include <list>
-#include <map>
-
-/** A wrapper class around some system dependend functions (mostly
-    POSIX stuff) */
-class System
-{
-private:
-  static int verbose;
-  static std::string default_email;
-  static std::string default_username;
-  static std::string default_language;
-public:
-  struct Error {
-    std::string message;
-    
-    Error (const std::string& str)
-      : message (str) {}
-  };
-
-  ///
-  struct DirectoryEntry
-  {
-    ///
-    enum FileType { DIRECTORY, FILE } ///
- type;
-    ///
-    std::string name;
-
-    ///
-    DirectoryEntry(const std::string&);
-  };
-
-  ///
-  typedef std::list<DirectoryEntry> Directory;
-  
-  ///
-  static Directory opendir(const std::string& pathname, const std::string& pattern = "*");
-
-  /** Check if a file is avaiblable (no checking for permissens is currently performed)
-      @param filename The name of the file
-      @return True, if the file exist, false otherwise */
-  static bool exist(std::string filename);
-
-  /** Creates directory if it does not already exist.
-      @param dir The name of the directory */
-  static void create_dir(std::string dir);
-
-  /** Change into the directory named dir, on error throw an PingusError */
-  static void change_dir (std::string dir);
- 
-  /** Check if all needed directories are available, if not then create 
-      them. */
-  static void init_directories();
-
-  /** Strips directory from filenames
-      @param filename The complete filename */
-  static std::string basename(std::string filename);
-
-  /** Returns the directory where Pingus can store its user specific
-      state and config data (savegames, config files, demos, etc.) */
-  static std::string get_statdir();
-
-  /** Returns the directory where Pingus can store things that needs
-      to be cached, for example thumbnails */
-  static std::string get_cachedir();
-
-  /** Returns the directory were Pingus can store its system wide
-      variable game data (highscores, cache images, ...) */
-  static std::string get_vardir();
-
-  /** Asks different variables to check were the directory for
-      temporary files is located 
-      @return The location of the tmp directory */
-  static std::string get_tmpdir();
-
-  /** Returns the Username how the current user or an empty string */
-  static std::string get_username();
-
-  /** Returns the EMail of the user or an empty string */
-  static std::string get_email();
-
-  /** Get the currently country code, in a two letter ISO 639 syntax */
-  static std::string get_language();
-
-  /** Choose the correct translation out of the map, if there is none
-      present, fall back to the default language */
-  static std::string translate(std::map<std::string, std::string> strs);
-
-  /** Read a file and generate a checksum and return it. The checksum
-   generation is very primitiv and should probably be replaced by CRC
-   or md5. */
-  static std::string checksum (std::string filename);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/tree.hpp (from rev 341, trunk/src/tree.hxx)


Property changes on: trunk/src/tree.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/tree.hxx
===================================================================
--- trunk/src/tree.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/tree.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,52 +0,0 @@
-//  $Id: tree.hxx,v 1.12 2003/06/20 20:54:23 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef TREE_HH
-#define TREE_HH
-
-#include <string>
-#include "vector2d.hxx"
-#include <ClanLib/Display/sprite.h>
-
-#include "game_obj.hxx"
-
-class AList;
-
-// FIXME: Rename this to 'Brush'
-class Tree : public GameObj
-{
-private:
-  std::string sprite_name;
-  FloatVector2d pos;
-  float z_pos;
-  CL_Sprite sur;
-
-public:
-  Tree (const AList& lst);
-  ~Tree ();
-  
-  void properties_updated();
-
-  void  draw (View& view);
-  float get_z_pos () { return z_pos; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/trigger_manager.hpp (from rev 341, trunk/src/trigger_manager.hxx)


Property changes on: trunk/src/trigger_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/trigger_manager.hxx
===================================================================
--- trunk/src/trigger_manager.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/trigger_manager.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,131 +0,0 @@
-//  $Id: trigger_manager.hxx,v 1.3 2003/06/22 22:23:00 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_TRIGGER_MANAGER_HXX
-#define HEADER_TRIGGER_MANAGER_HXX
-
-#include <iostream>
-#include <vector>
-#include "unit.hxx"
-#include "game_world.hxx"
-#include "player.hxx"
-#include "game_obj_manager.hxx"
-
-extern Player* player;
-
-/** */
-class TriggerManager
-{
-private:
-  static TriggerManager* current_;
-public:
-  static TriggerManager* current() { return current_; }
-
-public:
-  struct Trigger {
-    bool removable;
-    
-    Trigger() : removable(false) {}
-    void remove() { removable = true; }
-    virtual void update(float delta) =0;
-  };
-
-  template<class Func>
-  struct FunctorTrigger : public Trigger {
-    Func func;
-
-    FunctorTrigger(Func arg_func) : func(arg_func) {}
-    virtual ~FunctorTrigger() {}
-
-    virtual void update(float delta) =0;
-  }; // struct Trigger
-
-  template<class Func>
-  struct TimedTrigger : public FunctorTrigger<Func> {
-    float seconds;
-
-    TimedTrigger(float arg_seconds, Func arg_func)
-      : FunctorTrigger<Func>(arg_func),
-        seconds(arg_seconds){}
-
-    virtual ~TimedTrigger() {}
-
-    void update(float delta) {
-      seconds -= delta;
-      if (seconds < 0)
-        {
-          this->func();
-          this->remove();
-        }
-    }
-  };// struct TimedTrigger
-
-  template<class Func>
-  struct TileTrigger : public FunctorTrigger<Func> {
-    int x;
-    int y;
-
-    TileTrigger(int arg_x, int arg_y, Func arg_func)
-      : FunctorTrigger<Func>(arg_func),
-        x(arg_x), y(arg_y)
-    {
-    }
-
-    virtual ~TileTrigger() {}
-
-    void update(float delta) 
-    {
-      Unit* unit = player->get_current_unit();
-      
-      if (unit)
-        {
-          if (int(unit->get_pos().x/40) == x && int(unit->get_pos().y/40) == y)
-            {
-              this->func(SCM_MAKINUM(unit->get_id()));
-              this->remove();
-            }
-        }
-    }
-  };// struct TileTrigger
-
-  typedef std::vector<Trigger*> Triggers;
-private:
-  Triggers triggers;
-public:
-  TriggerManager();
-
-  void update(float delta);
-
-  template<class Func>
-  void add_timed_trigger(float seconds, Func func) {
-    triggers.push_back(new TimedTrigger<Func>(seconds, func));
-  }
-
-  template<class Func>
-  void add_tile_trigger(int x, int y, Func func) {
-    triggers.push_back(new TileTrigger<Func>(x, y, func));
-  }
-private:
-  TriggerManager (const TriggerManager&);
-  TriggerManager& operator= (const TriggerManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/unit.hpp (from rev 341, trunk/src/unit.hxx)


Property changes on: trunk/src/unit.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/unit.hxx
===================================================================
--- trunk/src/unit.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/unit.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,71 +0,0 @@
-//  $Id: unit.hxx,v 1.7 2003/06/23 10:01:41 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_UNIT_HXX
-#define HEADER_FEUERKRAFT_UNIT_HXX
-
-#include "game_obj.hxx"
-#include "vector2d.hxx"
-
-class Controller;
-
-/** A unit is a vehicle, a solidier or a gun tower that the player can
-    controll */
-class Unit : public GameObj
-{
-protected:
-  /** Position of the unit in world-coordinates */
-  FloatVector2d pos;
-
-  /** Orientation of the unit */
-  float orientation;
-
-public:
-  Unit();
-  ~Unit();
-  
-  void draw_radar(Radar& radar);
-
-  /** Feed new input events into the unit, allowing it to move
-      accordingly */
-  virtual void update_controlls(const Controller& events) =0;
-  
-  /** Attach an AI to this object and let it act */
-  virtual void attach_ai() {}
-
-  /** Remove an AI from an object */
-  virtual void dettach_ai() {}
-
-  FloatVector2d get_pos() { return pos; }
-  float get_orientation() { return orientation; }
-
-  void set_position(const FloatVector2d& new_pos);
-  void set_orientation(float new_orientation);
-
-  float get_orientation() const { return orientation; }
-  FloatVector2d get_position() const { return pos; }
-
-private:
-  Unit (const Unit&);
-  Unit& operator= (const Unit&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/vector2d.hpp (from rev 341, trunk/src/vector2d.hxx)


Property changes on: trunk/src/vector2d.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vector2d.hxx
===================================================================
--- trunk/src/vector2d.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vector2d.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,85 +0,0 @@
-//  $Id: vector2d.hxx,v 1.6 2003/08/20 00:15:10 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_VECTOR2D_HXX
-#define HEADER_VECTOR2D_HXX
-
-#include <iosfwd>
-
-/** */
-struct IntVector2d
-{
-  int x;
-  int y;
-};
-
-class FloatVector2d
-{
-public:
-  float x;
-  float y;
-
-  FloatVector2d();
-  FloatVector2d(const FloatVector2d& vec) : x(vec.x), y(vec.y) {};
-  FloatVector2d(float arg_x, float arg_y);
-
-  /** Create a vector with the given polar coordinates */
-  static FloatVector2d make_polar(float length, float orientation);
-
-  /** 
-   * Set the orienentation of a vector to \a angle
-   * 
-   * @param angle in radian
-   */
-  void set_orientation(float angle);
-
-  /** 
-   * Rotate a vector by modifing it
-   * 
-   * @param angle in radian
-   */
-  FloatVector2d& rotate(float angle);
-
-  /** @return Length of the vector */
-  float get_length() const;
-
-  /** @return abs(x) + abs(y) */
-  inline float get_manhatten_length() const;
-
-  /** @return the current orienentation of the vector in radian */
-  float get_orientation() const;
-
-  FloatVector2d operator- () const;
-
-  FloatVector2d operator+ (const FloatVector2d& add) const;
-  FloatVector2d operator- (const FloatVector2d& sub) const;
-  FloatVector2d operator* (       float  mul) const;
-
-  FloatVector2d& operator+= (const FloatVector2d& add);
-  FloatVector2d& operator-= (const FloatVector2d& sub);
-  FloatVector2d& operator*= (      float   mul);
-
-  friend std::ostream& operator<< (std::ostream& os, const FloatVector2d& v);
-};
-
-std::ostream& operator<< (std::ostream& os, const FloatVector2d& v);
-
-#endif
-
-/* EOF */

Copied: trunk/src/vehicle_ai.hpp (from rev 341, trunk/src/vehicle_ai.hxx)


Property changes on: trunk/src/vehicle_ai.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicle_ai.hxx
===================================================================
--- trunk/src/vehicle_ai.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vehicle_ai.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,67 +0,0 @@
-//  $Id: vehicle_ai.hxx,v 1.2 2003/06/18 13:03:13 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_VEHICLE_AI_HXX
-#define HEADER_VEHICLE_AI_HXX
-
-#include "line_segments.hxx"
-#include "input/controller.hxx"
-#include "ai.hxx"
-#include "vehicles/vehicle.hxx"
-
-/** class for AI driven vehicles */
-class VehicleAI : public AI
-{
-protected:
-  Vehicle* vehicle;
-public:
-  VehicleAI(Vehicle* vehicle);
-  virtual ~VehicleAI() {};
-  GameObj* get_object() { return vehicle; }
-};
-
-/** class for robot like ai which controlls a vehicle with physic
-    simulation switched on */
-class VehicleRoboAI : public VehicleAI
-{
-private:
-  Controller controller;
-  float ai_count;
-public:
-  VehicleRoboAI(Vehicle*);
-  void update(float delta);
-};
-
-/** AI class that lets drive a vehicle streight on a simple path */
-class VehiclePathAI : public VehicleAI
-{
-private:
-  bool  driving;
-  float length;
-  LineSegments line_segments;
-public:
-  VehiclePathAI(Vehicle*);
-  
-  void drive_to(const FloatVector2d& pos);
-  void update(float delta);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/vehicle_status.hpp (from rev 341, trunk/src/vehicle_status.hxx)


Property changes on: trunk/src/vehicle_status.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicle_status.hxx
===================================================================
--- trunk/src/vehicle_status.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vehicle_status.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,41 +0,0 @@
-//  $Id: vehicle_status.hxx,v 1.7 2003/06/06 09:49:00 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef VEHICLESTATUS_HH
-#define VEHICLESTATUS_HH
-
-#include "gui_obj.hxx"
-
-class VehicleStatus : public GuiObj
-{
-private:
-  CL_Sprite ammo;
-  CL_Sprite fuel;
-
-public:
-  VehicleStatus ();
-  virtual ~VehicleStatus ();
-  void update (float delta);
-  void draw (CL_GraphicContext& gc);
-  void draw_rect (int x_pos, int y_pos, float fill);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/vehicle_view.hpp (from rev 341, trunk/src/vehicle_view.hxx)


Property changes on: trunk/src/vehicle_view.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicle_view.hxx
===================================================================
--- trunk/src/vehicle_view.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vehicle_view.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,45 +0,0 @@
-//  $Id: vehicle_view.hxx,v 1.10 2003/06/04 13:10:09 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_VEHICLEVIEWUPDATER_HH
-#define HEADER_FEUERKRAFT_VEHICLEVIEWUPDATER_HH
-
-#include "vehicles/vehicle.hxx"
-#include "view.hxx"
-
-// FIXME: Rename to UnitViewUpdater
-class VehicleViewUpdater : public ViewUpdater
-{
-private:
-  Unit* unit;
-  FloatVector2d pos;
-
-  float speed;
-  float zoom_follower;
-public:
-  VehicleViewUpdater (Unit* arg_unit);
-  virtual ~VehicleViewUpdater ();
-
-  virtual void update(float delta, ViewState& state);
-  void set_unit(Unit* arg_unit);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/vehicles/helicopter.hpp (from rev 341, trunk/src/vehicles/helicopter.hxx)


Property changes on: trunk/src/vehicles/helicopter.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/helicopter.hxx
===================================================================
--- trunk/src/vehicles/helicopter.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vehicles/helicopter.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,77 +0,0 @@
-//  $Id: helicopter.hxx,v 1.13 2003/06/22 17:22:47 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HELICOPTER_HH
-#define HELICOPTER_HH
-
-#include <ClanLib/Display/sprite.h>
-#include "../energie.hxx"
-#include "vehicle.hxx"
-#include "rotor.hxx"
-
-class VehicleAI;
-class AList;
-
-/** @ingroup units */
-class Helicopter : public Vehicle
-{
-private:
-  enum { FLYING, STARTING, LANDING, LANDED } state;
-  float height;
-
-  typedef std::vector<Rotor> Rotors;
-  Rotors rotors;
-
-  CL_Sprite heli;
-  CL_Sprite heli_shadow;
-  CL_Sprite helidestroyed;
-
-  float strafe;
-  int   reloading;
-  float secondary_reload;
-  Energie energie;
-  bool destroyed;
-  VehicleAI* ai;
-
-public:
-  Helicopter(const AList& lst);
-  ~Helicopter();
-
-  void draw (View& view);
-  void update (float);
-  float get_z_pos () { return destroyed ? 0 : 150; }
-
-  void land_or_start();
-
-  // Controllable impl
-  virtual float get_turn_speed () { return 1.0; }
-
-  virtual void drop_mine () {}
-
-  bool is_colliding (FloatVector2d);
-  void collide (Projectile*);
-  virtual float get_physical_size () { return 3.0; }
-
-  void attach_ai();
-  void dettach_ai();
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/vehicles/jeep.hpp (from rev 341, trunk/src/vehicles/jeep.hxx)


Property changes on: trunk/src/vehicles/jeep.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/jeep.hxx
===================================================================
--- trunk/src/vehicles/jeep.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vehicles/jeep.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,74 +0,0 @@
-//  $Id: jeep.hxx,v 1.10 2003/06/04 10:59:00 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef JEEP_HH
-#define JEEP_HH
-
-#include <ClanLib/Display/sprite.h>
-
-#include "../energie.hxx"
-#include "vehicle.hxx"
-
-class Projectile;
-
-/** @ingroup units */
-class Jeep : public Vehicle
-{
-private:
-  CL_Sprite jeep;
-
-  Energie energie;
-  float velocity;
-  float angle;
-
-public:
-  Jeep (FloatVector2d arg_pos);
-  virtual ~Jeep () {}
-  
-  void update (float delta);
-  void draw (View& view);
-
-  // Controllable
-  virtual float get_turn_speed () { return 0.0; }
-
-  virtual void turn_left (float delta);
-  virtual void turn_right (float delta); 
-
-  virtual void turn_left2 (float delta);
-  virtual void turn_right2 (float delta);
-
-  virtual void increase_velocity (float delta);
-  virtual void decrease_velocity (float delta);
-  virtual void start_fire ();
-  virtual void stop_fire ();
-
-  virtual void drop_mine ();
-
-  virtual bool is_colliding (FloatVector2d obj_pos);
-  virtual void collide (Projectile*);
-  virtual void collide (FloatVector2d force);
-
-  virtual float get_z_pos () { return 50; }
-  
-  virtual float get_physical_size () { return 2.0; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/vehicles/rotor.hpp (from rev 341, trunk/src/vehicles/rotor.hxx)


Property changes on: trunk/src/vehicles/rotor.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/rotor.hxx
===================================================================
--- trunk/src/vehicles/rotor.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vehicles/rotor.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,59 +0,0 @@
-//  $Id$
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2003 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_FEUERKRAFT_VEHICLES_ROTOR_HXX
-#define HEADER_FEUERKRAFT_VEHICLES_ROTOR_HXX
-
-#include <ClanLib/Display/sprite.h>
-#include "rotor_description.hxx"
-
-class View;
-
-/** */
-class Rotor
-{
-private:
-  RotorDescription::Direction direction;
-  FloatVector2d offset;
-  bool running;
-
-  float orientation;
-  float velocity;
-
-  float acceleration;
-  float max_velocity;
-
-  CL_Sprite slow;
-  CL_Sprite fast;
-public:
-  Rotor(const RotorDescription& desc);
-
-  void draw(View& view, const FloatVector2d& pos, float orientation);
-  void update(float delta);
-
-  void start();
-  void stop();
-
-  float get_velocity() { return velocity; }
-  bool  is_running() { return velocity >= max_velocity; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/vehicles/rotor_description.hpp (from rev 341, trunk/src/vehicles/rotor_description.hxx)


Property changes on: trunk/src/vehicles/rotor_description.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/rotor_description.hxx
===================================================================
--- trunk/src/vehicles/rotor_description.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vehicles/rotor_description.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,37 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_ROTOR_DESCRIPTION_HXX
-#define HEADER_ROTOR_DESCRIPTION_HXX
-
-
-class RotorDescription
-{
-public:
-  enum Direction { LEFT, RIGHT }; 
-
-  std::string   slow_sprite;
-  std::string   fast_sprite;
-  FloatVector2d offset;
-  RotorDescription::Direction direction;
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/vehicles/tank.hpp (from rev 341, trunk/src/vehicles/tank.hxx)


Property changes on: trunk/src/vehicles/tank.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/tank.hxx
===================================================================
--- trunk/src/vehicles/tank.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vehicles/tank.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,135 +0,0 @@
-//  $Id: tank.hxx,v 1.18 2003/06/22 17:22:47 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef TANK_HH
-#define TANK_HH
-
-#include <deque>
-#include <ClanLib/Display/sprite.h>
-#include "../vector2d.hxx"
-
-#include "../mine.hxx"
-#include "../energie.hxx"
-#include "vehicle.hxx"
-
-/** \defgroup units Units - Player Controllable GameObjs */
-
-class VehicleAI;
-class AList;
-class SmokeEmitter;
-class Projectile;
-class Turret;
-
-/** \brief A track vehicle with a turret
-    \ingroup units 
-
-    A Tank is a tack vehicle with a turret, parameters such as
-    velocity, ammount of ammunition and other things are
-    configurable...
-*/
-class Tank : public Vehicle
-{
-private:
-  /** Position of the tank, before the last update() */
-  FloatVector2d tmp_pos;
-
-  float speed;
-
-  /** The maximum turn speed of the turret */
-  float increment;
-
-  int frame;
-  bool burning;
-
-  /*CL_Surface sur;*/
-  CL_Sprite smod;
-  CL_Sprite sur_destroyed;
-
-  CL_Sprite sur;
-  CL_Sprite sur_light;
-  CL_Sprite sur_highlight;
-  CL_Sprite shadow;
-
-  Turret* turret;
-
-  std::deque<FloatVector2d> smodpos;
-  float tmp_angle;
-  int smod_step;
-  int mine_reload_time;
-  Energie energie;
-  bool destroyed;
-  float particle_release;
-  /** time since destruction */
-  int destroy_time;
-  
-  SmokeEmitter* smoke_emitter;
-  VehicleAI* ai;
-public:
-  friend class Turret;
-
-  Tank (const AList& lst);
-  Tank (const FloatVector2d &arg_pos,
-	int reloading_speed, std::string tank, std::string turret, std::string fire);
-  virtual ~Tank ();
-  
-  void draw (View& view);
-  void draw_energie (View& view);
-  void draw_levelmap (LevelMap& levelmap);
-
-  void update (float);
-
-  void explode ();
-
-  void set_angle (float);
-  Turret* get_turret () { return turret; }
-
-  float get_increment() { return increment; }
-
-  // Implementing Controllable
-  float get_acceleration () { return increment; }
-  float get_max_forward_velocity () { return 1.0; }
-  float get_max_backward_velocity () { return -1.0; }
-  float get_turn_speed () { return 1.0; }
-  
-  void drop_mine ();
-  
-  float get_z_pos () { return destroyed ? 0 : 50; }
-
-  bool is_colliding (FloatVector2d obj_pos);
-
-  void on_collision(GameObj* obj);
-  void on_collision_with_building(Building* building);
-
-  void collide (Projectile*);
-  void collide (Mine*);
-  virtual void collide (FloatVector2d force);
-
-  virtual float get_physical_size () { return 3.0; }
-
-  /** FIXME: This should be placed in a Player-Manager class or
-      something like that */
-  void respawn ();
-  void attach_ai();
-  void dettach_ai();
-
-};
-
-#endif // TANK_HH
-
-// EOF

Copied: trunk/src/vehicles/turret.hpp (from rev 341, trunk/src/vehicles/turret.hxx)


Property changes on: trunk/src/vehicles/turret.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/turret.hxx
===================================================================
--- trunk/src/vehicles/turret.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vehicles/turret.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,59 +0,0 @@
-//  $Id: tank.hxx,v 1.18 2003/06/22 17:22:47 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef TURRET_HH
-#define TURRET_HH
-
-class Tank;
-
-class Turret : public GameObj
-{
-private:
-  Tank* tank;
-
-  CL_Sprite fire_sur;
-  CL_Sprite sur;
-  CL_Sprite shadow;
-
-  // The angle of the turent relative to the tank in radians
-  float orientation;
-
-  bool fireing;
-  int  reloading;
-  int  reloading_speed;
-
-public:
-  Turret (Tank*, int reloading_speed, std::string, std::string);
-  ~Turret ();
-
-  void draw (View& view);
-  void update (float);
-
-  void increase_angle (float delta);
-
-  void start_fire ();
-  void stop_fire ();
-  
-  void set_absolute_orientation (float orientation);
-  void set_relative_orientation (float orientation);
-};
-
-#endif // TURRET_HH
-
-// EOF

Copied: trunk/src/vehicles/vehicle.hpp (from rev 341, trunk/src/vehicles/vehicle.hxx)


Property changes on: trunk/src/vehicles/vehicle.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/vehicle.hxx
===================================================================
--- trunk/src/vehicles/vehicle.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/vehicles/vehicle.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,73 +0,0 @@
-//  $Id: vehicle.hxx,v 1.13 2003/06/18 21:43:50 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef VEHICLE_HH
-#define VEHICLE_HH
-
-#include "../unit.hxx"
-
-class Controller;
-class Projectile;
-
-class Vehicle : public Unit
-{
-protected:
-  float velocity;
-
-  float ammo;
-  float fuel;
-
-  // Controll variables
-  float acceleration;
-  float steering;
-  float strafe_steering;
-  
-  bool firing;
-  bool secondary_firing;
-public:
-  Vehicle ();
-  virtual ~Vehicle () {}
-
-  virtual void update_controlls(const Controller&);
-
-  virtual float get_velocity() { return velocity; }
-
-  /** Sets the current turn of the vehicle, \a turn needs to be in
-      range of [-1.0, 1.0] */
-  void set_turn(float turn);
-
-  /** Sets the current acceleration, \a accel must be in range of
-      [-1.0, 1.0] (full break, full acceleration) */
-  void set_acceleration(float accel);
-
-  virtual float get_ammo();
-  virtual float get_fuel();
-
-  virtual void  refuel(float delta);
-  virtual void  reload_ammo(float delta);
-
-  virtual void collide (Projectile*) {}
-};
-
-typedef Vehicle* VehiclePtr;
-
-#endif
-
-/* EOF */
-

Copied: trunk/src/view.hpp (from rev 341, trunk/src/view.hxx)


Property changes on: trunk/src/view.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/view.hxx
===================================================================
--- trunk/src/view.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/view.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,105 +0,0 @@
-//  $Id: view.hxx,v 1.14 2003/10/20 21:30:09 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef VIEW_HH
-#define VIEW_HH
-
-#include "view_properties.hxx"
-#include "vector2d.hxx"
-#include "display/drawing_context.hxx"
-#include "display/scene_context.hxx"
-
-class CL_Sprite;
-class Color;
-class DrawingContext;
-
-/** ViewState represents the current configuration of a View, aka.
-    rotation, position, zoom, etc. It is passed to the plug-ins to be
-    changed. */
-struct ViewState
-{
-  float x_offset;
-  float y_offset;
-  float zoom;
-  float rotation;
-};
-
-class ViewUpdater
-{
-public:
-  virtual void update(float delta, ViewState& state) =0;
-};
-
-/** A View provides a 'View' onto the world.
-    
-A View is similar to a CL_GraphicContext, you can paint on it with
-specific operations. It works basically by holding a pointer to
-the world and passing a draw() call to the world in the event that
-the View needs a draw. A pointer to the View class is passed as
-argument to the Worlds draw call. 
-
-FIXME: We need plugable modules for the View so that the zoom,
-scale and rotation of the view will be automagically changed
-acording to a plugin, possible plugins would be VehicleView,
-BuildingView, FixedView, etc. How should clean translation between
-plugins be provided? Should that be handled at plugin site?
-*/
-class View 
-{
-protected:
-  int x1, y1;
-  int x2, y2;
-
-  ViewState state;
-  ViewUpdater* view_updater;
-  ViewProperty properties;
-  SceneContext* scene_context;
-  
-  static View* current_;
-public:
-  View (int x1, int y1, int x2, int y2, ViewUpdater* arg_updater = 0);
-  virtual ~View ();
-
-  static View* current() { return current_; }
-
-  float get_x_offset ();
-  float get_y_offset ();
-
-  int get_width ();
-  int get_height ();
-  
-  /** Set the ViewUpdater. \a arg_updater will get deleted once it is
-      no longer used */
-  void set_updater(ViewUpdater* arg_updater);
-  void update(float delta);
-
-  SceneContext& get_sc() { return *scene_context; } 
-
-  bool get_property (ViewProperty p);
-  void set_property (ViewProperty p);
-
-  FloatVector2d screen_to_world (const FloatVector2d&);
-  FloatVector2d world_to_screen (const FloatVector2d&);
-};
-
-typedef View* ViewPtr;
-
-#endif
-
-/* EOF */

Copied: trunk/src/view_plugin.hpp (from rev 341, trunk/src/view_plugin.hxx)


Property changes on: trunk/src/view_plugin.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/view_plugin.hxx
===================================================================
--- trunk/src/view_plugin.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/view_plugin.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,47 +0,0 @@
-//  $Id: view_plugin.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef VIEWPLUGIN_HXX
-#define VIEWPLUGIN_HXX
-
-/** A plugin for the View class. The View plugin provides information
-    on the position and rotation that the View class should take.
-    
-    Transition of on changes of get_pos() is done in the View class
-    itself (FIXME: should probally be placed in this class?!)
- */
-class ViewPlugin
-{
-private:
-
-public:
-  /** Return the rotation that the View should take */
-  virtual float get_rotation () =0;
-  
-  /** Return the position that the View should take */
-  virtual FloatVector2d get_pos () =0;
-
-  /** Return true if the View class should make a smooth translation
-      between changes of the View or should make hard changes. */
-  virtual bool smooth () { return true; }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/view_properties.hpp (from rev 341, trunk/src/view_properties.hxx)


Property changes on: trunk/src/view_properties.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/view_properties.hxx
===================================================================
--- trunk/src/view_properties.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/view_properties.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,31 +0,0 @@
-//  $Id: view_properties.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef VIEWPROPERTIES_HXX
-#define VIEWPROPERTIES_HXX
-
-#define VP_DRAW_SHADOW (1<<0)
-#define VP_DRAW_SMOKE  (1<<1)
-#define VP_DRAW_TRACK  (1<<2)
-
-typedef unsigned int ViewProperty;
-
-#endif
-
-/* EOF */

Copied: trunk/src/world_builder.hpp (from rev 341, trunk/src/world_builder.hxx)


Property changes on: trunk/src/world_builder.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/world_builder.hxx
===================================================================
--- trunk/src/world_builder.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/world_builder.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,46 +0,0 @@
-//  $Id: world_builder.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_WORLD_BUILDER_HXX
-#define HEADER_WORLD_BUILDER_HXX
-
-#include "alist.hxx"
-
-/** */
-class WorldBuilder
-{
-private:
-public:
-  WorldBuilder() {}
-  virtual ~WorldBuilder() {}
-
-  virtual void add_object(const std::string& type, const AList&) =0;
-  virtual void add_brush(const std::string& resname, const AList&) =0;
-  virtual void add_building(const std::string&, const AList&) =0;
-  virtual void add_groundmap(const std::string&, const AList&) =0;
-  virtual void add_script(const std::string& resname) =0;
-
-private:
-  WorldBuilder (const WorldBuilder&);
-  WorldBuilder& operator= (const WorldBuilder&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/src/z_pos_layers.hpp (from rev 341, trunk/src/z_pos_layers.hxx)


Property changes on: trunk/src/z_pos_layers.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/z_pos_layers.hxx
===================================================================
--- trunk/src/z_pos_layers.hxx	2009-01-27 11:06:02 UTC (rev 342)
+++ trunk/src/z_pos_layers.hxx	2009-01-27 11:12:17 UTC (rev 343)
@@ -1,33 +0,0 @@
-//  $Id: z_pos_layers.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef ZPOSLAYERS_HXX
-#define ZPOSLAYERS_HXX
-
-#define BACKGROUND_LAYER 0.0f
-#define GROUND_LAYER     1.0f
-#define MINE_LAYER       2.0f
-#define VEHICLE_LAYER    3.0f
-#define SHADOW_LAYER     4.0f
-#define PLANE_LAYER      5.0f
-#define BOMBER_LAYER     6.0f
-
-#endif
-
-/* EOF */



From grumbel at mail.berlios.de  Tue Jan 27 12:16:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 27 Jan 2009 12:16:16 +0100
Subject: [Feuerkraft-commit] r344 - in trunk/src: . buildings display editor
	generic groundmap input particles scripting sound vehicles
Message-ID: <200901271116.n0RBGGA5005254@sheep.berlios.de>

Author: grumbel
Date: 2009-01-27 12:16:10 +0100 (Tue, 27 Jan 2009)
New Revision: 344

Added:
   trunk/src/ai_manager.cpp
   trunk/src/ai_vehicle.cpp
   trunk/src/alist.cpp
   trunk/src/ambulance.cpp
   trunk/src/astar_pathfinder.cpp
   trunk/src/background.cpp
   trunk/src/bfirst_pathfinder.cpp
   trunk/src/buildings/ammotent.cpp
   trunk/src/buildings/building.cpp
   trunk/src/buildings/building_manager.cpp
   trunk/src/buildings/building_map.cpp
   trunk/src/buildings/building_map_data.cpp
   trunk/src/buildings/building_type_manager.cpp
   trunk/src/buildings/custom_building.cpp
   trunk/src/buildings/fuelstation.cpp
   trunk/src/buildings/headquarter.cpp
   trunk/src/buildings/tower.cpp
   trunk/src/buildings/tower_ai.cpp
   trunk/src/buildings/wall.cpp
   trunk/src/buildings/wall_door.cpp
   trunk/src/collision_manager.cpp
   trunk/src/color.cpp
   trunk/src/command_line_arguments.cpp
   trunk/src/communication_dialog.cpp
   trunk/src/controller_def.cpp
   trunk/src/dijkstra_pathfinder.cpp
   trunk/src/display/drawing_context.cpp
   trunk/src/display/scene_context.cpp
   trunk/src/display_manager.cpp
   trunk/src/draw_circle.cpp
   trunk/src/editor/editor.cpp
   trunk/src/energie.cpp
   trunk/src/explosion.cpp
   trunk/src/feuerkraft.cpp
   trunk/src/fonts.cpp
   trunk/src/game_delta.cpp
   trunk/src/game_mission.cpp
   trunk/src/game_obj.cpp
   trunk/src/game_obj_data_factory.cpp
   trunk/src/game_obj_factory.cpp
   trunk/src/game_obj_manager.cpp
   trunk/src/game_session.cpp
   trunk/src/game_session_manager.cpp
   trunk/src/game_world.cpp
   trunk/src/game_world_builder.cpp
   trunk/src/game_world_data.cpp
   trunk/src/generic/random.cpp
   trunk/src/geometry.cpp
   trunk/src/globals.cpp
   trunk/src/goal_manager.cpp
   trunk/src/groundmap/grid_map.cpp
   trunk/src/groundmap/grid_map_data.cpp
   trunk/src/groundmap/grid_tile.cpp
   trunk/src/groundmap/grid_tile_data.cpp
   trunk/src/groundmap/grid_tile_generator.cpp
   trunk/src/groundmap/ground_map_data.cpp
   trunk/src/groundmap/ground_map_data_factory.cpp
   trunk/src/groundmap/ground_type.cpp
   trunk/src/groundmap/multi_ground_map.cpp
   trunk/src/groundmap/multi_ground_map_data.cpp
   trunk/src/groundmap/sprite_tile.cpp
   trunk/src/groundmap/sprite_tile_data.cpp
   trunk/src/groundmap/tile_data_factory.cpp
   trunk/src/groundmap/tile_map.cpp
   trunk/src/groundmap/tile_map_data.cpp
   trunk/src/guile.cpp
   trunk/src/help.cpp
   trunk/src/input/axis_button.cpp
   trunk/src/input/axis_factory.cpp
   trunk/src/input/button_axis.cpp
   trunk/src/input/button_factory.cpp
   trunk/src/input/controller.cpp
   trunk/src/input/input_axis_input_device.cpp
   trunk/src/input/input_button_input_device.cpp
   trunk/src/input/input_manager.cpp
   trunk/src/input/input_manager_custom.cpp
   trunk/src/input/input_manager_impl.cpp
   trunk/src/input/input_manager_player.cpp
   trunk/src/input/input_recorder.cpp
   trunk/src/input/multi_button.cpp
   trunk/src/ipc.cpp
   trunk/src/keyboard_manager.cpp
   trunk/src/keys.cpp
   trunk/src/level_map.cpp
   trunk/src/line_segments.cpp
   trunk/src/marker.cpp
   trunk/src/math.cpp
   trunk/src/menu.cpp
   trunk/src/menu_handle_mgr.cpp
   trunk/src/menu_item.cpp
   trunk/src/message_buffer.cpp
   trunk/src/mine.cpp
   trunk/src/output_world_builder.cpp
   trunk/src/particles/fire_emitter.cpp
   trunk/src/particles/fire_particle.cpp
   trunk/src/particles/rocket_smoke_particle.cpp
   trunk/src/particles/smoke_emitter.cpp
   trunk/src/path_manager.cpp
   trunk/src/player.cpp
   trunk/src/player_view.cpp
   trunk/src/projectile.cpp
   trunk/src/property.cpp
   trunk/src/property_set.cpp
   trunk/src/radar.cpp
   trunk/src/resource_manager.cpp
   trunk/src/robot_tank.cpp
   trunk/src/rocket.cpp
   trunk/src/satchel_charge.cpp
   trunk/src/scm_functor.cpp
   trunk/src/scm_sequence_hook.cpp
   trunk/src/screen.cpp
   trunk/src/screenshot.cpp
   trunk/src/scripting/ai_commands.cpp
   trunk/src/scripting/ai_vehicle_commands.cpp
   trunk/src/scripting/building_commands.cpp
   trunk/src/scripting/clanlib_commands.cpp
   trunk/src/scripting/comm_commands.cpp
   trunk/src/scripting/debug_commands.cpp
   trunk/src/scripting/display_commands.cpp
   trunk/src/scripting/effect_commands.cpp
   trunk/src/scripting/game_commands.cpp
   trunk/src/scripting/gameobj_commands.cpp
   trunk/src/scripting/input_commands.cpp
   trunk/src/scripting/menu_commands.cpp
   trunk/src/scripting/object_commands.cpp
   trunk/src/scripting/player_commands.cpp
   trunk/src/scripting/script_helper.cpp
   trunk/src/scripting/sequence_commands.cpp
   trunk/src/scripting/sound_commands.cpp
   trunk/src/scripting/trigger_commands.cpp
   trunk/src/scripting/vehicle_commands.cpp
   trunk/src/sequence_manager.cpp
   trunk/src/sexpr_world_reader.cpp
   trunk/src/shockwave.cpp
   trunk/src/shortcut_pathfinder.cpp
   trunk/src/soldier.cpp
   trunk/src/soldier_ai.cpp
   trunk/src/sound/sound.cpp
   trunk/src/sound/sound_dummy.cpp
   trunk/src/sound/sound_real.cpp
   trunk/src/sound/sound_res_mgr.cpp
   trunk/src/start_screen.cpp
   trunk/src/system.cpp
   trunk/src/tree.cpp
   trunk/src/trigger_manager.cpp
   trunk/src/unit.cpp
   trunk/src/vector2d.cpp
   trunk/src/vehicle_ai.cpp
   trunk/src/vehicle_status.cpp
   trunk/src/vehicle_view.cpp
   trunk/src/vehicles/helicopter.cpp
   trunk/src/vehicles/jeep.cpp
   trunk/src/vehicles/rotor.cpp
   trunk/src/vehicles/tank.cpp
   trunk/src/vehicles/turret.cpp
   trunk/src/vehicles/vehicle.cpp
   trunk/src/view.cpp
Removed:
   trunk/src/ai_manager.cxx
   trunk/src/ai_vehicle.cxx
   trunk/src/alist.cxx
   trunk/src/ambulance.cxx
   trunk/src/astar_pathfinder.cxx
   trunk/src/background.cxx
   trunk/src/bfirst_pathfinder.cxx
   trunk/src/buildings/ammotent.cxx
   trunk/src/buildings/building.cxx
   trunk/src/buildings/building_manager.cxx
   trunk/src/buildings/building_map.cxx
   trunk/src/buildings/building_map_data.cxx
   trunk/src/buildings/building_type_manager.cxx
   trunk/src/buildings/custom_building.cxx
   trunk/src/buildings/fuelstation.cxx
   trunk/src/buildings/headquarter.cxx
   trunk/src/buildings/tower.cxx
   trunk/src/buildings/tower_ai.cxx
   trunk/src/buildings/wall.cxx
   trunk/src/buildings/wall_door.cxx
   trunk/src/collision_manager.cxx
   trunk/src/color.cxx
   trunk/src/command_line_arguments.cxx
   trunk/src/communication_dialog.cxx
   trunk/src/controller_def.cxx
   trunk/src/dijkstra_pathfinder.cxx
   trunk/src/display/drawing_context.cxx
   trunk/src/display/scene_context.cxx
   trunk/src/display_manager.cxx
   trunk/src/draw_circle.cxx
   trunk/src/editor/editor.cxx
   trunk/src/energie.cxx
   trunk/src/explosion.cxx
   trunk/src/feuerkraft.cxx
   trunk/src/fonts.cxx
   trunk/src/game_delta.cxx
   trunk/src/game_mission.cxx
   trunk/src/game_obj.cxx
   trunk/src/game_obj_data_factory.cxx
   trunk/src/game_obj_factory.cxx
   trunk/src/game_obj_manager.cxx
   trunk/src/game_session.cxx
   trunk/src/game_session_manager.cxx
   trunk/src/game_world.cxx
   trunk/src/game_world_builder.cxx
   trunk/src/game_world_data.cxx
   trunk/src/generic/random.cxx
   trunk/src/geometry.cxx
   trunk/src/globals.cxx
   trunk/src/goal_manager.cxx
   trunk/src/groundmap/grid_map.cxx
   trunk/src/groundmap/grid_map_data.cxx
   trunk/src/groundmap/grid_tile.cxx
   trunk/src/groundmap/grid_tile_data.cxx
   trunk/src/groundmap/grid_tile_generator.cxx
   trunk/src/groundmap/ground_map_data.cxx
   trunk/src/groundmap/ground_map_data_factory.cxx
   trunk/src/groundmap/ground_type.cxx
   trunk/src/groundmap/multi_ground_map.cxx
   trunk/src/groundmap/multi_ground_map_data.cxx
   trunk/src/groundmap/sprite_tile.cxx
   trunk/src/groundmap/sprite_tile_data.cxx
   trunk/src/groundmap/tile_data_factory.cxx
   trunk/src/groundmap/tile_map.cxx
   trunk/src/groundmap/tile_map_data.cxx
   trunk/src/guile.cxx
   trunk/src/help.cxx
   trunk/src/input/axis_button.cxx
   trunk/src/input/axis_factory.cxx
   trunk/src/input/button_axis.cxx
   trunk/src/input/button_factory.cxx
   trunk/src/input/controller.cxx
   trunk/src/input/input_axis_input_device.cxx
   trunk/src/input/input_button_input_device.cxx
   trunk/src/input/input_manager.cxx
   trunk/src/input/input_manager_custom.cxx
   trunk/src/input/input_manager_impl.cxx
   trunk/src/input/input_manager_player.cxx
   trunk/src/input/input_recorder.cxx
   trunk/src/input/multi_button.cxx
   trunk/src/ipc.cxx
   trunk/src/keyboard_manager.cxx
   trunk/src/keys.cxx
   trunk/src/level_map.cxx
   trunk/src/line_segments.cxx
   trunk/src/marker.cxx
   trunk/src/math.cxx
   trunk/src/menu.cxx
   trunk/src/menu_handle_mgr.cxx
   trunk/src/menu_item.cxx
   trunk/src/message_buffer.cxx
   trunk/src/mine.cxx
   trunk/src/output_world_builder.cxx
   trunk/src/particles/fire_emitter.cxx
   trunk/src/particles/fire_particle.cxx
   trunk/src/particles/rocket_smoke_particle.cxx
   trunk/src/particles/smoke_emitter.cxx
   trunk/src/path_manager.cxx
   trunk/src/player.cxx
   trunk/src/player_view.cxx
   trunk/src/projectile.cxx
   trunk/src/property.cxx
   trunk/src/property_set.cxx
   trunk/src/radar.cxx
   trunk/src/resource_manager.cxx
   trunk/src/robot_tank.cxx
   trunk/src/rocket.cxx
   trunk/src/satchel_charge.cxx
   trunk/src/scm_functor.cxx
   trunk/src/scm_sequence_hook.cxx
   trunk/src/screen.cxx
   trunk/src/screenshot.cxx
   trunk/src/scripting/ai_commands.cxx
   trunk/src/scripting/ai_vehicle_commands.cxx
   trunk/src/scripting/building_commands.cxx
   trunk/src/scripting/clanlib_commands.cxx
   trunk/src/scripting/comm_commands.cxx
   trunk/src/scripting/debug_commands.cxx
   trunk/src/scripting/display_commands.cxx
   trunk/src/scripting/effect_commands.cxx
   trunk/src/scripting/game_commands.cxx
   trunk/src/scripting/gameobj_commands.cxx
   trunk/src/scripting/input_commands.cxx
   trunk/src/scripting/menu_commands.cxx
   trunk/src/scripting/object_commands.cxx
   trunk/src/scripting/player_commands.cxx
   trunk/src/scripting/script_helper.cxx
   trunk/src/scripting/sequence_commands.cxx
   trunk/src/scripting/sound_commands.cxx
   trunk/src/scripting/trigger_commands.cxx
   trunk/src/scripting/vehicle_commands.cxx
   trunk/src/sequence_manager.cxx
   trunk/src/sexpr_world_reader.cxx
   trunk/src/shockwave.cxx
   trunk/src/shortcut_pathfinder.cxx
   trunk/src/soldier.cxx
   trunk/src/soldier_ai.cxx
   trunk/src/sound/sound.cxx
   trunk/src/sound/sound_dummy.cxx
   trunk/src/sound/sound_real.cxx
   trunk/src/sound/sound_res_mgr.cxx
   trunk/src/start_screen.cxx
   trunk/src/system.cxx
   trunk/src/tree.cxx
   trunk/src/trigger_manager.cxx
   trunk/src/unit.cxx
   trunk/src/vector2d.cxx
   trunk/src/vehicle_ai.cxx
   trunk/src/vehicle_status.cxx
   trunk/src/vehicle_view.cxx
   trunk/src/vehicles/helicopter.cxx
   trunk/src/vehicles/jeep.cxx
   trunk/src/vehicles/rotor.cxx
   trunk/src/vehicles/tank.cxx
   trunk/src/vehicles/turret.cxx
   trunk/src/vehicles/vehicle.cxx
   trunk/src/view.cxx
Modified:
   trunk/src/scripting/Makefile.am
Log:
Breaking point: started rename for *.?xx to *.?pp

Copied: trunk/src/ai_manager.cpp (from rev 341, trunk/src/ai_manager.cxx)


Property changes on: trunk/src/ai_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/ai_manager.cxx
===================================================================
--- trunk/src/ai_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/ai_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,67 +0,0 @@
-//  $Id: ai_manager.cxx,v 1.3 2003/06/20 20:54:23 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <algorithm>
-#include "ai.hxx"
-#include "ai_manager.hxx"
-
-AIManager* AIManager::instance_ = 0;
-
-AIManager*
-AIManager::instance()
-{
-  if (instance_)
-    return instance_;
-  else
-    return instance_ = new AIManager();
-}
-
-void
-AIManager::add(AI* ai)
-{
-  ais.push_back(ai);
-}
-
-void
-AIManager::remove(AI* ai)
-{
-  ais.erase(std::remove(ais.begin(), ais.end(), ai));
-}
-
-void
-AIManager::update(float delta)
-{
-  for (std::vector<AI*>::iterator i = ais.begin(); i != ais.end(); ++i)
-    {
-      (*i)->update(delta);
-    }
-}
-
-AI*
-AIManager::get_ai(GameObj* obj)
-{
-  for (std::vector<AI*>::iterator i = ais.begin(); i != ais.end(); ++i)
-    {
-      if ((*i)->get_object() == obj)
-        return *i;
-    }  
-  return 0;
-}
-
-/* EOF */

Copied: trunk/src/ai_vehicle.cpp (from rev 341, trunk/src/ai_vehicle.cxx)


Property changes on: trunk/src/ai_vehicle.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/ai_vehicle.cxx
===================================================================
--- trunk/src/ai_vehicle.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/ai_vehicle.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,273 +0,0 @@
-//  $Id: ai_vehicle.cxx,v 1.18 2003/06/08 15:31:27 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/display.h>
-#include <math.h>
-#include "resource_manager.hxx"
-#include "game_world.hxx"
-#include "particles/smoke_particle.hxx"
-#include "collision_manager.hxx"
-#include "ai_vehicle.hxx"
-#include "projectile.hxx"
-#include "property_set.hxx"
-#include "mine.hxx"
-#include "particles/smoke_emitter.hxx"
-#include "level_map.hxx"
-
-AIVehicle::AIVehicle(const FloatVector2d& arg_pos)
-  : destroyed(false),
-    energie(100),
-    length(0.0f),
-    line_segments(pos.x, pos.y, 0.0f)
-{
-  pos = arg_pos;
-  velocity = 100.0f;
-  orientation = 0.0f;
-
-  line_segments.set_pos(pos.x, pos.y, 0.0f);
-
-  sprite = resources->get_sprite("feuerkraft/trooper");
-  sprite.set_alignment(origin_center);
-
-  destroyed_sprite = resources->get_sprite("feuerkraft/trooper_destroyed");
-  destroyed_sprite.set_alignment(origin_center);
-
-  current_order.type = AI_VO_NONE;
-  
-  properties->register_bool ("destroyed",   &destroyed);
-
-  smoke_emitter = new SmokeEmitter(pos);
-}
-
-void
-AIVehicle::update(float delta)
-{
-#if 0
-  if (current_order.type == AI_VO_NONE)
-    {
-      if (!orders.empty())
-        {
-          current_order = orders.back();
-          orders.pop_back();
-        }
-    }
-
-  switch(current_order.type)
-    {
-    case AI_VO_DRIVETO:
-      {
-        float old_orientation = orientation;
-        
-        FloatVector2d target_pos(current_order.drive_to.pos.x,
-                             current_order.drive_to.pos.y);
-
-        orientation = atan2(target_pos.y - pos.y,
-                            target_pos.x - pos.x);
-
-        float distance = (pos - target_pos).norm();
-
-        pos.x -= velocity * delta * cos(orientation+PI);
-        pos.y -= velocity * delta * sin(orientation+PI);
-
-        if (distance < (pos - target_pos).norm())
-          {
-            orientation = old_orientation;
-            pos = target_pos;
-            next_order();
-          }
-        if (rand()% 15 == 1)
-          world->add (new SmokeParticle (pos));
-      } 
-      break;
-
-    case AI_VO_WAIT:
-      current_order.wait.seconds -= delta;
-      if (current_order.wait.seconds < 0)
-        next_order();
-      break;
-
-    default:
-      break;
-    }
-#else
-  if (destroyed)
-    {
-      smoke_emitter->set_pos(pos + (FloatVector2d(-10.0f, -10.0f).rotate(orientation)));
-      smoke_emitter->update(delta);
-      return; 
-    }
-
-  if (current_order.type != AI_VO_NONE)
-    {
-      length += 100.0f * delta;
-      pos = line_segments.get_pos(length);
-      orientation = line_segments.get_orientation(length);
-
-      if (line_segments.get_length() < length)
-        current_order.type = AI_VO_NONE;
-    }
-
-  if (energie <= 0)
-    {
-      GameWorld::current()->add(new Explosion(pos, Explosion::MEDIUM));
-      destroyed = true;
-      return;
-    }
-
-  CollisionManager::current()->add_rect(get_id(), pos.x, pos.y, 38, 85, orientation);
-#endif
-}
-
-void
-AIVehicle::draw (View& view)
-{
-  if (!destroyed)
-    {
-      sprite.set_angle(Math::rad2deg(orientation + PI));
-      view.get_sc().color().draw(sprite, pos.x, pos.y);
-    }
-  else
-    {
-      destroyed_sprite.set_angle(Math::rad2deg(orientation + PI));
-      view.get_sc().color().draw(destroyed_sprite, pos.x, pos.y);
-    }
-  //line_segments.draw(view);
-}
-
-void 
-AIVehicle::draw_levelmap (LevelMap& levelmap)
-{
-  CL_Display::fill_rect (CL_Rect(int(pos.x / 40), int(pos.y / 40),
-				 int(pos.x / 40) + 4, int(pos.y / 40) + 4),
-			 CL_Color(255, 0, 0, 255));
-}
-
-void
-AIVehicle::add_order(AIVehicleOrder order)
-{
-  orders.push_front(order);
-}
-
-void
-AIVehicle::wait(float seconds)
-{
-  AIVehicleOrder order;
-  
-  order.type = AI_VO_WAIT;
-
-  order.wait.sequence_id = SequenceManager::current()->start_sequence();
-  order.wait.seconds = seconds;
-  
-  add_order(order);
-}
-
-void
-AIVehicle::next_order()
-{
-  switch(current_order.type)
-    {
-    case AI_VO_DRIVETO:
-      SequenceManager::current()->end_sequence(current_order.drive_to.sequence_id);
-      break;
-    case AI_VO_WAIT:
-      SequenceManager::current()->end_sequence(current_order.wait.sequence_id);
-      break;
-    default:
-      break;
-    }
-
-  if (!orders.empty())
-    {
-      current_order = orders.back();
-      orders.pop_back();
-    }
-  else
-    {
-      current_order.type = AI_VO_NONE;
-    }
-}
-
-void
-AIVehicle::clear_orders()
-{
-#if 0
-  orders.clear();
-  current_order.type = AI_VO_NONE;
-#else
-  FloatVector2d pos = line_segments.get_pos(length);
-  float orientation = line_segments.get_orientation(length);
-
-  line_segments.clear();
-  line_segments.set_pos(pos.x, pos.y, orientation);
-  length = 0;
-
-  current_order.type = AI_VO_NONE;
-#endif
-}
-
-void
-AIVehicle::draw_energie (View& view)
-{
-  energie.draw (view, 
-		int(pos.x), int(pos.y - 40));
-}
-  
-void
-AIVehicle::drive_to(const FloatVector2d& n_pos)
-{
-#if 0
-  AIVehicleOrder order;
-
-  order.type = AI_VO_DRIVETO;
-
-  order.drive_to.sequence_id = SequenceManager::current()->start_sequence();
-  order.drive_to.pos.x = n_pos.x;
-  order.drive_to.pos.y = n_pos.y;
-  
-  add_order(order);
-#else
-  current_order.type = AI_VO_DRIVETO;
-  line_segments.add_controll_point(n_pos.x, n_pos.y, 50.0f);
-#endif
-}
-
-void
-AIVehicle::on_collision(GameObj* obj)
-{
-  Projectile* projectile = dynamic_cast<Projectile*>(obj);
-  if (projectile)
-    {
-      energie -= 5;
-    }
-  else
-    {
-      Mine* mine = dynamic_cast<Mine*>(obj);
-      if (mine)
-        {
-          energie -= 25;
-        }
-    }
-}
-
-void
-AIVehicle::on_collision_with_building(Building* building)
-{
-}
-
-/* EOF */

Copied: trunk/src/alist.cpp (from rev 341, trunk/src/alist.cxx)


Property changes on: trunk/src/alist.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/alist.cxx
===================================================================
--- trunk/src/alist.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/alist.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,359 +0,0 @@
-//  $Id: alist.cxx,v 1.13 2003/06/23 08:43:32 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "alist.hxx"
-
-AList::AList()
-{  
-}
-
-AList::AList(const AList& alist)
-{
-  content = alist.content;
-
-  for(Content::iterator i = content.begin(); i != content.end(); ++i)
-    {
-      if (i->second.type == AL_STRING)
-        i->second.v_string = new std::string(*(i->second.v_string));
-    }
-}
-
-AList&
-AList::operator=(const AList& alist)
-{
-  for(Content::iterator i = content.begin(); i != content.end(); ++i)
-    {
-      if (i->second.type == AL_STRING)
-        delete i->second.v_string;
-    }
-  content.clear();
-
-  content = alist.content;
-
-  for(Content::iterator i = content.begin(); i != content.end(); ++i)
-    {
-      if (i->second.type == AL_STRING)
-        i->second.v_string = new std::string(*(i->second.v_string));
-    }
-  return *this;
-}
-
-AList::~AList()
-{
-  for(Content::iterator i = content.begin(); i != content.end(); ++i)
-    {
-      if (i->second.type == AL_STRING)
-        delete i->second.v_string;
-    }
-}
-
-AList::Value&
-AList::ensure_free_cell(const std::string& name, Type type)
-{
-  Value& value = content[name];
-  if (value.type == AL_STRING)
-    delete value.v_string;
-  
-  if (value.type != type && value.type != AL_NONE)
-    {
-      std::cout << "AList: Warning: Overwriting cell: " << name << " with other type." << std::endl;
-    }
-  value.type = type;
-  
-  return value;
-}
-
-AList::AList&
-AList::set_int(const std::string& name, int value)
-{
-  Value& v = ensure_free_cell(name, AL_INT);
-  v.v_int = value;
-  return *this;
-}
-
-AList&
-AList::set_float(const std::string& name, float value)
-{
-  Value& v = ensure_free_cell(name, AL_FLOAT);
-  v.v_float = value;
-  return *this;
-}
-
-AList&
-AList::set_bool(const std::string& name, bool value)
-{
-  Value& v = ensure_free_cell(name, AL_BOOL);
-  v.v_bool = value;
-  return *this;
-}
-
-AList&
-AList::set_string(const std::string& name, const std::string& value)
-{
-  //std::cout << "AList: " << name << " '" << value << "'" << std::endl;
-  Value& v = ensure_free_cell(name, AL_STRING);
-  v.v_string = new std::string(value);
-  return *this;
-}
-
-AList&
-AList::set_int_vector2d(const std::string& name, IntVector2d& value)
-{
-  Value& v = ensure_free_cell(name, AL_INTVECTOR2D);
-  v.v_int_vector2d = value;
-  return *this;
-}
-
-AList&
-AList::set_value (const std::string& str, const Value& value)
-{
-  switch (value.type)
-    {      
-    case AL_INT:
-      return set_int(str, value.v_int);
-
-    case AL_FLOAT:
-      return set_float(str, value.v_float);
-
-    case AL_BOOL:
-      return set_bool(str, value.v_bool);
-
-    case AL_STRING:
-      return set_string(str, *value.v_string);
-
-    default:
-      return *this; 
-    }
-}
-
-/*
-  AList&
-  AList::set_float_vector2d(const std::string& name, FloatVector2d& value)
-  {
-  Value& v = ensure_free_cell(name, AL_FLOATVECTOR2D);
-  v.v_float_vector2d = value;  
-  return *this;
-  }
-*/
-const AList::Value*
-AList::get_value(const std::string& name, Type type) const
-{
-  Content::const_iterator i = content.find(name);
-
-  if (i == content.end())
-    {
-      return 0;
-    }
-  else
-    {
-      if (i->second.type == type)
-        return &(i->second);
-      else
-        return 0;
-    } 
-}
-
-bool
-AList::retrieve_int(const std::string& name, int& value) const
-{
-  const Value* v = get_value(name, AL_INT);
-
-  if (!v)
-    return false;
-  else
-    {
-      value = v->v_int;
-      return true;
-    }
-}
-
-bool
-AList::retrieve_float(const std::string& name, float& value) const
-{
-  const Value* v = get_value(name, AL_FLOAT);
-  if (!v)
-    {
-      const Value* int_v = get_value(name, AL_INT);
-      if (int_v)
-        {
-          value = int_v->v_int;
-          return true;
-        }
-      else
-        return false;
-    }
-  else
-    {
-      value = v->v_float;
-      return true;
-    }
-}
-
-bool
-AList::retrieve_bool(const std::string& name, bool& value) const
-{
-  const Value* v = get_value(name, AL_BOOL);
-  if (!v)
-    return false;
-  else
-    {
-      value = v->v_bool;
-      return true;
-    }
-}
-
-bool
-AList::retrieve_string(const std::string& name, std::string& value) const
-{
-  const Value* v = get_value(name, AL_STRING);
-  if (v == 0)
-    return false;
-  else
-    {
-      value = *(v->v_string);
-      return true;
-    }
-}
-
-bool
-AList::retrieve_int_vector2d (const std::string& name, IntVector2d& value) const
-{
-  const Value* v = get_value(name, AL_INTVECTOR2D);
-  if (!v)
-    return false;
-  else
-    {
-      value = v->v_int_vector2d;
-      return true;
-    }
-}
-
-bool
-AList::retrieve_float_vector2d (const std::string& name, FloatVector2d& value) const
-{
-  return false;
-  /*
-  const Value* v = get_value(name, AL_FLOATVECTOR2D);
-  if (!v)
-    return false;
-  else
-    {
-      value = v->v_float_vector2d;
-      return true;
-      }*/
-}
-
-int
-AList::get_int(const std::string& str, int def) const
-{
-  int res;
-  if (retrieve_int(str, res))
-    return res;
-  else
-    return def;
-}
-
-float
-AList::get_float(const std::string& str, float def) const
-{
-  float res;
-  if (retrieve_float(str, res))
-    return res;
-  else
-    return def;
-}
-
-bool
-AList::get_bool(const std::string& str, bool def) const
-{
-  bool res;
-  if (retrieve_bool(str, res))
-    return res;
-  else
-    return def;
-}
-
-std::string 
-AList::get_string(const std::string& str, const std::string& def) const
-{
-  std::string res;
-  if (retrieve_string(str, res))
-    return res;
-  else
-    return def;
-}
-
-void
-AList::merge(const AList& lst)
-{
-  for(Content::const_iterator i = lst.content.begin(); i != lst.content.end(); ++i)
-    {
-      set_value(i->first, i->second);
-    }
-}
-
-/*
-  bool
-  AList::get_float_vector2d (const std::string& name, FloatVector2d& value) const
-  {
-  const Value* v = get_value(name, AL_FLOATVECTOR2D);
-  if (!v)
-  return false;
-  else
-  {
-  value = v->v_float_vector2d;
-  return true;
-  }
-  }
-*/
-
-std::ostream& operator<< (std::ostream& os, const AList& lst)
-{
-  os << "[AList:]\n";
-  for(AList::const_iterator i = lst.begin(); i != lst.end(); ++i)
-    {
-      os << "  " << i->first << " -> " << i->second << std::endl;
-    }  
-  os << std::endl;
-  return os;
-}
-
-std::ostream& operator<< (std::ostream& os, const AList::Value& value)
-{
-  switch (value.type)
-    {      
-    case AList::AL_INT:
-      return os << value.v_int;
-
-    case AList::AL_FLOAT:
-      return os << value.v_float;
-
-    case AList::AL_BOOL:
-      return os << value.v_bool;
-
-    case AList::AL_STRING:
-      return os << *value.v_string;
-
-    default:
-      return os << "<#unknown>>";
-    }
-}
-
-/* EOF */

Copied: trunk/src/ambulance.cpp (from rev 341, trunk/src/ambulance.cxx)


Property changes on: trunk/src/ambulance.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/ambulance.cxx
===================================================================
--- trunk/src/ambulance.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/ambulance.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,37 +0,0 @@
-//  $Id: ambulance.cxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "view.hxx"
-#include "resource_manager.hxx"
-#include "ambulance.hxx"
-
-Ambulance::Ambulance()
-  : sur(resources->get_sprite("feuerkraft/ambulance"))
-{
-  
-}
-
-void
-Ambulance::draw (View& view)
-{
-  view.get_sc().color().draw(sur, 0, 0);
-}
-
-
-/* EOF */

Copied: trunk/src/astar_pathfinder.cpp (from rev 341, trunk/src/astar_pathfinder.cxx)


Property changes on: trunk/src/astar_pathfinder.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/astar_pathfinder.cxx
===================================================================
--- trunk/src/astar_pathfinder.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/astar_pathfinder.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,335 +0,0 @@
-//  $Id: astar_pathfinder.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/core.h>
-#include <iostream>
-#include <unistd.h>
-#include "astar_pathfinder.hxx"
-
-AStarPathfinder::AStarPathfinder(Field<int>* arg_field)
-  : field(*arg_field),
-    node_field(field.get_width(), field.get_height())
-{
-}
-
-void
-AStarPathfinder::init(Pos& arg_start, Pos& arg_end)
-{
-  start = arg_start;
-  end   = arg_end;
-
-  if (start.x == end.x
-      && start.y == end.y)
-    {
-      state = ALREADY_ON_GOAL;
-      return;
-    }
-
-  for(int y = 0; y < node_field.get_height(); ++y)
-    for(int x = 0; x < node_field.get_width(); ++x)
-      {
-        Node& node = node_field(x,y);
-        node.visited = 0;
-        node.x = x;
-        node.y = y;
-        node.parent = PARENT_NONE;
-      }
-
-  state = WORKING;
-
-  Node& node = node_field(start.x, start.y);
-  
-  node.visited = 1;
-  node.cost    = 0;
-  node.parent  = PARENT_GOAL;
-
-  make_neighbors_open(node);
-}
-
-bool
-AStarPathfinder::finished()
-{
-  return state != WORKING;
-}
-
-void
-AStarPathfinder::process_one_open_node()
-{
-  if (open_nodes.empty())
-    {
-      state = NO_PATH_AVAILABLE;
-      return;
-    }
-  else
-    {
-      Node& cnode = *open_nodes.top();
-      open_nodes.pop();
-
-      assert(cnode.visited == 0);
-
-      cnode.visited = 1;
-      
-      // Goal reached
-      if (int(cnode.x) == end.x && int(cnode.y) == end.y)
-        {
-          construct_path();
-          state = PATH_FOUND;
-          return;
-        }
-     
-      make_neighbors_open(cnode);
-    }
-}
-
-void
-AStarPathfinder::make_neighbors_open(Node& cnode)
-{
-  if (cnode.x > 0)
-    {
-      if (field(cnode.x - 1, cnode.y) == 0) // node is walkable
-        {
-          Node& west = node_field(cnode.x - 1, cnode.y);
-
-          if (west.visited == 0 && west.parent == PARENT_NONE)
-            {
-              west.parent = PARENT_EAST;
-              west.cost   = cnode.cost + 1;
-              add_to_open_nodes(west);
-            }
-        }
-    }
-
-  if (int(cnode.x) < node_field.get_width()-1  && field(cnode.x+1, cnode.y) == 0)
-    {
-      Node& east = node_field(cnode.x + 1, cnode.y);
-      if (east.visited == 0  && east.parent == PARENT_NONE) 
-        {
-          east.parent = PARENT_WEST;
-          east.cost   = cnode.cost + 1;
-          add_to_open_nodes(east);
-        }
-    }
-
-  if (cnode.y > 0 && field(cnode.x, cnode.y - 1) == 0)
-    {
-      Node& north = node_field(cnode.x, cnode.y - 1);
-      if (north.visited == 0  && north.parent == PARENT_NONE)
-        {
-          north.parent = PARENT_SOUTH;
-          north.cost   = cnode.cost + 1;
-          add_to_open_nodes(north);
-        }
-    }
-  
-  if (int(cnode.y) < node_field.get_height() - 1  && field(cnode.x, cnode.y+1) == 0)
-    {
-      Node& south = node_field(cnode.x, cnode.y + 1);
-      if (south.visited == 0  && south.parent == PARENT_NONE)
-        {
-          south.parent = PARENT_NORTH;
-          south.cost   = cnode.cost + 1;
-          add_to_open_nodes(south);
-        }
-    }
-}
-
-void
-AStarPathfinder::add_to_open_nodes(Node& cnode)
-{
-  assert(cnode.parent != PARENT_NONE);
-  open_nodes.push(&cnode);
-}
-
-void
-AStarPathfinder::display()
-{
-  //std::cout << "c" << std::endl;
-  for(int y = 0; y < node_field.get_height(); ++y)
-    {
-      for(int x = 0; x < node_field.get_width(); ++x)
-        {
-          if (0)
-            {
-          if (node_field(x,y).parent == PARENT_SOUTH)
-            std::cout << "s";
-          else if (node_field(x,y).parent == PARENT_WEST)
-            std::cout << "w";
-          else if (node_field(x,y).parent == PARENT_EAST)
-            std::cout << "e";
-          else if (node_field(x,y).parent == PARENT_NORTH)
-            std::cout << "n";
-          else
-            std::cout << " ";
-            }
-          if (is_path_node(x,y))
-            std::cout << "#";
-          else
-            std::cout << " ";
-
-          if (x == start.x && y == start.y)
-            std::cout << "S";
-          else if (x == end.x && y == end.y)
-            std::cout << "G";
-          else if (field(x,y) != 0)
-            std::cout << "O";
-          else if (node_field(x,y).visited)
-            std::cout << ".";
-          else
-            std::cout << " ";
-      }
-      std::cout << std::endl;
-    }
-  std::cout << "OpenNodes: " << open_nodes.size() << std::endl;
-  std::cout << "State: " << state << std::endl;
-}
-
-bool
-AStarPathfinder::is_path_node(int x, int y)
-{
-  if (path.empty()) 
-    return false;
-  else
-    {
-      for (std::vector<Pos>::iterator i = path.begin(); i != path.end(); ++i)
-        {
-          if (i->x == x && i->y == y)
-            return true;
-        }
-      return false;
-    }
-}
-
-AStarPathfinder::Node&
-AStarPathfinder::resolve_parent(Node& node)
-{
-  if (node.parent == PARENT_NONE)
-    {
-      display();
-      assert(false);
-    }
-
-  switch(node.parent)
-    {
-    case PARENT_NORTH:
-      return node_field(node.x, node.y - 1);
-    case PARENT_SOUTH:
-      return node_field(node.x, node.y + 1);
-    case PARENT_EAST:
-      return node_field(node.x + 1, node.y);
-    case PARENT_WEST:
-      return node_field(node.x - 1, node.y);
-    default:
-      assert(!"resolve path error");
-    }
-  assert(!"resolve path error2");
-  return *(Node*)0;
-}
-
-void
-AStarPathfinder::construct_path()
-{
-  //std::cout << "Construct path" << std::endl;
-  // We construct the path reverse, so we start at the end
-  Node& current_node = node_field(end.x, end.y);
-
-  while(current_node.parent != PARENT_GOAL)
-    {
-      //std::cout << ">>> Node: " << current_node.x << " " << current_node.y << std::endl;
-
-      path.push_back(Pos(current_node.x, current_node.y));
-      current_node = resolve_parent(current_node);
-    }
-}
-
-#ifdef TESTME
-int main()
-{
-  CL_SetupCore::init();
-
-  srand(time(NULL));
-  Field<int> field(80, 50);
-
-  unsigned int start_time = CL_System::get_time();
-  unsigned int end_time;
-  //for(int count = 0; count < 100; ++count)
-  //{
-  for(int y = 0; y < field.get_height(); ++y)
-    for(int x = 0; x < field.get_width(); ++x)
-      {
-        field(x,y) = (rand()%20) > 5 ? 0 : 1;
-      }
-
-  AStarPathfinder pathfinder(&field);
-  Pos start;
-  Pos end;
-  start.x = rand()%field.get_width();
-  start.y = rand()%field.get_height();
-
-  end.x = rand()%field.get_width();
-  end.y = rand()%field.get_height();
-
-  pathfinder.init(start, end);
-  //pathfinder.display();
-
-  //int i = 0;
-  //std::cout << "Start: " << start.x << " " << start.y << std::endl;
-  //std::cout << "End:   " << end.x << " " << end.y << std::endl;
-
-  while(!pathfinder.finished())
-    {
-      for(int i = 0; i < 10 && !pathfinder.finished(); ++i)
-        pathfinder.process_one_open_node();
-
-      std::cout << "c" << std::endl;
-      pathfinder.display();
-      getchar();
-    }
-  end_time = CL_System::get_time();
-
-  pathfinder.display();
-      
-  if (pathfinder.get_state() != AStarPathfinder::PATH_FOUND)
-    {
-      std::cout << "No Path could be found" << std::endl;
-    }
-  else
-    {
-      std::cout << "Found path" << std::endl;
-      std::vector<Pos>& path = pathfinder.get_path();
-      for (std::vector<Pos>::iterator i = path.begin(); i != path.end(); ++i)
-        {
-          std::cout << "[" << i->x << ", " << i->y << "] ";
-        }       
-      std::cout << std::endl;
-    }
-
-  //      getchar();
-  //std::cout << "round: " << ++i << std::endl;
-  //}
-  std::cout << "Msec: " << end_time - start_time << std::endl;
-
-  CL_SetupCore::deinit();
-}
-#endif
-
-// Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 astar_pathfinder.cxx  -o astar_pathfinder -lclanCore"
-// End:
-
-/* EOF */

Copied: trunk/src/background.cpp (from rev 341, trunk/src/background.cxx)


Property changes on: trunk/src/background.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/background.cxx
===================================================================
--- trunk/src/background.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/background.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,43 +0,0 @@
-//  $Id: background.cxx,v 1.14 2003/10/20 21:30:09 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/display.h>
-#include "view.hxx"
-#include "background.hxx"
-
-Background::Background (const CL_Sprite& arg_sprite,
-                        float arg_z_pos)
-  : sprite(arg_sprite),
-    z_pos(arg_z_pos)
-{
-  sprite.set_alignment(origin_top_left);
-}
-
-void
-Background::draw (View& view)
-{
-  //sprite.draw();
-  // FIXME: We should take the view size and surface size into account
-  for (int y = -1; y <= 2; ++y)
-    for (int x = -1; x <= 2; ++x)
-      sprite.draw(x * sprite.get_width()  + (int(view.get_x_offset()) % sprite.get_width()),
-                  y * sprite.get_height() + (int(view.get_y_offset()) % sprite.get_height()));
-}
-
-/* EOF */

Copied: trunk/src/bfirst_pathfinder.cpp (from rev 341, trunk/src/bfirst_pathfinder.cxx)


Property changes on: trunk/src/bfirst_pathfinder.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/bfirst_pathfinder.cxx
===================================================================
--- trunk/src/bfirst_pathfinder.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/bfirst_pathfinder.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,331 +0,0 @@
-//  $Id: bfirst_pathfinder.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/core.h>
-#include <iostream>
-#include <unistd.h>
-#include "bfirst_pathfinder.hxx"
-
-BFirstPathfinder::BFirstPathfinder(Field<int>* arg_field)
-  : field(*arg_field),
-    node_field(field.get_width(), field.get_height())
-{
-}
-
-void
-BFirstPathfinder::init(Pos& arg_start, Pos& arg_end)
-{
-  start = arg_start;
-  end   = arg_end;
-
-  if (start.x == end.x
-      && start.y == end.y)
-    {
-      state = ALREADY_ON_GOAL;
-      return;
-    }
-
-  for(int y = 0; y < node_field.get_height(); ++y)
-    for(int x = 0; x < node_field.get_width(); ++x)
-      {
-        Node& node = node_field(x,y);
-        node.visited = 0;
-        node.x = x;
-        node.y = y;
-        node.parent = PARENT_NONE;
-      }
-
-  state = WORKING;
-
-  Node& node = node_field(start.x, start.y);
-  
-  node.visited = 1;
-  node.cost    = 0;
-  node.parent  = PARENT_GOAL;
-
-  make_neighbors_open(node);
-}
-
-bool
-BFirstPathfinder::finished()
-{
-  return state != WORKING;
-}
-
-void
-BFirstPathfinder::process_one_open_node()
-{
-  if (open_nodes.empty())
-    {
-      state = NO_PATH_AVAILABLE;
-      return;
-    }
-  else
-    {
-      Node& cnode = *open_nodes.front();
-      open_nodes.pop_front();
-
-      assert(cnode.visited == 0);
-
-      cnode.visited = 1;
-      cnode.cost    = 1;
- 
-      // Goal reached
-      if (int(cnode.x) == end.x && int(cnode.y) == end.y)
-        {
-          construct_path();
-          state = PATH_FOUND;
-          return;
-        }
-     
-      make_neighbors_open(cnode);
-    }
-}
-
-void
-BFirstPathfinder::make_neighbors_open(Node& cnode)
-{
-  if (cnode.x > 0)
-    {
-      if (field(cnode.x - 1, cnode.y) == 0) // node is walkable
-        {
-          Node& west = node_field(cnode.x - 1, cnode.y);
-
-          if (west.visited == 0 && west.parent == PARENT_NONE)
-            {
-              west.parent = PARENT_EAST;
-              add_to_open_nodes(west);
-            }
-        }
-    }
-
-  if (int(cnode.x) < node_field.get_width()-1  && field(cnode.x+1, cnode.y) == 0)
-    {
-      Node& east = node_field(cnode.x + 1, cnode.y);
-      if (east.visited == 0  && east.parent == PARENT_NONE) 
-        {
-          east.parent = PARENT_WEST;
-          add_to_open_nodes(east);
-        }
-    }
-
-  if (cnode.y > 0 && field(cnode.x, cnode.y - 1) == 0)
-    {
-      Node& north = node_field(cnode.x, cnode.y - 1);
-      if (north.visited == 0  && north.parent == PARENT_NONE)
-        {
-          north.parent = PARENT_SOUTH;
-          add_to_open_nodes(north);
-        }
-    }
-  
-  if (int(cnode.y) < node_field.get_height() - 1  && field(cnode.x, cnode.y+1) == 0)
-    {
-      Node& south = node_field(cnode.x, cnode.y + 1);
-      if (south.visited == 0  && south.parent == PARENT_NONE)
-        {
-          south.parent = PARENT_NORTH;
-          add_to_open_nodes(south);
-        }
-    }
-}
-
-void
-BFirstPathfinder::add_to_open_nodes(Node& cnode)
-{
-  assert(cnode.parent != PARENT_NONE);
-  open_nodes.push_back(&cnode);
-}
-
-void
-BFirstPathfinder::display()
-{
-  //std::cout << "c" << std::endl;
-  for(int y = 0; y < node_field.get_height(); ++y)
-    {
-      for(int x = 0; x < node_field.get_width(); ++x)
-        {
-          if (0)
-            {
-          if (node_field(x,y).parent == PARENT_SOUTH)
-            std::cout << "s";
-          else if (node_field(x,y).parent == PARENT_WEST)
-            std::cout << "w";
-          else if (node_field(x,y).parent == PARENT_EAST)
-            std::cout << "e";
-          else if (node_field(x,y).parent == PARENT_NORTH)
-            std::cout << "n";
-          else
-            std::cout << " ";
-            }
-          if (is_path_node(x,y))
-            std::cout << "#";
-          else
-            std::cout << " ";
-
-          if (x == start.x && y == start.y)
-            std::cout << "S";
-          else if (x == end.x && y == end.y)
-            std::cout << "G";
-          else if (field(x,y) != 0)
-            std::cout << "O";
-          else if (node_field(x,y).visited)
-            std::cout << ".";
-          else
-            std::cout << " ";
-      }
-      std::cout << std::endl;
-    }
-  std::cout << "OpenNodes: " << open_nodes.size() << std::endl;
-  std::cout << "State: " << state << std::endl;
-}
-
-bool
-BFirstPathfinder::is_path_node(int x, int y)
-{
-  if (path.empty()) 
-    return false;
-  else
-    {
-      for (std::vector<Pos>::iterator i = path.begin(); i != path.end(); ++i)
-        {
-          if (i->x == x && i->y == y)
-            return true;
-        }
-      return false;
-    }
-}
-
-BFirstPathfinder::Node&
-BFirstPathfinder::resolve_parent(Node& node)
-{
-  if (node.parent == PARENT_NONE)
-    {
-      display();
-      assert(false);
-    }
-
-  switch(node.parent)
-    {
-    case PARENT_NORTH:
-      return node_field(node.x, node.y - 1);
-    case PARENT_SOUTH:
-      return node_field(node.x, node.y + 1);
-    case PARENT_EAST:
-      return node_field(node.x + 1, node.y);
-    case PARENT_WEST:
-      return node_field(node.x - 1, node.y);
-    default:
-      assert(!"resolve path error");
-    }
-  assert(!"resolve path error2");
-  return *(Node*)0;
-}
-
-void
-BFirstPathfinder::construct_path()
-{
-  //std::cout << "Construct path" << std::endl;
-  // We construct the path reverse, so we start at the end
-  Node& current_node = node_field(end.x, end.y);
-
-  while(current_node.parent != PARENT_GOAL)
-    {
-      //std::cout << ">>> Node: " << current_node.x << " " << current_node.y << std::endl;
-
-      path.push_back(Pos(current_node.x, current_node.y));
-      current_node = resolve_parent(current_node);
-    }
-}
-
-#ifdef TESTME
-int main()
-{
-  CL_SetupCore::init();
-
-  srand(time(NULL));
-  Field<int> field(80, 50);
-
-  std::cout << "Created field of size: " 
-            << field.get_width() << "x" << field.get_height() << std::endl;
-
-  unsigned int start_time = CL_System::get_time();
-  unsigned int end_time;
-  //for(int count = 0; count < 100; ++count)
-  //{
-  for(int y = 0; y < field.get_height(); ++y)
-    for(int x = 0; x < field.get_width(); ++x)
-      {
-        field(x,y) = (rand()%20) > 5 ? 0 : 1;
-      }
-
-  BFirstPathfinder pathfinder(&field);
-  Pos start;
-  Pos end;
-  start.x = rand()%field.get_width();
-  start.y = rand()%field.get_height();
-
-  end.x = rand()%field.get_width();
-  end.y = rand()%field.get_height();
-
-  pathfinder.init(start, end);
-  //pathfinder.display();
-
-  //int i = 0;
-  //std::cout << "Start: " << start.x << " " << start.y << std::endl;
-  //std::cout << "End:   " << end.x << " " << end.y << std::endl;
-
-  while(!pathfinder.finished())
-    {
-      pathfinder.process_one_open_node();
-      //getchar();
-    }
-  end_time = CL_System::get_time();
-
-  pathfinder.display();
-      
-  if (pathfinder.get_state() != BFirstPathfinder::PATH_FOUND)
-    {
-      std::cout << "No Path could be found" << std::endl;
-    }
-  else
-    {
-      std::cout << "Found path" << std::endl;
-      std::vector<Pos>& path = pathfinder.get_path();
-      for (std::vector<Pos>::iterator i = path.begin(); i != path.end(); ++i)
-        {
-          std::cout << "[" << i->x << ", " << i->y << "] ";
-        }       
-      std::cout << std::endl;
-    }
-
-  //      getchar();
-  //std::cout << "round: " << ++i << std::endl;
-  //}
-  std::cout << "Msec: " << end_time - start_time << std::endl;
-
-  CL_SetupCore::deinit();
-}
-#endif
-
-// Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 bfirst_pathfinder.cxx  -o bfirst_pathfinder -lclanCore"
-// End:
-
-/* EOF */

Copied: trunk/src/buildings/ammotent.cpp (from rev 341, trunk/src/buildings/ammotent.cxx)


Property changes on: trunk/src/buildings/ammotent.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/ammotent.cxx
===================================================================
--- trunk/src/buildings/ammotent.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/ammotent.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,87 +0,0 @@
-//  $Id: ammotent.cxx,v 1.12 2003/06/22 18:34:52 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <math.h>
-#include "../color.hxx"
-#include "../game_obj_manager.hxx"
-#include "../radar.hxx"
-#include "../resource_manager.hxx"
-#include "../vehicles/vehicle.hxx"
-#include "../display/drawing_context.hxx"
-#include "ammotent.hxx"
-
-Ammotent::Ammotent (const AList& lst)
-  : Building (lst),
-    ammotent (resources->get_sprite("feuerkraft/ammotent")),
-    pos (x_pos * 40 + 40, y_pos * 40 + 60), // FIXME: Hard coded tilesize again...
-    reloading(false)
-{
-}
-
-Ammotent::~Ammotent ()
-{
-}
-
-void 
-Ammotent::draw (View& view)
-{
-  view.get_sc().color().draw(ammotent, pos.x, pos.y);
-  if (reloading)
-    {
-      view.get_sc().color().draw_fillrect(pos.x - 32, pos.y + 25,
-                                  pos.x + 31, pos.y + 57,
-                                  CL_Color(CL_Colorf(1.0f, 1.0f, 1.0f, 
-                                                     sin(GameWorld::current()->get_time () * 10.0f)
-                                                     * .3f + .5f)));
-    }
-}
-
-void
-Ammotent::draw_radar (Radar& radar)
-{
-  radar.draw_blip (pos, 4, 0, 0, 1.0f);
-}
-
-void 
-Ammotent::update (float delta)
-{
-  delta *= 50;
-
-  reloading = false;
-
-  GameObjManager* objs = GameWorld::current()->get_game_obj_manager();
-  for (GameObjManager::iterator i = objs->begin(); i != objs->end(); ++i)
-    {
-      Vehicle* vehicle = dynamic_cast<Vehicle*>(*i);
-
-      if (vehicle && (vehicle->get_pos ().x > pos.x - 40
-		      && vehicle->get_pos ().x < pos.x + 40
-		      && vehicle->get_pos ().y > pos.y + 20
-		      && vehicle->get_pos ().y < pos.y + 60))
-	{
-	  if (vehicle->get_velocity () == 0.0)
-	    {
-	      vehicle->reload_ammo (delta);
-	      reloading = true;
-	    }
-	}
-    }
-}
-
-/* EOF */

Copied: trunk/src/buildings/building.cpp (from rev 341, trunk/src/buildings/building.cxx)


Property changes on: trunk/src/buildings/building.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/building.cxx
===================================================================
--- trunk/src/buildings/building.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/building.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,51 +0,0 @@
-//  $Id: building.cxx,v 1.6 2003/08/20 00:02:46 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../property_set.hxx"
-#include "../radar.hxx"
-#include "building.hxx"
-
-Building::Building (const AList& lst)
-  : x_pos (lst.get_int("x-pos")),
-    y_pos (lst.get_int("y-pos"))
-{
-  register_properties();
-}
-
-Building::~Building ()
-{
-  delete properties;
-}
-
-void
-Building::register_properties()
-{
-  properties = new PropertySet();
-
-  properties->register_int("x-pos", &x_pos);
-  properties->register_int("y-pos", &y_pos);
-}
-
-void
-Building::draw_radar(Radar& radar)
-{
-  radar.draw_blip(FloatVector2d(x_pos * 40, y_pos * 40), 3, .5f, .5f, .5f);
-}
-
-/* EOF */

Copied: trunk/src/buildings/building_manager.cpp (from rev 341, trunk/src/buildings/building_manager.cxx)


Property changes on: trunk/src/buildings/building_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/building_manager.cxx
===================================================================
--- trunk/src/buildings/building_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/building_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,59 +0,0 @@
-//  $Id: building_manager.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../game_world.hxx"
-#include "building_map.hxx"
-#include "building.hxx"
-#include "building_manager.hxx"
-
-BuildingManager* BuildingManager::current_ = 0;
-int BuildingManager::next_id = 1;
-
-BuildingManager::BuildingManager()
-{
-  current_ = this;
-}
-
-BuildingManager::~BuildingManager()
-{
-  
-}
-
-Building*
-BuildingManager::get_building_by_id(int handle)
-{
-  for(Buildings::iterator i = buildings.begin(); i != buildings.end(); ++i)
-    {
-      if ((*i)->get_id() == handle)
-        return *i;
-    }
-  return 0;
-}
-
-void
-BuildingManager::add_building(Building* building, int x, int y)
-{
-  buildings.push_back(building);
-  building->set_id(next_id);
-  ++next_id;
-
-  GameWorld::current()->get_buildingmap()->add_building(building, x, y);
-}
-
-/* EOF */

Copied: trunk/src/buildings/building_map.cpp (from rev 341, trunk/src/buildings/building_map.cxx)


Property changes on: trunk/src/buildings/building_map.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/building_map.cxx
===================================================================
--- trunk/src/buildings/building_map.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/building_map.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,201 +0,0 @@
-//  $Id: building_map.cxx,v 1.9 2003/06/22 21:51:21 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../view.hxx"
-#include "building_map.hxx"
-#include "building.hxx"
-
-#include "tower.hxx"
-#include "fuelstation.hxx"
-#include "ammotent.hxx"
-#include "headquarter.hxx"
-#include "wall.hxx"
-#include "wall_door.hxx"
-
-BuildingMap::BuildingMap(const BuildingMapData& data)
-  : BuildingMapData (data)
-{
-  for (std::vector<BuildingData>::iterator i = buildings_data.begin ();
-       i != buildings_data.end ();
-       ++i)
-    {
-      if (i->first == "tower")
-	{
-	  buildings.push_back(new Tower(i->second));
-	}
-      else if ("ammotent" == i->first)
-	{
-	  buildings.push_back(new Ammotent(i->second));
-	}
-      else if ("wall" == i->first)
-	{
-	  buildings.push_back(new Wall(i->second));
-	}
-      else if ("fuelstation" == i->first)
-	{
-	  //std::cout << "BuildingMapData: creating ammotent" << std::endl;
-	  buildings.push_back(new Fuelstation(i->second));
-	}
-      else if ("headquarter" == i->first)
-	{
-	  //std::cout << "BuildingMapData: creating headquarter" << std::endl;
-	  buildings.push_back(new Headquarter(i->second));
-	}
-      else if ("walldoor" == i->first)
-	{
-	  buildings.push_back(new WallDoor(i->second));
-	}
-      else
-	{
-	  std::cout << "BuildingMapData: Error: " << i->first << std::flush;
-	}
-    }
-
-  building_map.resize(width * height);
-  
-  // Clear all pointers in the building map
-  for (std::vector<Building*>::iterator i = building_map.begin();
-       i != building_map.end();
-       ++i)
-    {
-      *i = NULL;
-    }
-
-  // 'Draw' the buildings onto the building_map
-  for (std::vector<Building*>::iterator i = buildings.begin();
-       i != buildings.end ();
-       ++i)
-    {
-      Building* building = *i;
-      
-      for (int x = building->get_x_pos();
-	   x < building->get_x_pos() + building->get_map_width();
-	   ++x)
-	{
-	  for (int y = building->get_y_pos(); 
-	       y < building->get_y_pos() + building->get_map_height();
-	       ++y)
-	    {
-	      if (x >= 0 && x < width && y >= 0 && y < height)
-		building_map[(y * width) + x] = building;
-	      else
-		std::cout << "BuildingMap: Error: building position out of range: " << x << ", " << y << std::endl;
-	    }
-	}
-    }
-}
-
-// Draw the object onto the screen
-void
-BuildingMap::draw (View& view)
-{
-  for (std::vector<Building*>::iterator i = buildings.begin ();
-       i != buildings.end ();
-       ++i)
-    {
-      (*i)->draw (view);
-    }
-}
-
-void
-BuildingMap::draw_energie (View& view)
-{
-  for (std::vector<Building*>::iterator i = buildings.begin ();
-       i != buildings.end ();
-       ++i)
-    {
-      (*i)->draw_energie (view);
-    }  
-}
-
-void
-BuildingMap::draw_radar (Radar& radar)
-{
-  for (std::vector<Building*>::iterator i = buildings.begin ();
-       i != buildings.end ();
-       ++i)
-    {
-      (*i)->draw_radar (radar);
-    }  
-}
-  
-// Update the object once a game loop
-void
-BuildingMap::update (float delta)
-{
-  for (std::vector<Building*>::iterator i = buildings.begin ();
-       i != buildings.end ();
-       ++i)
-    {
-      (*i)->update (delta);
-    }
-}
-
-Building*
-BuildingMap::get_building (const FloatVector2d& pos)
-{
-  int x = int(pos.x)/40;
-  int y = int(pos.y)/40;
-
-  if (pos.x < 0)
-    x -= 1;
-
-  if (pos.y < 0)
-    y -= 1;
-
-  if (x >= 0 && x < width && y >=0 && y < height)
-    {
-      Building* b = building_map[(y * width) + x];
-      if (b && b->alive () && b->is_active ())
-	return b;
-      else
-	return NULL;
-    }
-  else
-    return NULL;
-}
-
-GameObjData*
-BuildingMap::get_data ()
-{
-  // FIXME: No Sync
-  return this;
-}
-
-void
-BuildingMap::add_building(Building* building, int x_pos, int y_pos)
-{
-  //std::cout << "Adding building " << building << " at " << x_pos << ", " << y_pos << std::endl;
-
-  for (int x = x_pos; x < x_pos + building->get_map_width(); ++x)
-    {
-      for (int y = y_pos; y < y_pos + building->get_map_height(); ++y)
-        {
-          if (x >= 0 && x < width && y >= 0 && y < height)
-            building_map[(y * width) + x] = building;
-          else
-            std::cout << "BuildingMap: Error: building position out of range: " << x << ", " << y << std::endl;
-        }
-    }
-
-  buildings.push_back(building);
-}
-
-/* EOF */

Copied: trunk/src/buildings/building_map_data.cpp (from rev 341, trunk/src/buildings/building_map_data.cxx)


Property changes on: trunk/src/buildings/building_map_data.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/building_map_data.cxx
===================================================================
--- trunk/src/buildings/building_map_data.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/building_map_data.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,88 +0,0 @@
-//  $Id: building_map_data.cxx,v 1.7 2003/06/22 21:51:21 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "building_map_data.hxx"
-#include "building_map.hxx"
-#include "../guile.hxx"
-
-BuildingMapData::BuildingMapData (SCM desc)
-{
-  //std::cout << "BuildingMapData: parsing: start" << std::endl;
-
-  // FIXME: Hardcoded is ugly!
-  width = 256;
-  height = 256;
-
-  while (!gh_null_p (desc))
-    {
-      SCM symbol = gh_caar(desc);
-      SCM data   = gh_cdar(desc);
-
-      AList alst = Guile::scm2alist(data);
-      std::string str = Guile::symbol2string(symbol);
-
-      // FIXME: Should be placed in a BuildingDataFactory class
-      buildings_data.push_back(BuildingData(str, alst));
-
-      //std::cout << "BuildingData: " << str << "\n" << alst << std::endl;
-
-      desc = gh_cdr(desc);
-    }
-}
-
-BuildingMapData::~BuildingMapData ()
-{
-}
-
-GameObj*
-BuildingMapData::create ()
-{
-  return new BuildingMap(*this);
-}
-
-SCM
-BuildingMapData::dump_to_scm ()
-{
-  return SCM_EOL;
-#if 0
-  SCM building_map_scm = SCM_EOL;
-
-  for (std::vector<BuildingData*>::iterator i = buildings_data.begin ();
-       i != buildings_data.end (); ++i)
-    {
-      SCM obj = (*i)->dump_to_scm ();
-
-      if (obj == SCM_BOOL_F)
-	{
-	  std::cout << "BuildingMapData: Error dumping: " << typeid(**i).name () << std::endl;
-	}
-      else // dump successful
-	{
-	  building_map_scm = gh_cons (obj, building_map_scm);
-	}
-    }
-
-  building_map_scm = gh_cons (gh_symbol2scm ("buildingmap"), gh_reverse (building_map_scm));
-
-  return building_map_scm;
-#endif
-}
-
-/* EOF */

Copied: trunk/src/buildings/building_type_manager.cpp (from rev 341, trunk/src/buildings/building_type_manager.cxx)


Property changes on: trunk/src/buildings/building_type_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/building_type_manager.cxx
===================================================================
--- trunk/src/buildings/building_type_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/building_type_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,96 +0,0 @@
-//  $Id: building_type_manager.cxx,v 1.5 2003/06/23 09:56:39 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-
-#include "wall_door.hxx"
-#include "wall.hxx"
-#include "tower.hxx"
-#include "fuelstation.hxx"
-#include "ammotent.hxx"
-
-#include "building_type_manager.hxx"
-
-BuildingTypeManager* BuildingTypeManager::current_ = 0;
-
-BuildingTypeManager::BuildingTypeManager()
-{
-  next_id = 2;
-  current_ = this;
-
-  register_factory(new GenericBuildingFactory<Fuelstation>("fuelstation"));
-  register_factory(new GenericBuildingFactory<Ammotent>("ammotent"));
-  register_factory(new GenericBuildingFactory<Wall>("wall"));
-  register_factory(new GenericBuildingFactory<WallDoor>("walldoor"));
-  register_factory(new GenericBuildingFactory<Tower>("tower"));
-}
-
-int
-BuildingTypeManager::register_factory(BuildingFactory* factory)
-{
-  factories.push_back(factory);
-  factory->id = next_id;
-  return next_id++;
-}
-
-Building*
-BuildingTypeManager::create_building(int type_id, const AList& params)
-{
-  for (Factories::iterator i = factories.begin(); i != factories.end(); ++i)
-    {
-      if ((*i)->id == type_id)
-        {
-          return (*i)->create(params);
-        }
-    }
-
-  // FIXME: throw something here
-  std::cout << "BuildingTypeManager: Invalid type handle: " << type_id << std::endl;
-  return 0;
-}
-
-int
-BuildingTypeManager::name_to_id(const std::string& name)
-{
- for (Factories::iterator i = factories.begin(); i != factories.end(); ++i)
-    {
-      if ((*i)->name == name)
-        {
-          return (*i)->id;
-        }
-    }
- // FIXME: throw something here
- return 0;
-}
-
-std::string
-BuildingTypeManager::id_to_name(int id)
-{
- for (Factories::iterator i = factories.begin(); i != factories.end(); ++i)
-    {
-      if ((*i)->id == id)
-        {
-          return (*i)->name;
-        }
-    }
- // FIXME: throw something here
- return "invalid-id";
-}
-
-/* EOF */

Copied: trunk/src/buildings/custom_building.cpp (from rev 341, trunk/src/buildings/custom_building.cxx)


Property changes on: trunk/src/buildings/custom_building.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/custom_building.cxx
===================================================================
--- trunk/src/buildings/custom_building.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/custom_building.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,67 +0,0 @@
-//  $Id: custom_building.cxx,v 1.9 2003/06/23 08:43:32 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../alist.hxx"
-#include "../resource_manager.hxx"
-#include "custom_building.hxx"
-
-CustomBuilding::CustomBuilding(const AList& type, const AList& lst)
-  : Building(lst)
-{
-  std::string sprite_str = "feuerkraft/nobuilding";
-  int         i_energie = 100;
-  width   = 2;
-  height  = 2;
-
-  type.retrieve_string("sprite",  sprite_str);
-  type.retrieve_int   ("energie", i_energie);
-  type.retrieve_int   ("width",   width);
-  type.retrieve_int   ("height",  height);
-
-  energie.set_max_energie(i_energie);
-
-  sprite = resources->get_sprite(sprite_str);
-}
-
-void
-CustomBuilding::draw(View& view)
-{
-  view.get_sc().color().draw(sprite,
-                     x_pos * 40 + get_map_width()*20, 
-                     y_pos * 40 + get_map_height()*20); // FIXME: Hardcoded tilesize
-}
-
-void
-CustomBuilding::draw_energie(View& view)
-{
-  energie.draw(view, x_pos*40 + get_map_width()*20, (y_pos*40));
-}
-
-void
-CustomBuilding::update(float)
-{
-}
-
-void
-CustomBuilding::collide (Projectile*)
-{
-  energie -= 5;
-}
-
-/* EOF */

Copied: trunk/src/buildings/fuelstation.cpp (from rev 341, trunk/src/buildings/fuelstation.cxx)


Property changes on: trunk/src/buildings/fuelstation.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/fuelstation.cxx
===================================================================
--- trunk/src/buildings/fuelstation.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/fuelstation.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,86 +0,0 @@
-//  $Id: fuelstation.cxx,v 1.12 2003/06/22 18:34:52 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <cmath>
-#include "../game_obj_manager.hxx"
-#include "../color.hxx"
-#include "../radar.hxx"
-#include "../vehicles/vehicle.hxx"
-#include "../resource_manager.hxx"
-#include "../display/drawing_context.hxx"
-#include "fuelstation.hxx"
-
-Fuelstation::Fuelstation(const AList& lst)
-  : Building(lst),
-    fuelstation (resources->get_sprite("feuerkraft/fuelstation")),
-    pos (x_pos * 40 + 40, y_pos * 40 + 60), // FIXME: Hardcoded tilesize
-    refueling (false)
-{
-}
-
-Fuelstation::~Fuelstation ()
-{
-}
-
-void 
-Fuelstation::draw (View& view)
-{
-  view.get_sc().color().draw(fuelstation, pos.x, pos.y);
-  if (refueling)
-    {
-      view.get_sc().color().draw_fillrect(pos.x - 32, pos.y + 25,
-                                  pos.x + 31, pos.y + 57,
-                                  CL_Color(CL_Colorf(1.0, 1.0, 1.0,
-                                                     sin(GameWorld::current()->get_time () * 10.0f)
-                                                     * .3f + .5f)));
-    }
-}
-
-void
-Fuelstation::draw_radar (Radar& radar)
-{
-  radar.draw_blip (pos, 4, 0, 0, 1.0f);
-}
-
-void 
-Fuelstation::update (float delta)
-{
-  delta *= 50;
-
-  refueling = false;
-
-  GameObjManager* objs = GameWorld::current()->get_game_obj_manager();
-  for (GameObjManager::iterator i = objs->begin(); i != objs->end(); ++i)
-    {
-      Vehicle* vehicle = dynamic_cast<Vehicle*>(*i);
-      if (vehicle && (vehicle->get_pos ().x > pos.x - 40
-		      && vehicle->get_pos ().x < pos.x + 40
-		      && vehicle->get_pos ().y > pos.y + 20
-		      && vehicle->get_pos ().y < pos.y + 60))
-	{
-	  if (vehicle->get_velocity () == 0.0)
-	    {
-	      vehicle->refuel (delta);
-	      refueling = true;
-	    }
-	}
-    }
-}
-
-/* EOF */

Copied: trunk/src/buildings/headquarter.cpp (from rev 341, trunk/src/buildings/headquarter.cxx)


Property changes on: trunk/src/buildings/headquarter.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/headquarter.cxx
===================================================================
--- trunk/src/buildings/headquarter.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/headquarter.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,91 +0,0 @@
-//  $Id: headquarter.cxx,v 1.9 2003/06/22 19:22:56 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../radar.hxx"
-#include "../explosion.hxx"
-#include "../resource_manager.hxx"
-#include "headquarter.hxx"
-
-Headquarter::Headquarter (const AList& lst)
-  : Building (lst),
-    pos (x_pos * 40 + 40, y_pos * 40 + 40),
-    headquarter (resources->get_sprite("feuerkraft/headquarter")),
-    headquarter_damaged (resources->get_sprite("feuerkraft/headquarterdamaged")),
-    headquarter_destroyed (resources->get_sprite("feuerkraft/headquarterdestroyed")),
-    energie (100),
-    destroyed (false)
-{
-  current_sur = &headquarter;
-}
-
-Headquarter::~Headquarter ()
-{
-}
-
-void 
-Headquarter::update (float delta)
-{
-  if (energie <= 0 && !destroyed)
-    {
-      GameWorld::current()->add(new Explosion (pos, Explosion::MEDIUM));
-      destroyed = true;
-    }
-}
-
-void 
-Headquarter::draw (View& view)
-{
-  view.get_sc().color().draw(*current_sur, pos.x, pos.y);
-  energie.draw (view, int(pos.x), int(pos.y - 40));
-}
-
-void
-Headquarter::draw_radar (Radar& radar)
-{
-  radar.draw_blip (pos, 4);
-}
-
-bool 
-Headquarter::is_colliding (FloatVector2d obj_pos)
-{
-  return (!destroyed &&
-	  obj_pos.x > pos.x - 40 && obj_pos.x < pos.x + 40 &&
-	  obj_pos.y > pos.y - 40 && obj_pos.y < pos.y + 40);
-}
-
-void 
-Headquarter::collide (Projectile*)
-{
-  energie -= 10;
-
-  if (energie > 60)
-    current_sur = &headquarter;
-  else if (energie > 0)
-    current_sur = &headquarter_damaged;
-  else
-    current_sur = &headquarter_destroyed;
-}
-
-bool
-Headquarter::alive ()
-{
-  return (energie > 0);
-}
-
-/* EOF */

Copied: trunk/src/buildings/tower.cpp (from rev 341, trunk/src/buildings/tower.cxx)


Property changes on: trunk/src/buildings/tower.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/tower.cxx
===================================================================
--- trunk/src/buildings/tower.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/tower.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,143 +0,0 @@
-//  $Id: tower.cxx,v 1.12 2003/10/20 21:30:09 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../property_set.hxx"
-#include "../radar.hxx"
-#include "../resource_manager.hxx"
-#include "../input/controller.hxx"
-#include "../math.hxx"
-#include "../explosion.hxx"
-#include "tower.hxx"
-
-Tower::Tower(const AList& lst)
-  : Building(lst),
-    towerbase(resources->get_sprite("feuerkraft/tower/base")),
-    towerdamaged (resources->get_sprite("feuerkraft/tower/damaged")),
-    towerdestroyed (resources->get_sprite("feuerkraft/tower/destroyed")),
-    turret (resources->get_sprite("feuerkraft/tower/turret")),
-    energie (lst.get_int("start-energie", 100)),
-    destroyed (false)
-{  
-  //int energie;
-  //std::cout << lst.retrieve_int("start-energie", energie) << std::endl;
-  //std::cout << lst << std::endl;
-  //std::cout << "Tower Energie: " << lst.get_int("start-energie", 100) << std::endl;
-  //std::cout << "--Tower Energie: " << lst.get_int("sta-energie", 100) << std::endl;
-
-  orientation = lst.get_float("orientation");
-  pos.x = x_pos * 40 + 40;
-  pos.y = y_pos * 40 + 40;
-
-  steering = 0;
-
-  Building::properties->register_float("orientation", &orientation);
-}
-  
-Tower::~Tower ()
-{
-}
-
-// Draw the object onto the screen
-void
-Tower::draw (View& view)
-{
-  if (energie > 50)
-    {
-      view.get_sc().color().draw(towerbase, pos.x, pos.y);
-    }
-  else if (energie > 0)
-    {
-      view.get_sc().color().draw(towerdamaged, pos.x, pos.y);
-    }
-  else
-    {
-      view.get_sc().color().draw(towerdestroyed, pos.x, pos.y);
-    }
-
-  if (energie > 0)
-    {
-      turret.set_angle(orientation);
-      view.get_sc().color().draw(turret, pos.x, pos.y);
-    }
-}
-  
-void
-Tower::draw_energie (View& view)
-{
-  energie.draw (view, int(pos.x), int (pos.y) - 40);
-}
-
-void
-Tower::draw_radar (Radar& radar)
-{
-  radar.draw_blip (pos, 4);
-}
-
-// Update the object once a game loop
-void
-Tower::update (float delta)
-{
-  if (!(energie > 0))
-    return;
-
-  orientation = Math::normalize_angle(orientation + steering * delta);
-
-  if (!destroyed && !(energie > 0))
-    {
-      GameWorld::current()->add (new Explosion (pos, Explosion::MEDIUM));
-      destroyed = true;
-    }
-}
-
-void
-Tower::update_controlls(const Controller& controller)
-{
-  steering = controller.get_axis_state(ORIENTATION_AXIS);
-}
-
-void
-Tower::collide (int hits)
-{
-  energie -= hits;
-  if (!destroyed && !(energie > 0))
-    {
-      GameWorld::current()->add (new Explosion (pos, Explosion::LARGE));
-      destroyed = true;
-    }
-}
-
-void 
-Tower::collide (Projectile*)
-{
-  energie -= 5;   
-  if (!destroyed && !(energie > 0))
-    {
-      GameWorld::current()->add (new Explosion (pos, Explosion::LARGE));
-      destroyed = true;
-    }
-}
-
-bool
-Tower::alive ()
-{
-  return !destroyed;
-}
-
-/* EOF */

Copied: trunk/src/buildings/tower_ai.cpp (from rev 341, trunk/src/buildings/tower_ai.cxx)


Property changes on: trunk/src/buildings/tower_ai.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/tower_ai.cxx
===================================================================
--- trunk/src/buildings/tower_ai.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/tower_ai.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,69 +0,0 @@
-//  $Id: tower_ai.cxx,v 1.1 2003/06/18 13:04:21 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../math.hxx"
-#include "../player.hxx"
-#include "../unit.hxx"
-#include "../property_set.hxx"
-#include "tower_ai.hxx"
-
-extern Player*  player;
-
-TowerAI::TowerAI(Tower* arg_tower)
-  : tower(arg_tower),
-    ai_count(0)
-{
-}
-
-void
-TowerAI::update(float delta)
-{
-  ai_count -= delta;
-
-  if (ai_count <= 0)
-    {
-      ai_count = 0.0f;
-
-      FloatVector2d pos(tower->get_x_pos() * 40 + 40,
-                        tower->get_y_pos() * 40 + 40);
-
-      FloatVector2d target_pos = player->get_current_unit()->get_pos();
-      
-      FloatVector2d diff = target_pos - pos;
-      
-      //      float angle = Math::normalize_angle(tower->get_orientation() - diff.get_orientation());
-      
-      tower->Building::get_properties()->set_float("orientation", diff.get_orientation() + Math::pi);
-
-      /*if (angle > 0)        controller.set_axis_state(ORIENTATION_AXIS, -1.0f);
-      else
-        controller.set_axis_state(ORIENTATION_AXIS, 1.0f);
-
-      tower->update_controlls(controller);
-      */
-    }
-}
-
-GameObj*
-TowerAI::get_object()
-{
-  return 0;
-}
-
-/* EOF */

Copied: trunk/src/buildings/wall.cpp (from rev 341, trunk/src/buildings/wall.cxx)


Property changes on: trunk/src/buildings/wall.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/wall.cxx
===================================================================
--- trunk/src/buildings/wall.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/wall.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,75 +0,0 @@
-//  $Id: wall.cxx,v 1.9 2003/06/23 09:56:39 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../property_set.hxx"
-#include "../radar.hxx"
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "wall.hxx"
-
-Wall::Wall (const AList& lst)
-  : Building(lst),
-    pos (x_pos * 40 + 20, y_pos * 40 + 20),
-    wall (resources->get_sprite("feuerkraft/wall")),
-    wall_damaged (resources->get_sprite ("feuerkraft/wall_damaged")),
-    wall_destroyed (resources->get_sprite ("feuerkraft/wall_destroyed"))
-{
-  energie = lst.get_int("energie", 100);
-  properties->register_int("energie", &energie);
-}
-
-Wall::~Wall ()
-{
-}
-
-void 
-Wall::draw (View& view)
-{
-  if (energie > 60)
-    view.get_sc().color().draw (wall, pos.x, pos.y);
-  else if (energie > 0)
-    view.get_sc().color().draw (wall_damaged, pos.x, pos.y);
-  else
-    view.get_sc().color().draw (wall_destroyed, pos.x, pos.y);
-}
-
-void
-Wall::draw_radar (Radar& radar)
-{
-  radar.draw_blip (pos, 2);
-}
-
-void
-Wall::update(float)
-{
-}
-
-void 
-Wall::collide (Projectile*)
-{
-  energie -= 25;
-}
-
-bool
-Wall::alive ()
-{
-  return energie > 0;
-}
-
-/* EOF */

Copied: trunk/src/buildings/wall_door.cpp (from rev 341, trunk/src/buildings/wall_door.cxx)


Property changes on: trunk/src/buildings/wall_door.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/buildings/wall_door.cxx
===================================================================
--- trunk/src/buildings/wall_door.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/buildings/wall_door.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,105 +0,0 @@
-//  $Id: wall_door.cxx,v 1.10 2003/06/22 19:22:56 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../vehicles/vehicle.hxx"
-#include "../view.hxx"
-#include "../game_obj_manager.hxx"
-#include "../resource_manager.hxx"
-#include "wall_door.hxx"
-
-WallDoor::WallDoor(const AList& lst)
-  : Building(lst)
-{
-  if (lst.get_string("orientation") == "vertical")
-    {
-      sprite = resources->get_sprite("feuerkraft/vdoor");
-      pos = FloatVector2d(x_pos * 40 + 20, y_pos * 40 + 60);
-      map_width = 1;
-      map_height = 3;
-    }
-  else 
-    {
-      sprite = resources->get_sprite("feuerkraft/hdoor");
-      pos = FloatVector2d(x_pos * 40 + 60, y_pos * 40 + 20);
-      map_width = 3;
-      map_height = 1;
-    }
-}
-
-WallDoor::~WallDoor ()
-{
-}
-
-void
-WallDoor::draw (View& view)
-{
-  if (status != S_OPENED)
-    view.get_sc().color().draw(sprite, pos.x, pos.y);
-}
-
-void
-WallDoor::draw_radar (Radar& radar)
-{
-}
-
-void
-WallDoor::update(float)
-{
-  status = S_CLOSED;
-  
-  GameObjManager* objs = GameWorld::current()->get_game_obj_manager();
-
-  for (GameObjManager::iterator i = objs->begin(); i != objs->end(); ++i)
-    {
-      Vehicle* vehicle = dynamic_cast<Vehicle*>(*i);
-      if (vehicle)
-	{
-	  FloatVector2d diff = pos;
-	  diff -= vehicle->get_pos ();
-
-	  if (diff.get_length() < 75.0f)
-	    {
-	      status = S_OPENED;
-	      return;
-	    }
-	}
-    }
-}
-
-void
-WallDoor::collide (Projectile*)
-{
-}
-
-bool
-WallDoor::is_active ()
-{
-  if (status == S_OPENED)
-    return false;
-  else
-    return true;
-}
-
-bool
-WallDoor::alive ()
-{
-  return true;
-}
-
-/* EOF */

Copied: trunk/src/collision_manager.cpp (from rev 341, trunk/src/collision_manager.cxx)


Property changes on: trunk/src/collision_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/collision_manager.cxx
===================================================================
--- trunk/src/collision_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/collision_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,261 +0,0 @@
-//  $Id: collision_manager.cxx,v 1.9 2003/06/18 14:38:28 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <assert.h>
-#include <math.h>
-#include "math.hxx"
-#include "color.hxx"
-#include "view.hxx"
-#include "game_world.hxx"
-#include "buildings/building.hxx"
-#include "buildings/building_map.hxx"
-#include "collision_manager.hxx"
-#include "game_obj_manager.hxx"
-#include "display/drawing_context.hxx"
-
-CollisionManager* CollisionManager::current_ = 0;
-
-CollisionManager*
-CollisionManager::current()
-{
-  return current_;
-}
-
-CollisionManager::CollisionManager()
-{
-  current_ = this;
-}
-
-void
-CollisionManager::clear()
-{
-  shapes.clear();
-}
-
-void
-CollisionManager::run()
-{
-  // Check for GameObj<->GameObj collisions
-  for(Shapes::iterator i = shapes.begin(); i != shapes.end(); ++i)
-    {
-      for(Shapes::iterator j = i + 1; j != shapes.end(); ++j)
-        {
-          if (i->type == SHAPE_CIRCLE)
-            {
-              if (j->type == SHAPE_CIRCLE) {
-                check_circle_circle_collision(i->circle, j->circle);
-              } else if (j->type == SHAPE_RECT) {
-                check_circle_rect_collision(i->circle, j->rect);
-              }
-            }
-          else if (i->type == SHAPE_RECT)
-            {
-              if (j->type == SHAPE_CIRCLE) {
-                check_circle_rect_collision(j->circle, i->rect);
-              } else if (j->type == SHAPE_RECT) {
-                check_rect_rect_collision(i->rect, j->rect);
-              }
-            }
-          else
-            {
-              assert(false);
-            }
-        }
-    }
-  
-  // Check for GameObj building collision
-  for(Shapes::iterator i = shapes.begin(); i != shapes.end(); ++i)
-    {
-      switch (i->type)
-        {
-        case SHAPE_CIRCLE:
-          {
-            BuildingMap* building_map = GameWorld::current()->get_buildingmap();
-            Building* building = building_map->get_building(FloatVector2d(i->circle.x, i->circle.y));
-            
-            if (!building)
-              building = building_map->get_building(FloatVector2d(i->circle.x - i->circle.radius, i->circle.y));
-
-            if (!building)
-              building = building_map->get_building(FloatVector2d(i->circle.x + i->circle.radius, i->circle.y));
-
-            if (!building)
-              building = building_map->get_building(FloatVector2d(i->circle.x, i->circle.y - i->circle.radius));
-
-            if (!building)
-              building = building_map->get_building(FloatVector2d(i->circle.x, i->circle.y + i->circle.radius));
-            
-            if (building)
-              {
-                GameObj* obj = GameObjManager::current()->get_object_by_id(i->circle.object_id);
-                assert(obj);
-                obj->on_collision_with_building(building);
-              }
-          }
-          break;
-        case SHAPE_RECT:
-          // fixme: not handled
-          break;
-        default:
-          std::cout << "Unhandled type: " << i->type << std::endl;
-        }
-    }
-}
-
-void
-CollisionManager::draw(View& view)
-{
-  for(Shapes::iterator i = shapes.begin(); i != shapes.end(); ++i)
-    {
-      switch (i->type)
-        {
-        case SHAPE_CIRCLE:
-          view.get_sc().color().draw_circle(i->circle.x, i->circle.y, i->circle.radius,
-                                    CL_Color(255, 0, 0));
-          break;
-        case SHAPE_RECT:
-          {
-            CL_Color color(255, 0, 0);
-            Math::Quad quad = rect2quad(i->rect);
-            view.get_sc().color().draw_line(quad.a.x, quad.a.y, quad.b.x, quad.b.y, color);
-            view.get_sc().color().draw_line(quad.b.x, quad.b.y, quad.c.x, quad.c.y, color);
-            view.get_sc().color().draw_line(quad.c.x, quad.c.y, quad.d.x, quad.d.y, color);
-            view.get_sc().color().draw_line(quad.d.x, quad.d.y, quad.a.x, quad.a.y, color);
-          }
-          break;
-        default:
-          std::cout << "CollisionManager: unhandled type: " << i->type << std::endl;
-        }
-    }
-}
-
-void
-CollisionManager::add_circle(int object_id, float x, float y, float radius)
-{
-  Shape shape;
-
-  shape.type = SHAPE_CIRCLE;
-
-  shape.circle.object_id = object_id;
-  shape.circle.x = x;
-  shape.circle.y = y;
-  shape.circle.radius = radius;
-
-  shapes.push_back(shape);
-}
-
-void
-CollisionManager::add_point(int object_id, float x, float y)
-{
-  add_circle(object_id, x, y, .5f);
-}
-
-void
-CollisionManager::add_rect(int object_id, float x, float y, float width, float height, float orientation)
-{
-  Shape shape;
-#if 0
-  shape.type = SHAPE_RECT;
-
-  shape.rect.object_id = object_id;
-  shape.rect.x = x;
-  shape.rect.y = y;
-  shape.rect.width  = width;
-  shape.rect.height = height;
-  shape.rect.orientation = orientation;
-#else
-  shape.type = SHAPE_CIRCLE;
-  
-  shape.circle.object_id = object_id;
-  shape.circle.x = x;
-  shape.circle.y = y;
-  shape.circle.radius = (width + height)/4;
-#endif
-  shapes.push_back(shape);
-}
-
-Math::Quad
-CollisionManager::rect2quad(const Rectangle& rect)
-{
-  Math::Quad quad;
-
-  float dist = sqrt((rect.width/2) * (rect.width/2) + (rect.height/2) * (rect.height/2));
-
-  float angle = atan2(rect.height/2, rect.width/2);
-
-  // upper/left
-  quad.a.x = rect.x + dist * sin(angle - rect.orientation);
-  quad.a.y = rect.y + dist * cos(angle - rect.orientation);
-  // upper/right
-  quad.b.x = rect.x + dist * sin(-angle - rect.orientation);
-  quad.b.y = rect.y + dist * cos(-angle - rect.orientation);
-  // lower/right
-  quad.c.x = rect.x + dist * sin(angle - rect.orientation + Math::pi);
-  quad.c.y = rect.y + dist * cos(angle - rect.orientation + Math::pi);
-  // lower/left
-  quad.d.x = rect.x + dist * sin(-angle - rect.orientation + Math::pi);
-  quad.d.y = rect.y + dist * cos(-angle - rect.orientation + Math::pi);
-
-  return quad;
-}
-
-void
-CollisionManager::check_rect_rect_collision(const Rectangle& rect1, const Rectangle& rect2)
-{
-  if (Math::quad_collide(rect2quad(rect1), rect2quad(rect2)))
-    {
-      GameObj* obj1 = GameObjManager::current()->get_object_by_id(rect1.object_id);
-      GameObj* obj2 = GameObjManager::current()->get_object_by_id(rect2.object_id);
-
-      assert(obj1);
-      assert(obj2);
-
-      obj1->on_collision(obj2);
-      obj2->on_collision(obj1);
-    }
-}
-
-void
-CollisionManager::check_circle_rect_collision(const Circle& circle, const Rectangle& rect)
-{
-  
-}
-
-void
-CollisionManager::check_circle_circle_collision(const Circle& circle1, const Circle& circle2)
-{
-  float a = circle2.x - circle1.x;
-  float b = circle2.y - circle1.y;
-  float dist = sqrt(a*a + b*b);
-
-  if (dist < circle1.radius + circle2.radius)
-    {
-      GameObj* obj1 = GameObjManager::current()->get_object_by_id(circle1.object_id);
-      GameObj* obj2 = GameObjManager::current()->get_object_by_id(circle2.object_id);
-
-      assert(obj1);
-      assert(obj2);
-
-      obj1->on_collision(obj2);
-      obj2->on_collision(obj1);
-    }
-}
-
-/* EOF */

Copied: trunk/src/color.cpp (from rev 341, trunk/src/color.cxx)


Property changes on: trunk/src/color.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/color.cxx
===================================================================
--- trunk/src/color.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/color.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,47 +0,0 @@
-//  $Id: color.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "color.hxx"
-
-Color::Color()
-{
-  red   = 1.0f;
-  green = 1.0f;
-  blue  = 1.0f;
-  alpha = 1.0f;
-}
-
-Color::Color(float red_, float green_, float blue_, float alpha_)
-{
-  red   = red_;
-  green = green_;
-  blue  = blue_;
-  alpha = alpha_;
-}
-
-CL_Color
-Color::get_cl_color() const
-{
-  return CL_Color(static_cast<int>(255 * red),
-                  static_cast<int>(255 * green),
-                  static_cast<int>(255 * blue),
-                  static_cast<int>(255 * alpha));
-}
-
-/* EOF */

Copied: trunk/src/command_line_arguments.cpp (from rev 341, trunk/src/command_line_arguments.cxx)


Property changes on: trunk/src/command_line_arguments.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/command_line_arguments.cxx
===================================================================
--- trunk/src/command_line_arguments.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/command_line_arguments.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,167 +0,0 @@
-//  $Id: command_line_arguments.cxx,v 1.7 2003/10/31 23:24:41 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <config.h>
-#include <iostream>
-#include <stdlib.h>
-#include <ClanLib/Core/System/command_line.h>
-#include "command_line_arguments.hxx"
-
-CommandLineArguments::CommandLineArguments()
-{
-  load_defaults();
-}
-
-
-CommandLineArguments::CommandLineArguments(int argc, char** argv)
-{
-  load_defaults();
-  parse_arguments(argc, argv);
-}
-
-void
-CommandLineArguments::load_defaults()
-{
-  // Default Screen Size
-  screen_width  = 800;
-  screen_height = 600;
-  fullscreen    = false;
-
-  mission_file = "";
-  fps          = 30.0f;
-  joystick     = -1;
-  verbose      = true;
-  datadir      = "";
-  music_enabled = false;
-  sound_enabled = false;
-}
-  
-void
-CommandLineArguments::parse_arguments(int argc, char** argv)
-{
-  CL_CommandLine argp;
-    
-  argp.set_help_indent(22);
-  argp.add_usage ("[LEVELFILE]");
-  argp.add_doc   ("Feuerkraft is a tank battle game");
-
-  argp.add_group("General Options:");
-  argp.add_option('v', "verbose", "",  "Produce verbose output");
-  argp.add_option('V', "version", "",  "Print the exact version of the game");
-  argp.add_option('q', "quiet",   "",  "Produce no output");
-  argp.add_option('h', "help",   "",   "Produce this help output");
-  argp.add_option('d', "datadir", "DATADIR", "Set the path to search for gamedata");
-
-  argp.add_group("Display Options:");
-  argp.add_option('g', "geometry",   "WIDTHxHEIGHT", "Set screen size");
-  argp.add_option('w', "fullscreen", "",    "Switch to Fullscreen on startup");
-  argp.add_option('f', "fps",        "FPS", "Limit of frames per second");
-
-  argp.add_group("Audio Options:");
-  argp.add_option('m', "music", "",  "Enable music");
-  argp.add_option('s', "sound", "",  "Enable sound");
-
-  argp.add_group("Input Options:");
-  argp.add_option('c', "controller", "FILE",   "Use controller as defined in FILE");
-
-  argp.add_group("Demo Recording/Playback Options:");
-  argp.add_option('r', "record",      "FILE", "Record input events to FILE");
-  argp.add_option('a', "record-video","DIR",  "Record a gameplay video to DIR");
-  argp.add_option('p', "play",        "FILE", "Playback input events from FILE");
-
-  argp.parse_args(argc, argv);
-
-  while (argp.next())
-    {
-      switch(argp.get_key())
-        {
-        case CL_CommandLine::REST_ARG:
-          mission_file = argp.get_argument();
-          break;
-
-        case 'a':
-          video_record_directory = argp.get_argument();
-          break;
-
-        case 'r':
-          event_record_file = argp.get_argument();
-          break;
-
-        case 'h':
-          argp.print_help();
-          exit(EXIT_SUCCESS);
-          break;
-
-        case 'p':
-          playback_file = argp.get_argument();
-          break;
-
-        case 'f':
-          fps = strtof(argp.get_argument().c_str(), 0);
-          break;
-
-        case 'V':
-          std::cout << PACKAGE_STRING << std::endl;
-          exit(EXIT_SUCCESS);
-          break;
-
-        case 'v':
-          verbose = true;
-          break;
-
-        case 'd':
-          datadir = argp.get_argument();
-          break;
-
-        case 'q':
-          verbose = false;
-          break;
-
-        case 'm':
-          music_enabled = true;
-          break;
-
-        case 'c':
-          controller_file = argp.get_argument();
-          break;
-
-        case 's':
-          sound_enabled = true;
-          break;
-
-        case 'w':
-          fullscreen = true;
-          break;
-
-        case 'g':
-          if (sscanf(argp.get_argument().c_str(), "%dx%d", &screen_width, &screen_height) != 2)
-            {
-              std::cout << "Screen size value incorrect: '" << argp.get_argument() << "'" << std::endl;
-              exit(EXIT_FAILURE);
-            }
-          break;
-
-        default: 
-          std::cout << "CommandLineArguments: Unhandled key: " << argp.get_key() << std::endl;
-          break;
-        }
-    }
-}
-
-/* EOF */

Copied: trunk/src/communication_dialog.cpp (from rev 341, trunk/src/communication_dialog.cxx)


Property changes on: trunk/src/communication_dialog.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/communication_dialog.cxx
===================================================================
--- trunk/src/communication_dialog.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/communication_dialog.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,93 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Core/System/system.h>
-#include "fonts.hxx"
-#include "unit.hxx"
-#include "view.hxx"
-#include "resource_manager.hxx"
-#include "game_obj_manager.hxx"
-#include "communication_dialog.hxx"
-
-CommunicationDialog* CommunicationDialog::current_ = 0;
-
-CommunicationDialog::CommunicationDialog()
-{
-  current_ = this;
-  spike = resources->get_sprite("feuerkraft/dialogspike");
-}
-
-CommunicationDialog::~CommunicationDialog()
-{
-}
-
-void
-CommunicationDialog::draw (CL_GraphicContext& gc)
-{
-  for(Messages::iterator i = messages.begin(); i != messages.end(); ++i)
-    {
-      Unit* unit = dynamic_cast<Unit*>(GameObjManager::current()->get_object_by_id(i->first));
-      if (unit)
-        {
-          CL_Font font = Fonts::font;
-          CL_Rect bbox = font.bounding_rect(0, 0, i->second.text);
-
-          FloatVector2d unit_pos   = View::current()->world_to_screen(unit->get_pos());
-          FloatVector2d dialog_pos = unit_pos + FloatVector2d(0, -60 - bbox.get_height());
-
-          spike.draw((int)unit_pos.x-15, (int)unit_pos.y-40);
-
-          CL_Display::fill_rect(CL_Rect(CL_Point(int(dialog_pos.x - bbox.get_width()/2 - 10),
-                                                 int(dialog_pos.y - 10)),
-                                        CL_Size(bbox.get_width()  + 20, 
-                                                bbox.get_height() + 20)),
-                                CL_Color(0,0,0, 100));
-
-          font.set_alignment(origin_top_center);
-          font.draw(int(dialog_pos.x), int(dialog_pos.y), i->second.text);
-        }
-    }
-}
-
-void
-CommunicationDialog::send(int unit_id, const std::string& text)
-{
-  Message message;
-
-  message.time = CL_System::get_time();
-  message.text = text;
-
-  messages[unit_id] = message;
-}
-
-void
-CommunicationDialog::update (float delta)
-{
-  // Remove old messages from the display
-  for (Messages::iterator i = messages.begin(); i != messages.end(); ++i)
-    {
-      if (i->second.time + 2000 < CL_System::get_time())
-        {
-          messages.erase(i);
-        }
-    }
-}
-
-/* EOF */

Copied: trunk/src/controller_def.cpp (from rev 341, trunk/src/controller_def.cxx)


Property changes on: trunk/src/controller_def.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/controller_def.cxx
===================================================================
--- trunk/src/controller_def.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/controller_def.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,96 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "controller_def.hxx"
-
-int
-ControllerDef::get_button_count()
-{
-  return 4;
-}
-
-int
-ControllerDef::get_axis_count()
-{
-  return 3;
-}
-
-std::string
-ControllerDef::button_id2name(int id)
-{
-  switch (id)
-    {
-    case PRIMARY_FIRE_BUTTON:
-      return "primary-button";
-    case SECONDARY_FIRE_BUTTON:
-      return "secondary-button";
-    case USE_BUTTON:
-      return "use-button";
-    case MENU_BUTTON:
-      return "menu-button";
-    default:
-      return "unknown";
-    }
-}
-
-int
-ControllerDef::button_name2id(const std::string& name)
-{
-  if      (name == "primary-button")
-    return PRIMARY_FIRE_BUTTON;
-  else if (name == "secondary-button")
-    return SECONDARY_FIRE_BUTTON;
-  else if (name == "use-button")
-    return USE_BUTTON;
-  else if (name == "menu-button")
-    return MENU_BUTTON;
-  else
-    return -1;
-}
-
-std::string
-ControllerDef::axis_id2name(int id)
-{
-  switch (id)
-    {
-    case ORIENTATION_AXIS:
-      return "orientation-axis";
-    case ACCELERATE_AXIS:
-      return "accelerate-axis";
-    case STRAFE_AXIS:
-      return "strafe-axis";
-    default:
-      return "unknown";
-    }
-}
-
-int 
-ControllerDef::axis_name2id(const std::string& name)
-{
-  if (name == "orientation-axis")
-    return ORIENTATION_AXIS;
-  else if (name == "accelerate-axis")
-    return ACCELERATE_AXIS;
-  else if (name == "strafe-axis")
-    return STRAFE_AXIS;
-  else
-    return -1;
-}
-
-/* EOF */

Copied: trunk/src/dijkstra_pathfinder.cpp (from rev 341, trunk/src/dijkstra_pathfinder.cxx)


Property changes on: trunk/src/dijkstra_pathfinder.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/dijkstra_pathfinder.cxx
===================================================================
--- trunk/src/dijkstra_pathfinder.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/dijkstra_pathfinder.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,364 +0,0 @@
-//  $Id: dijkstra_pathfinder.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/core.h>
-#include <iostream>
-#include <unistd.h>
-#include "dijkstra_pathfinder.hxx"
-
-DijkstraPathfinder::DijkstraPathfinder(Field<int>* arg_field)
-  : field(*arg_field),
-    node_field(field.get_width(), field.get_height())
-{
-}
-
-void
-DijkstraPathfinder::init(Pos& arg_start, Pos& arg_end)
-{
-  start = arg_start;
-  end   = arg_end;
-
-  path.clear();
-
-  if (start.x == end.x
-      && start.y == end.y)
-    {
-      state = ALREADY_ON_GOAL;
-      return;
-    }
-
-  // initing node_field
-  for(int y = 0; y < node_field.get_height(); ++y)
-    for(int x = 0; x < node_field.get_width(); ++x)
-      {
-        Node& node = node_field(x,y);
-
-        node.visited = 0;
-        node.parent  = PARENT_NONE;
-        node.cost    = 0;
-        node.x = x;
-        node.y = y;
-      }
-  
-  open_nodes = OpenNodes();
-
-  state = WORKING;
-
-  Node& node = node_field(start.x, start.y);
-  
-  node.visited = 1;
-  node.cost    = 0;
-  node.parent  = PARENT_GOAL;
-
-  make_neighbors_open(node);
-}
-
-bool
-DijkstraPathfinder::finished()
-{
-  return state != WORKING;
-}
-
-inline 
-void
-DijkstraPathfinder::process_one_open_node()
-{
-  if (open_nodes.empty())
-    {
-      state = NO_PATH_AVAILABLE;
-      return;
-    }
-  else
-    {
-      Node& cnode = *open_nodes.top();
-      open_nodes.pop();
-
-      assert(cnode.visited == 0);
-      cnode.visited = 1;
-      
-      // Goal reached
-      if (int(cnode.x) == end.x && int(cnode.y) == end.y)
-        {
-          construct_path();
-          state = PATH_FOUND;
-          return;
-        }
-     
-      make_neighbors_open(cnode);
-    }
-}
-
-void
-DijkstraPathfinder::make_neighbors_open(Node& cnode)
-{
-  // FIXME: We don't handle neightbors with smaller cost here
-  /*
-    if n' is in Open
-    and n'.cost < = newcost
-    continue
-  */
-  if (cnode.x > 0)
-    {
-      if (field(cnode.x - 1, cnode.y) == 0) // node is walkable
-        {
-          Node& west = node_field(cnode.x - 1, cnode.y);
-
-          if (west.visited == 0 && west.parent == PARENT_NONE)
-            {
-              west.parent = PARENT_EAST;
-              //west.cost   = cnode.cost + 1;
-              west.cost = int(PosDistance(Pos(cnode.x - 1, cnode.y), end));
-              add_to_open_nodes(west);
-            }
-        }
-    }
-
-  if (int(cnode.x) < node_field.get_width()-1  && field(cnode.x+1, cnode.y) == 0)
-    {
-      Node& east = node_field(cnode.x + 1, cnode.y);
-      if (east.visited == 0  && east.parent == PARENT_NONE) 
-        {
-          east.parent = PARENT_WEST;
-          //east.cost   = cnode.cost + 1;
-          east.cost     = int(PosDistance(Pos(cnode.x + 1, cnode.y), end));
-          add_to_open_nodes(east);
-        }
-    }
-
-  if (cnode.y > 0 && field(cnode.x, cnode.y - 1) == 0)
-    {
-      Node& north = node_field(cnode.x, cnode.y - 1);
-      if (north.visited == 0  && north.parent == PARENT_NONE)
-        {
-          north.parent = PARENT_SOUTH;
-          //north.cost   = cnode.cost + 1;
-          north.cost     = int(PosDistance(Pos(cnode.x, cnode.y-1), end));
-          add_to_open_nodes(north);
-        }
-    }
-  
-  if (int(cnode.y) < node_field.get_height() - 1  && field(cnode.x, cnode.y+1) == 0)
-    {
-      Node& south = node_field(cnode.x, cnode.y + 1);
-      if (south.visited == 0  && south.parent == PARENT_NONE)
-        {
-          south.parent = PARENT_NORTH;
-          //south.cost   = cnode.cost + 1;
-          south.cost     = int(PosDistance(Pos(cnode.x, cnode.y+1), end));
-          add_to_open_nodes(south);
-        }
-    }
-}
-
-inline void
-DijkstraPathfinder::add_to_open_nodes(Node& cnode)
-{
-  assert(cnode.parent != PARENT_NONE);
-  open_nodes.push(&cnode);
-}
-
-void
-DijkstraPathfinder::display()
-{
-  //std::cout << "c" << std::endl;
-  for(int y = 0; y < node_field.get_height(); ++y)
-    {
-      for(int x = 0; x < node_field.get_width(); ++x)
-        {
-          if (0)
-            {
-              if (node_field(x,y).parent == PARENT_SOUTH)
-                std::cout << "s";
-              else if (node_field(x,y).parent == PARENT_WEST)
-                std::cout << "w";
-              else if (node_field(x,y).parent == PARENT_EAST)
-                std::cout << "e";
-              else if (node_field(x,y).parent == PARENT_NORTH)
-                std::cout << "n";
-              else
-                std::cout << " ";
-            }
-          if (is_path_node(x,y))
-            std::cout << "#";
-          else
-            std::cout << " ";
-
-          if (x == start.x && y == start.y)
-            std::cout << "S";
-          else if (x == end.x && y == end.y)
-            std::cout << "G";
-          else if (field(x,y) != 0)
-            std::cout << "O";
-          else if (node_field(x,y).visited)
-            std::cout << ".";
-          else
-            std::cout << " ";
-        }
-      std::cout << std::endl;
-    }
-  std::cout << "OpenNodes: " << open_nodes.size() << std::endl;
-  std::cout << "State: " << state << std::endl;
-}
-
-bool
-DijkstraPathfinder::is_path_node(int x, int y)
-{
-  if (path.empty()) 
-    return false;
-  else
-    {
-      for (std::vector<Pos>::iterator i = path.begin(); i != path.end(); ++i)
-        {
-          if (i->x == x && i->y == y)
-            return true;
-        }
-      return false;
-    }
-}
-
-DijkstraPathfinder::Node&
-DijkstraPathfinder::resolve_parent(Node& node)
-{
-  if (node.parent == PARENT_NONE)
-    {
-      display();
-      assert(false);
-    }
-
-  switch(node.parent)
-    {
-    case PARENT_NORTH:
-      return node_field(node.x, node.y - 1);
-    case PARENT_SOUTH:
-      return node_field(node.x, node.y + 1);
-    case PARENT_EAST:
-      return node_field(node.x + 1, node.y);
-    case PARENT_WEST:
-      return node_field(node.x - 1, node.y);
-    default:
-      assert(!"resolve path error");
-    }
-  assert(!"resolve path error2");
-  return *(Node*)0;
-}
-
-void
-DijkstraPathfinder::construct_path()
-{
-  //std::cout << "Construct path" << std::endl;
-  // We construct the path reverse, so we start at the end
-  Node& current_node = node_field(end.x, end.y);
-
-  while(current_node.parent != PARENT_GOAL)
-    {
-      //std::cout << ">>> Node: " << current_node.x << " " << current_node.y << std::endl;
-
-      path.push_back(Pos(current_node.x, current_node.y));
-      current_node = resolve_parent(current_node);
-    }
-}
-
-#ifdef TESTME
-/*
-  .2msec for 256x256 grid
-*/
-int main()
-{
-  CL_SetupCore::init();
-
-  srand(time(NULL));
-  Field<int> field(80, 50);
-
-  unsigned int start_time = CL_System::get_time();
-  unsigned int end_time;
-
-  for(int y = 0; y < field.get_height(); ++y)
-    for(int x = 0; x < field.get_width(); ++x)
-      {
-        field(x,y) = (rand()%100) > 40 ? 0 : 1;
-      }
-
-  DijkstraPathfinder pathfinder(&field);
-
-  Pos start;
-  Pos end;
-
-  for(int count = 0; count < 1000; ++count)
-    {
-  start.x = rand()%field.get_width();
-  start.y = rand()%field.get_height();
-  
-  end.x = rand()%field.get_width();
-  end.y = rand()%field.get_height();
-
-      pathfinder.init(start, end);
-      //pathfinder.display();
-
-      //int i = 0;
-      //std::cout << "Start: " << start.x << " " << start.y << std::endl;
-      //std::cout << "End:   " << end.x << " " << end.y << std::endl;
-
-      while(!pathfinder.finished())
-        {
-          //for(int i = 0; i < 10 && !pathfinder.finished(); ++i)
-          pathfinder.process_one_open_node();
-
-          //getchar();
-        }
-      if (1)
-        {
-          std::cout << "c" << std::endl;
-          pathfinder.display();
-          getchar();
-        }
- 
-      //pathfinder.display();
-      
-      /*
-        if (pathfinder.get_state() != DijkstraPathfinder::PATH_FOUND)
-        {
-        std::cout << "No Path could be found" << std::endl;
-        }
-        else
-        {
-        std::cout << "Found path" << std::endl;
-        std::vector<Pos>& path = pathfinder.get_path();
-        for (std::vector<Pos>::iterator i = path.begin(); i != path.end(); ++i)
-        {
-        std::cout << "[" << i->x << ", " << i->y << "] ";
-        }       
-        std::cout << std::endl;
-        }
-      */
-
-      //      getchar();
-      //std::cout << "round: " << ++i << std::endl;
-    }
-  end_time = CL_System::get_time();
-  std::cout << "Msec: " << end_time - start_time << std::endl;
-
-  CL_SetupCore::deinit();
-}
-#endif
-
-// Local Variables:
-// compile-command: "g++-3.2 -DTESTME -g -Wall -O2 dijkstra_pathfinder.cxx  -o dijkstra_pathfinder -lclanCore"
-// End:
-
-/* EOF */

Copied: trunk/src/display/drawing_context.cpp (from rev 342, trunk/src/display/drawing_context.cxx)


Property changes on: trunk/src/display/drawing_context.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Deleted: trunk/src/display/drawing_context.cxx
===================================================================
--- trunk/src/display/drawing_context.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/display/drawing_context.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,220 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <assert.h>
-#include <ClanLib/Display/sprite.h>
-#include <ClanLib/Display/graphic_context.h>
-#include <iostream>
-#include "drawing_context.hxx"
-
-struct DrawingRequestsSorter
-{
-  bool operator()(DrawingRequest* a, DrawingRequest* b) {
-    return a->get_z_pos() < b->get_z_pos();
-  }
-};
-
-class FillScreenDrawingRequest : public DrawingRequest
-{
-private:
-  CL_Color color;
-public:
-  FillScreenDrawingRequest(const CL_Color& color_) 
-    : DrawingRequest(CL_Vector(0, 0, -1000.0f)), color(color_)
-  {
-  }
-  virtual ~FillScreenDrawingRequest() {}
-
-  void draw(CL_GraphicContext* gc) {
-    gc->clear(color);
-  }
-};
-
-class SpriteDrawingRequest : public DrawingRequest
-{
-private:
-  CL_Sprite sprite;
-
-public:
-  SpriteDrawingRequest(const CL_Sprite& sprite_, const CL_Vector& pos_)
-    : DrawingRequest(pos_),
-      sprite(sprite_)
-  {}
-  virtual ~SpriteDrawingRequest() {}
-
-  void draw(CL_GraphicContext* gc) {
-    sprite.draw(static_cast<int>(pos.x), static_cast<int>(pos.y), gc);
-  }
-};
-
-class TextDrawingRequest : public DrawingRequest
-{
-private:
-  std::string text;
-public:
-  TextDrawingRequest(const std::string& text_, const CL_Vector& pos_)
-    : DrawingRequest(pos_),
-      text(text_)
-  {}
-  virtual ~TextDrawingRequest() {}
-
-  void draw(CL_GraphicContext* gc) {
-    // FIXME: not implemented
-  }
-};
-
-DrawingContext::DrawingContext()
-{
-  translate_stack.push_back(CL_Pointf(0, 0));
-}
-
-void
-DrawingContext::render(CL_GraphicContext* gc)
-{
-  std::stable_sort(drawingrequests.begin(), drawingrequests.end(), DrawingRequestsSorter());
-  
-  for(DrawingRequests::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
-    {
-      (*i)->draw(gc);
-    }
-}
-
-void
-DrawingContext::clear()
-{
-  for(DrawingRequests::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
-    {
-      delete *i;
-    }
-  drawingrequests.clear();
-}
-
-void
-DrawingContext::draw(DrawingRequest* request)
-{
-  drawingrequests.push_back(request);
-}
-
-void
-DrawingContext::draw(const CL_Sprite&   sprite,  float x, float y, float z)
-{ // FIXME: This should get flattend down to a simple texture draw
-  // command for easier sorting after texture-id/alpha
-  draw(new SpriteDrawingRequest(sprite, CL_Vector(translate_stack.back().x + x,
-                                                  translate_stack.back().y + y,
-                                                  z)));
-}
-
-void
-DrawingContext::draw(const std::string& text,    float x, float y, float z)
-{ 
-  draw(new TextDrawingRequest(text, CL_Vector(x, y, z)));
-}
-
-void
-DrawingContext::draw_line (float x1, float y1, float x2, float y2, 
-                           const CL_Color& color)
-{
-}
-
-void
-DrawingContext::draw_fillrect (float x1, float y1, float x2, float y2, 
-		      const CL_Color& color)
-{
-}
-
-void
-DrawingContext::draw_rect (float x1, float y1, float x2, float y2, 
-		  const CL_Color& color)
-{
-}
-
-void
-DrawingContext::draw_pixel (float x_pos, float y_pos, 
-		   const CL_Color& color)
-{
-}
-
-void
-DrawingContext::draw_circle (float x_pos, float y_pos, float radius,
-                             const CL_Color& color)
-{
-}
-
-/** Draws an arc, starting from angle_start to angle_end in
-      counterclockwise direction. Angles are taken in radian */
-void
-DrawingContext::draw_arc (float x_pos, float y_pos, float radius, float angle_start, float angle_end,
-                          const CL_Color& color)
-{
-}
-
-void
-DrawingContext::fill_screen(const CL_Color& color)
-{
-  draw(new FillScreenDrawingRequest(color));
-}
-
-void
-DrawingContext::rotate(float angel)
-{
-  // FIXME: not implemented
-}
-
-void
-DrawingContext::scale(float x, float y)
-{
-  // FIXME: not implemented
-}
-
-void
-DrawingContext::translate(float x, float y)
-{
-  translate_stack.back().x += x;
-  translate_stack.back().y += y;
-}
-
-void
-DrawingContext::push_modelview()
-{
-  translate_stack.push_back(translate_stack.back());
-}
-
-void
-DrawingContext::pop_modelview()
-{
-  translate_stack.pop_back();
-  assert(!translate_stack.empty());
-}
-
-void
-DrawingContext::reset_modelview()
-{
-  translate_stack.clear();
-  translate_stack.push_back(CL_Pointf(0, 0));
-}
-
-CL_Rect
-DrawingContext::get_clip_rect()
-{
-  return CL_Rect(CL_Point(static_cast<int>(translate_stack.back().x),
-                          static_cast<int>(translate_stack.back().y)),
-                 CL_Size(800, 600));
-}
-
-/* EOF */

Copied: trunk/src/display/scene_context.cpp (from rev 342, trunk/src/display/scene_context.cxx)


Property changes on: trunk/src/display/scene_context.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Deleted: trunk/src/display/scene_context.cxx
===================================================================
--- trunk/src/display/scene_context.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/display/scene_context.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,149 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/display.h>
-#include <ClanLib/gl.h>
-#include "scene_context.hxx"
-
-class SceneContextImpl
-{
-public:
-  DrawingContext color;
-  DrawingContext light;
-  DrawingContext highlight; 
-
-  CL_OpenGLSurface lightmap;
-  CL_Canvas        canvas;
-
-  SceneContextImpl() 
-    : lightmap(CL_PixelBuffer(200, 
-                              150,
-                              200*4, CL_PixelFormat::rgba8888)),
-      canvas(lightmap)
-  {
-    canvas.get_gc()->set_scale(0.25, 0.25);
-  }
-};
-
-SceneContext::SceneContext()
-{
-  impl = new SceneContextImpl();
-}
-
-SceneContext::~SceneContext()
-{
-  delete impl;
-}
-
-DrawingContext&
-SceneContext::color()
-{
-  return impl->color; 
-}
-
-DrawingContext&
-SceneContext::light()
-{ 
-  return impl->light; 
-}
-
-DrawingContext&
-SceneContext::highlight()
-{ 
-  return impl->highlight; 
-}
-
-
-/** Translate the drawing context */
-void
-SceneContext::translate(float x, float y)
-{
-  impl->color.translate(x, y);
-  impl->light.translate(x, y);
-  impl->highlight.translate(x, y);
-}
-
-/** Set the rotation of the drawing context */
-void
-SceneContext::rotate(float angel)
-{
-  impl->color.rotate(angel);
-  impl->light.rotate(angel);
-  impl->highlight.rotate(angel);
-}
-
-/** Set the scaling of the drawing context */
-void
-SceneContext::scale(float x, float y)
-{
-  impl->color.scale(x, y);
-  impl->light.scale(x, y);
-  impl->highlight.scale(x, y);
-}
-
-void
-SceneContext::push_modelview()
-{
-  impl->color.push_modelview();
-  impl->light.push_modelview();
-  impl->highlight.push_modelview();
-}
-
-void
-SceneContext::pop_modelview()
-{
-  impl->color.pop_modelview();
-  impl->light.pop_modelview();
-  impl->highlight.pop_modelview();
-}
-
-void
-SceneContext::reset_modelview()
-{
-  impl->color.reset_modelview();
-  impl->light.reset_modelview();
-  impl->highlight.reset_modelview();
-}
-
-void
-SceneContext::render()
-{
-  // Render all buffers
-  // FIXME: Render all to pbuffer for later combining of them
-  impl->color.render(0);
-  
-  impl->light.render(impl->canvas.get_gc());
-  impl->canvas.sync_surface();
-
-  //impl->lightmap.set_blend_func(blend_src_alpha, blend_one);
-  impl->lightmap.set_blend_func(blend_dest_color, blend_zero);
-  //GL_DST_COLOR, GL_ZERO
-  impl->lightmap.set_scale(4.0f, 4.0f);
-  impl->lightmap.draw();
-  impl->canvas.get_gc()->clear();
-
-  impl->highlight.render(0);
-
-  // Clear all DrawingContexts
-  impl->color.clear();
-  impl->light.clear();
-  impl->highlight.clear();
-}
-
-/* EOF */

Copied: trunk/src/display_manager.cpp (from rev 341, trunk/src/display_manager.cxx)


Property changes on: trunk/src/display_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/display_manager.cxx
===================================================================
--- trunk/src/display_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/display_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,151 +0,0 @@
-//  $Id: display_manager.cxx,v 1.6 2003/10/31 23:24:41 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/display.h>
-#include "assert.hxx"
-#include "help.hxx"
-#include "radar.hxx"
-#include "menu.hxx"
-#include "level_map.hxx"
-#include "vehicle_status.hxx"
-#include "message_buffer.hxx"
-#include "communication_dialog.hxx"
-#include "display_manager.hxx"
-
-extern Player*  player;
-DisplayManager* DisplayManager::current_ = 0;
-
-void
-DisplayManager::init()
-{
-  AssertMsg(current_ == 0, "DisplayManager already initialized, this must not be done more than once!");
-  current_ = new DisplayManager();
-}
-
-void
-DisplayManager::deinit()
-{
-  delete current_;
-}
-
-DisplayManager::DisplayManager()
-{
-  level_map = new LevelMap();
-
-  screen.add(message_buffer = new MessageBuffer(CL_Display::get_width()/2, CL_Display::get_height() - 30));
-  help = new Help();
-  screen.add(radar = new Radar(FloatVector2d(64, 64), player));
-  screen.add(new CommunicationDialog());
-  screen.add(vehicle_status = new VehicleStatus());
-}
-
-DisplayManager::~DisplayManager()
-{
-}
-
-void
-DisplayManager::add(GuiObj* obj)
-{
-  screen.add(obj);
-}
-
-void
-DisplayManager::update(float delta)
-{
-  screen.update(delta);
-}
-
-void
-DisplayManager::draw(CL_GraphicContext& gc)
-{
-  screen.draw(gc);
-}
-
-void
-DisplayManager::show_levelmap()
-{
-  screen.add(level_map);
-}
-
-void
-DisplayManager::hide_levelmap()
-{
-  screen.remove(level_map);
-}
-
-LevelMap*
-DisplayManager::get_levelmap()
-{
-  if (screen.has(level_map))
-    return level_map;
-  else
-    return 0;
-}
-
-void
-DisplayManager::show_help()
-{
-  screen.add(help);
-}
-
-void
-DisplayManager::hide_help()
-{
-  screen.remove(help);
-}
-
-void
-DisplayManager::push_menu(Menu* arg_menu)
-{
-  //hide_menu(); // Hide current menu
-  if (!menu.empty())
-    {
-      screen.remove(menu.back());
-    }
-
-  menu.push_back(arg_menu);
-  screen.add(arg_menu);
-}
-
-void
-DisplayManager::pop_menu()
-{
-  if (!menu.empty())
-    {
-      screen.remove(menu.back()); 
-      menu.pop_back();
-      if (!menu.empty())
-        {
-          screen.add(menu.back());
-        }
-    }
-}
-  
-void
-DisplayManager::hide_menu()
-{
-  if (!menu.empty())
-    {
-      for (Menus::iterator i = menu.begin(); i != menu.end(); ++i)
-        screen.remove(*i);
-      menu.clear();
-    }
-}
-
-/* EOF */

Copied: trunk/src/draw_circle.cpp (from rev 341, trunk/src/draw_circle.cxx)


Property changes on: trunk/src/draw_circle.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/draw_circle.cxx
===================================================================
--- trunk/src/draw_circle.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/draw_circle.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,54 +0,0 @@
-//  $Id: draw_circle.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "draw_circle.hxx"
-
-int main()
-{
-  Field<int> field(50, 50);
-  srand(time(NULL));
-  //draw_circle(field, 20, 20, 12);
-  draw_fill_circle(field, 20, 20, 12);
-  //draw_fill_circle(field, 30, 30, 6);
-
-  for(int count = 0; count < 40; ++count)
-    draw_fill_circle(field, (rand()%29)+10, (rand()%29)+10, rand()%9);
-
-  //draw_fill_circle(field, 20, 20, 0);
-  //draw_fill_circle(field, 20, 20, 2);
-
-  for(int y = 0; y < field.get_height(); ++y)
-    {
-      for(int x = 0; x < field.get_width(); ++x)
-        {
-          if (field(x,y) == 0)
-            std::cout << " .";
-          else 
-            std::cout << " " << field(x,y);
-        }
-      std::cout << std::endl;
-    }
-}
-
-// Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 draw_circle.cxx  -o draw_circle -lclanCore"
-// End:
-
-/* EOF */

Copied: trunk/src/editor/editor.cpp (from rev 341, trunk/src/editor/editor.cxx)


Property changes on: trunk/src/editor/editor.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/editor/editor.cxx
===================================================================
--- trunk/src/editor/editor.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/editor/editor.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,24 +0,0 @@
-//  $Id: editor.cxx,v 1.1 2003/06/20 20:54:23 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "editor.hxx"
-
-
-
-/* EOF */

Copied: trunk/src/energie.cpp (from rev 341, trunk/src/energie.cxx)


Property changes on: trunk/src/energie.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/energie.cxx
===================================================================
--- trunk/src/energie.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/energie.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,79 +0,0 @@
-//  $Id: energie.cxx,v 1.8 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "color.hxx"
-#include "view.hxx"
-#include "energie.hxx"
-
-Energie::Energie ()
-{
-  max_energie = 100.0f;
-  energie = max_energie;
-  last_change = 0;
-}
-
-void
-Energie::set_max_energie(float arg_max_energie)
-{
-  max_energie = arg_max_energie;
-  energie = max_energie;
-}
-
-Energie::Energie (int arg_energie) :
-  max_energie (arg_energie),
-  energie (arg_energie),
-  last_change (0)
-{
-  
-}
-
-void
-Energie::draw (View& view, int x_pos, int y_pos)
-{
-  int time_diff = CL_System::get_time () - last_change ;
-
-  float ratio = energie / max_energie;
-  
-  if (ratio < 0)
-    ratio = 0;
-
-  //  std::cout << "Ratio: " << ratio << std::endl;
-
-  if (time_diff < 1000
-      && CL_System::get_time () > 2000)
-    {
-      // Black border rectangle
-      view.get_sc().color().draw_fillrect(x_pos - 32, y_pos - 5,
-                                  x_pos + 32, y_pos + 5,
-                                  CL_Color(CL_Colorf(0.0f, 0.0f, 0.0f,
-                                                     (1000.0f - float(time_diff))/1000.0f * 0.8f)));
-      
-      // Energie bar
-      view.get_sc().color().draw_fillrect(x_pos - 30, y_pos - 3,
-                                  x_pos - 30 + (ratio * 60),
-                                  y_pos + 3,
-                                  CL_Color(CL_Colorf(1.0f - energie/float(max_energie),
-                                                     ratio,
-                                                     0.0f, 
-                                                     (1000.0f - float(time_diff)) / 1000.0f * 0.9f)));
-      //std::cout << "Alpha: " << float(time_diff) / 500.0 << std::endl;
-    }
-}
-
-/* EOF */

Copied: trunk/src/explosion.cpp (from rev 341, trunk/src/explosion.cxx)


Property changes on: trunk/src/explosion.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/explosion.cxx
===================================================================
--- trunk/src/explosion.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/explosion.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,122 +0,0 @@
-//  $Id: explosion.cxx,v 1.10 2003/06/06 09:49:00 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "shockwave.hxx"
-#include "explosion.hxx"
-#include "generic/random.hxx"
-#include "sound/sound.hxx"
-#include "particles/explosion_particle.hxx"
-
-Explosion::Explosion (const FloatVector2d& arg_pos, Size arg_size) 
-  : is_drawn (false),
-    pos (arg_pos),
-    en_size (arg_size)
-{
-  new_particle_time = 0.0f;
-
-  switch (en_size)
-    {
-    case SMALL:
-      lifetime = .5;
-      size = .6;
-      break;
-    case MEDIUM:
-      lifetime = .5;
-      size = 1.0f;
-      break;
-    case LARGE:
-      lifetime = 25;
-      GameWorld::current()->add(new Shockwave(pos));
-      size = 2;
-      PingusSound::play_sound("explosion");
-      break;
-    }
-
-  lifetime = .5f;
-
-  new_particle_time = 1.0f;
-
-};
-
-void 
-Explosion::draw (View& view) 
-{
-}
-  
-void 
-Explosion::update (float delta) 
-{
-  lifetime -= delta;
-
-  new_particle_time += delta;
-  
-  if (new_particle_time > 0.200)
-    {
-      for (int i = 0; i < 4; ++i)
-	{     
-	  switch (en_size)
-	    {
-	    case LARGE:
-	      GameWorld::current()->add (new ExplosionParticle(FloatVector2d (pos.x + (rand()%40 - 20), 
-                                                                          pos.y + (rand()%40 - 20)),
-                                                               FloatVector2d (rand ()%20 - 10, rand ()%20 - 10), 
-                                                               Random::frand(size) + 1.0)); 
-	      GameWorld::current()->add (new ExplosionParticle(FloatVector2d (pos.x + (rand()%40 - 20), 
-                                                                          pos.y + (rand()%40 - 20)),
-                                                               FloatVector2d (rand ()%20 - 10, rand ()%20 - 10), 
-                                                               Random::frand(size) + 1.0)); 
-	      break;
-
-            case MEDIUM:
-              GameWorld::current()->add (new ExplosionParticle(FloatVector2d (pos.x + (rand()%10 - 5), 
-                                                                          pos.y + (rand()%10 - 5)),
-                                                               FloatVector2d (rand ()%20 - 10, rand ()%20 - 10), 
-                                                               Random::frand(size) + .5)); 
-              break;
-
-	    default:
-              GameWorld::current()->add (new ExplosionParticle(FloatVector2d (pos.x + (rand()%10 - 5), 
-                                                                          pos.y + (rand()%10 - 5)),
-                                                               FloatVector2d (rand ()%20 - 10, rand ()%20 - 10), 
-                                                               Random::frand(size) + .01)); 
-	      break;
-	    }
-	  lifetime = 0;
-	}
-      
-      new_particle_time = 0;
-    }
-}
-
-bool 
-Explosion::removable () 
-{
-  //std::cout << "Lifetime: " << lifetime << std::endl;
-
-  return lifetime <= 0;
-}
-
-float 
-Explosion::get_z_pos () 
-{
-  return 115; 
-}
-
-
-/* EOF */

Copied: trunk/src/feuerkraft.cpp (from rev 341, trunk/src/feuerkraft.cxx)


Property changes on: trunk/src/feuerkraft.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/feuerkraft.cxx
===================================================================
--- trunk/src/feuerkraft.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/feuerkraft.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,221 +0,0 @@
-//  $Id: feuerkraft.cxx,v 1.55 2003/10/31 23:24:41 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <config.h>
-#include <iostream>
-#include <ClanLib/gl.h>
-#include <ClanLib/Display/setupdisplay.h>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/keyboard.h>
-#include <ClanLib/Display/Providers/provider_factory.h>
-#include <ClanLib/Display/keys.h>
-#include <ClanLib/GL/setupgl.h>
-#include <ClanLib/core.h>
-#include <libguile.h>
-#include <time.h>
-
-#include "feuerkraft_error.hxx"
-#include "fonts.hxx"
-#include "input/input_manager.hxx"
-#include "game_session_manager.hxx"
-#include "keyboard_manager.hxx"
-#include "resource_manager.hxx"
-#include "path_manager.hxx"
-#include "globals.hxx"
-#include "sound/sound.hxx"
-#include "command_line_arguments.hxx"
-#include "guile.hxx"
-#include "feuerkraft.hxx"
-
-//#define WITH_STATIC_READLINE 1
-
-#ifdef WITH_STATIC_READLINE
-extern "C" void scm_init_readline();
-#endif
-extern "C" void SWIG_init(void);
-          
-
-// Global Instance of the main class
-Feuerkraft feuerkraft;
-CommandLineArguments* args;
-
-Feuerkraft::Feuerkraft()
-{
-  args = 0;
-}
-
-Feuerkraft::~Feuerkraft()
-{
-  delete args;
-}
-
-void 
-Feuerkraft::init()
-{
-  // Init Guile
-  scm_init_guile ();
-  Guile::enable_debug();
-  Guile::enable_readline();
-
-  // Init Swig
-  SWIG_init();
-
-  // Init ClanLib
-  CL_SetupCore::init();
-  CL_SetupDisplay::init();
-  CL_SetupGL::init();
-
-  // Init Sound Subsystem
-  music_enabled = args->music_enabled;
-  sound_enabled = args->sound_enabled;
-  PingusSound::init();
-
-  // Init pseudo random number generator
-  srand (time (0));
-
-  // Find the location of Feuerkrafts data files (images, sounds, etc.) 
-  if (!args->datadir.empty())
-    {
-    }
-  else
-    {
-      path_manager.add_path(CL_System::get_exe_path() + "../data");
-      path_manager.add_path("../data");
-      path_manager.add_path("data");
-      path_manager.add_path("share/games/feuerkraft");
-      path_manager.add_path("../share/games/feuerkraft");
-      path_manager.find_path("feuerkraft.xml");     
-    }
-
-  // Create the main window
-  window = new CL_DisplayWindow(PACKAGE_STRING,
-                                args->screen_width, args->screen_height, 
-                                args->fullscreen);
-  CL_Display::set_current_window (window);
-  CL_Display::clear();
-
-  resources = new ResourceManager ();
-  Fonts::init();
-
-  KeyboardManager::instance();
-
-  if (args->playback_file.empty())
-    {
-      if (args->controller_file.empty())
-        {
-          InputManager::init(path_manager.complete("controller/keyboard.scm"));
-        }
-      else
-        {
-          InputManager::init(args->controller_file);
-        }
-    }
-  else
-    {
-      InputManager::init_playback(args->playback_file);
-    }
-
-  if (!args->event_record_file.empty())
-    InputManager::setup_recorder(args->event_record_file);
-}
-
-void 
-Feuerkraft::deinit()
-{
-  Fonts::deinit();
-  PingusSound::deinit();
-
-  delete window;
-
-  CL_SetupGL::deinit();
-  CL_SetupDisplay::deinit();
-  CL_SetupCore::deinit();
-}
-	
-int
-Feuerkraft::main(int argc, char** argv)
-{
-  // Create a console window for text-output if not available
-  CL_ConsoleWindow console("Console");
-  console.redirect_stdio();
-  
-  try
-    {
-      // Make arguments accessible for all member functions
-      args = new CommandLineArguments(argc, argv);
-
-      // Init all subsystems
-      init();
-      
-      if (args->mission_file.empty())
-        args->mission_file = path_manager.complete("missions/airport.feu");
-
-      CL_Slot slot = CL_Keyboard::sig_key_down().connect(this, &Feuerkraft::key_down);
-
-      GameSessionManager::instance()->load(args->mission_file);
-      GameSessionManager::instance()->run();
-
-      // Shutdown everything
-      deinit();
-    }
-  catch (CL_Error& err)
-    {
-      std::cout << "CL_Error: " << err.message.c_str() << std::endl;
-    }
-  catch (FeuerkraftError& err)
-    {
-      std::cout << "FeuerkraftError: " << err.what() << std::endl;
-    }
-  catch (std::exception& err)
-    {
-      std::cout << "Error: " << err.what() << std::endl;
-    }
-  catch (...)
-    {
-      std::cout << "Bug: Unknown exception catched, don't know what to do" << std::endl;
-    }
-
-  // Display console close message and wait for a key
-  console.display_close_message();
-
-  return 0;
-}
-
-void
-Feuerkraft::key_down(const CL_InputEvent& event)
-{
-  if (event.id == CL_KEY_F12)
-    {
-      std::string filename = "screenshot.jpg";
-      std::cout << "Saving screenshot to: " << filename << std::endl;
-      CL_ProviderFactory::save(CL_Display::get_front_buffer(),
-                               filename);
-    } 
-  else if (event.id == CL_KEY_F11)
-    {
-      if (CL_Display::is_fullscreen())
-        CL_Display::set_windowed();
-      else
-        CL_Display::set_fullscreen(CL_Display::get_width(),
-                                   CL_Display::get_height(),
-                                   32);
-    }
-}
-
-// EOF //

Copied: trunk/src/fonts.cpp (from rev 341, trunk/src/fonts.cxx)


Property changes on: trunk/src/fonts.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/fonts.cxx
===================================================================
--- trunk/src/fonts.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/fonts.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,38 +0,0 @@
-//  $Id: fonts.cxx,v 1.3 2003/06/05 21:17:11 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "resource_manager.hxx"
-#include "fonts.hxx"
-
-namespace Fonts {
-
-CL_Font font;
-
-void init()
-{
-  font = resources->get_font("font");
-}
-
-void deinit(){
-  // nothing to do
-}
-
-} // namespace Fonts
-
-/* EOF */

Copied: trunk/src/game_delta.cpp (from rev 341, trunk/src/game_delta.cxx)


Property changes on: trunk/src/game_delta.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_delta.cxx
===================================================================
--- trunk/src/game_delta.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_delta.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,28 +0,0 @@
-//  $Id: game_delta.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "game_delta.hxx"
-
-float 
-GameDelta::get_time ()
-{
-  return time_delta; 
-}
-
-/* EOF */

Copied: trunk/src/game_mission.cpp (from rev 341, trunk/src/game_mission.cxx)


Property changes on: trunk/src/game_mission.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_mission.cxx
===================================================================
--- trunk/src/game_mission.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_mission.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,84 +0,0 @@
-//  $Id: game_mission.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <guile/gh.h>
-#include <iostream>
-#include "guile.hxx"
-#include "game_mission.hxx"
-#include "game_world.hxx"
-
-GameMission::GameMission (SCM desc)
-  : creation_time (0),
-    world (0)    
-{
-  if (SCM_NULLP(desc))
-    {
-      std::cout << "GameMission: SCM contains no data" << std::endl;
-      // FIXME: Error handling
-    }
-
-  SCM symbol = SCM_CAAR(desc);
- 
-  if (Guile::equal_p(scm_str2symbol("feuerkraft-mission"), symbol))
-    {
-      std::cout << "GameMission: SCM is mission data" << std::endl;
-    }
-  else
-    {
-      std::cout << "GameMission: SCM is not mission-data" << std::endl;
-      // FIXME: Error handling
-    }
-  
-  desc = SCM_CDR(desc);
-
-  while (!SCM_NULLP(desc))
-    {
-      // Current line
-      SCM symbol = SCM_CAAR(desc);
-      SCM data   = SCM_CDAR(desc);
-
-      if (Guile::equal_p(scm_str2symbol("author-name"), symbol))
-	{
-	  author_name = Guile::scm2string(SCM_CADR(data));
-	}
-      else if (Guile::equal_p(scm_str2symbol("author-email"), symbol))
-	{
-	  author_email = Guile::scm2string(SCM_CADR(data));
-	}
-      else if (Guile::equal_p(scm_str2symbol("creation-time"), symbol))
-	{
-	  creation_time = gh_scm2int(SCM_CADR(data));
-	}
-      else if (Guile::equal_p(scm_str2symbol("world"), symbol))
-	{
-	  
-	}
-      
-      // Goto next line
-      desc = SCM_CDR(desc);
-    }
-}
-
-GameMission::~GameMission ()
-{
-  delete world;
-}
-
-
-/* EOF */

Copied: trunk/src/game_obj.cpp (from rev 341, trunk/src/game_obj.cxx)


Property changes on: trunk/src/game_obj.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_obj.cxx
===================================================================
--- trunk/src/game_obj.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_obj.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,52 +0,0 @@
-//  $Id: game_obj.cxx,v 1.6 2003/06/18 13:03:13 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "property_set.hxx"
-#include "game_obj.hxx"
-
-GameObj::GameObj()
-  : id(-1),
-    hidden(false),
-    remove_me (false)
-{
-  properties = new PropertySet();
-  properties->register_int("id", &id);
-  properties->register_bool("remove-me", &remove_me);
-  properties->register_bool("hidden", &hidden);
-}
-
-GameObj::~GameObj()
-{
-  delete properties;
-}
-
-void
-GameObj::on_collision(GameObj* obj)
-{
-  std::cout << "GameObj: collision from " << get_id() << " with: " << obj->get_id() << std::endl;
-}
-
-void
-GameObj::on_collision_with_building(Building* building)
-{
-  std::cout << "GameObj: collision with building: " << get_id() << std::endl;
-}
-
-/* EOF */

Copied: trunk/src/game_obj_data_factory.cpp (from rev 341, trunk/src/game_obj_data_factory.cxx)


Property changes on: trunk/src/game_obj_data_factory.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_obj_data_factory.cxx
===================================================================
--- trunk/src/game_obj_data_factory.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_obj_data_factory.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,46 +0,0 @@
-//  $Id: game_obj_data_factory.cxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <guile/gh.h>
-#include "guile.hxx"
-#include "game_obj_data_factory.hxx"
-
-GameObjData*
-GameObjDataFactory::create (SCM symbol, SCM data)
-{
-  /*
-  if (Guile::equal_p(scm_str2symbol("tree"), symbol))
-    {
-      return new TreeData (data);
-    }
-  else*/
-    if (Guile::equal_p(scm_str2symbol("tank"), symbol))
-    {
-      std::cout << "GameObjDataFactory::create: not implemented" << std::endl;
-    }
-  else
-    {
-      std::cout << "GameObjDataFactory: Unknown symbol: " << std::flush;
-      gh_display (symbol);
-      gh_newline ();
-    }
-  return 0;
-}
-
-/* EOF */

Copied: trunk/src/game_obj_factory.cpp (from rev 341, trunk/src/game_obj_factory.cxx)


Property changes on: trunk/src/game_obj_factory.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_obj_factory.cxx
===================================================================
--- trunk/src/game_obj_factory.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_obj_factory.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,132 +0,0 @@
-//  $Id: game_obj_factory.cxx,v 1.10 2003/06/22 17:22:47 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "property_set.hxx"
-
-// GameObjs
-#include "vehicles/tank.hxx"
-#include "vehicles/helicopter.hxx"
-#include "tree.hxx"
-#include "marker.hxx"
-#include "mine.hxx"
-#include "soldier.hxx"
-#include "satchel_charge.hxx"
-
-#include "game_obj.hxx"
-#include "game_obj_factory.hxx"
-
-GameObjFactory* GameObjFactory::instance_ = 0;
-
-GameObjFactory::GameObjFactory()
-{
-  // If anything is changed here, make sure to update
-  // data/feuerkraft.scm
-
-  // FIXME: Types should be named here, to not having update to files
-  register_factory("none",       0); // id=0 -> the empty factory
-  register_factory("tree",       new GameObjGenericFactory<Tree>());
-  register_factory("marker",     new GameObjGenericFactory<Marker>());
-  register_factory("mine",       new GameObjGenericFactory<Mine>());
-  register_factory("satchel",    new GameObjGenericFactory<SatchelCharge>());
-  register_factory("soldier",    new GameObjGenericFactory<Soldier>());
-  register_factory("tank",       new GameObjGenericFactory<Tank>());
-  register_factory("helicopter", new GameObjGenericFactory<Helicopter>());
-}
-
-GameObjFactory* 
-GameObjFactory::instance()
-{
-  if (instance_)
-    return instance_;
-  else
-    return (instance_ = new GameObjFactory());
-}
-
-GameObj*
-GameObjFactory::create(int type_id, const AList& alst)
-{
-  GameObj* obj = create_raw_object(type_id, alst);
-
-  if (obj)
-    {
-      // FIXME: All this should be no longer needed if objects get the AList
-      // as constructor
-#if 0      
-      PropertySet* props = obj->get_properties();
-
-      for (AList::const_iterator i = alst.begin(); i != alst.end(); ++i)
-        {
-          //std::cout << ">>># " << i->second.type << std::endl;
-          
-          switch(i->second.type)
-            {
-            case AList::AL_INT:
-              props->set_int(i->first, i->second.v_int);
-              break;
-            case AList::AL_FLOAT:
-              props->set_float(i->first, i->second.v_float);
-              break;
-            case AList::AL_STRING:
-              props->set_string(i->first, *i->second.v_string);
-              break;
-            case AList::AL_BOOL:
-              props->set_bool(i->first, i->second.v_bool);
-              break;
-            default:
-              std::cout << "GameObjFactory: Unhandled property" << std::endl;
-            }
-        }
-
-      obj->properties_updated();
-#endif
-    }
-
-  return obj;
-}
-
-GameObj* 
-GameObjFactory::create_raw_object(int type_id, const AList& lst)
-{
-  GameObjAbstractFactory* factory = get_factory(type_id);
-
-  if (factory)
-    return factory->create(lst);
-  else
-    return 0;
-}
-
-GameObjAbstractFactory*
-GameObjFactory::get_factory(int type_id)
-{
-  if (type_id >= 0 && type_id < int(factories.size()))
-    return factories[type_id];
-  else 
-    return 0;
-}
-
-int
-GameObjFactory::register_factory(const char* name, GameObjAbstractFactory* factory)
-{
-  int type_id = factories.size();
-  factories.push_back(factory);
-  return type_id;
-}
-
-/* EOF */

Copied: trunk/src/game_obj_manager.cpp (from rev 341, trunk/src/game_obj_manager.cxx)


Property changes on: trunk/src/game_obj_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_obj_manager.cxx
===================================================================
--- trunk/src/game_obj_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_obj_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,60 +0,0 @@
-//  $Id: game_obj_manager.cxx,v 1.4 2003/06/20 20:54:23 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "assert.hxx"
-#include "game_obj.hxx"
-#include "game_obj_manager.hxx"
-
-GameObjManager* GameObjManager::current_manager = 0;
-
-GameObjManager::GameObjManager(GameWorld* world)
-  : game_world(world)
-{
-  current_manager = this;
-  next_obj_id = 0;
-}
-
-int
-GameObjManager::add_object(GameObj* obj)
-{
-  AssertMsg(obj, "GameObjManager: No valid GameObj passed!");
-
-  game_objs.push_back(obj);
-  obj->set_id(next_obj_id);
-  return next_obj_id++;
-}
-
-void
-GameObjManager::remove_object(GameObj* obj)
-{
-  obj->remove();
-}
-
-GameObj*
-GameObjManager::get_object_by_id(int id)
-{
-  for (GameObjs::iterator i = game_objs.begin(); i != game_objs.end(); ++i)
-    {
-      if ((*i)->get_id() == id)
-        return *i;
-    }
-  return 0;
-}
-
-/* EOF */

Copied: trunk/src/game_session.cpp (from rev 341, trunk/src/game_session.cxx)


Property changes on: trunk/src/game_session.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_session.cxx
===================================================================
--- trunk/src/game_session.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_session.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,334 +0,0 @@
-//  $Id: game_session.cxx,v 1.6 2003/06/23 09:04:10 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Core/System/system.h>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
-#include <ClanLib/Display/mouse.h>
-#include <ClanLib/Display/keyboard.h>
-#include <ClanLib/Display/keys.h>
-#include <sstream>
-#include <iostream>
-#include <assert.h>
-
-#include "globals.hxx"
-#include "particles/explosion_particle.hxx"
-#include "menu.hxx"
-#include "groundmap/ground_map.hxx"
-#include "player_view.hxx"
-#include "input/input_manager.hxx"
-#include "soldier.hxx"
-#include "game_obj_factory.hxx"
-
-#include "vehicles/tank.hxx"
-#include "vehicles/helicopter.hxx"
-
-#include "background.hxx"
-#include "robot_tank.hxx"
-#include "view.hxx"
-#include "display_manager.hxx"
-#include "buildings/building_type_manager.hxx"
-#include "scripting/clanlib_commands.hxx"
-#include "scripting/menu_commands.hxx"
-#include "collision_manager.hxx"
-#include "sexpr_world_reader.hxx"
-#include "guile.hxx"
-#include "soldier_ai.hxx"
-#include "ai_manager.hxx"
-#include "ai_vehicle.hxx"
-#include "vehicle_ai.hxx"
-#include "output_world_builder.hxx"
-#include "game_world.hxx"
-#include "player.hxx"
-#include "path_manager.hxx"
-#include "command_line_arguments.hxx"
-#include "screenshot.hxx"
-#include "game_session.hxx"
-
-// FIXME: Replace this with a PlayerManager class or something similar
-Player*  player;
-
-GameSession::GameSession(const std::string& arg_filename)
-  : control_state(UNIT_CONTROL),
-    filename(arg_filename),
-    do_quit(false),
-    do_pause(false)
-{  
-}
-
-void
-GameSession::init()
-{
-  loops = 0;
-  deltas = 0.0;
-
-  start_time = CL_System::get_time ();
-  frames = 0;
-
-  collision_mgr       = new CollisionManager();
-  buildingtypemanager = new BuildingTypeManager();
-
-  // Load helper functions
-  // FIXME: These functions need a better place
-  scm_c_primitive_load(path_manager.complete("feuerkraft.scm").c_str());
-  scm_c_primitive_load(path_manager.complete("input.scm").c_str());
-  
-  // Deserialize the game world
-  {
-    std::cout << "<<<<<<<<<<<<< Parsing map <<<<<<<<<<<<<" << std::endl;
-    SCM fdes = scm_open_file (scm_makfrom0str(filename.c_str()), 
-                              scm_makfrom0str("r"));
-    SCM lst = scm_read (fdes);
-    scm_close (fdes);
-
-    // unstable Testing stuff
-    //OutputWorldBuilder builder;
-    //SexprWorldReader(lst, &builder).run();
-
-    // Now we create the real world
-    world = new GameWorld(lst);
-    std::cout << ">>>>>>>>>>>>> Parsing map >>>>>>>>>>>>>" << std::endl;
-  }
-  // End: Test of parsing code
-
-  // The all mighty soldier that the player controlls
-  Soldier* soldier = new Soldier(AList());
-  soldier->set_position(FloatVector2d (500, 1100));
-
-  {
-    Soldier* soldier = new Soldier(AList());
-    soldier->set_position(FloatVector2d (1400, 1500));
-    SoldierAI* ai = new SoldierAI(soldier);
-    world->add(soldier);
-    AIManager::instance()->add(ai);
-  }
-
-  {
-    Soldier* soldier = new Soldier(AList());
-    soldier->set_position(FloatVector2d (1300, 1600));
-    SoldierAI* ai = new SoldierAI(soldier);
-    world->add(soldier);
-    AIManager::instance()->add(ai);
-  }
-
-  world->add(new RobotTank(660, 1245, 0, 100.0f));
-  world->add(new Helicopter(AList()
-                            .set_float("x-pos", 600)
-                            .set_float("y-pos", 1245)
-                            .set_int("type", 0)));
-  world->add(new Helicopter(AList()
-                            .set_float("x-pos", 600)
-                            .set_float("y-pos", 1445)
-                            .set_int("type", 1)));
-  world->add(new Helicopter(AList()
-                            .set_float("x-pos", 660)
-                            .set_float("y-pos", 1645)
-                            .set_int("type", 2)));
-
-  world->add(new Tank(FloatVector2d (650, 1245), 5, "feuerkraft/tank", "feuerkraft/turret", "feuerkraft/fire2"));
-  world->add(new Tank(FloatVector2d (750, 1245), 5, "feuerkraft/tank", "feuerkraft/turret", "feuerkraft/fire2"));
-  world->add(new Tank(FloatVector2d (850, 1245), 5, "feuerkraft/tank", "feuerkraft/turret", "feuerkraft/fire2"));
-
-  {
-    Tank* tank = new Tank(FloatVector2d (450, 1245), 5, "feuerkraft/tank", "feuerkraft/turret", "feuerkraft/fire2");
-    world->add(tank);
-    AIManager::instance()->add(new VehicleRoboAI(tank));
-  }
-
-  {
-    Tank* tank = new Tank(FloatVector2d (0, 1245), 5, "feuerkraft/tank2", "feuerkraft/turret", "feuerkraft/fire2");
-    world->add(tank);
-    AIManager::instance()->add(new VehicleRoboAI(tank));
-  }
-
-  {
-    Tank* tank = new Tank(FloatVector2d (-100, 1245), 5, "feuerkraft/tank", "feuerkraft/turret2", "feuerkraft/fire2");
-    world->add(tank);
-    AIManager::instance()->add(new VehicleRoboAI(tank));
-  }
-
-  {
-    Tank* tank = new Tank(FloatVector2d (560, 1245), 5, "feuerkraft/tank2", "feuerkraft/turret2", "feuerkraft/fire2");
-    world->add(tank);
-    VehiclePathAI* ai = new VehiclePathAI(tank);
-
-    ai->drive_to(FloatVector2d(200, 200));
-    ai->drive_to(FloatVector2d(500, 200));
-    ai->drive_to(FloatVector2d(500, 500));
-    ai->drive_to(FloatVector2d(1500, 500));
-    ai->drive_to(FloatVector2d(1500, 300));
-
-    AIManager::instance()->add(ai);
-  }
-
-  world->add(new Background (resources->get_sprite("feuerkraft/sand"), -10.0f));
-  world->add(soldier);
-
-  player = new Player(soldier);
-  view   = new View(0, 0, CL_Display::get_width(), CL_Display::get_height(), new PlayerViewUpdater(player));
-  DisplayManager::init();
-}
-
-void 
-GameSession::update()
-{
-  int delta_wait = static_cast<int>(1000/args->fps);
-  float delta = delta_wait/1000.0f;;
-
-  deltas += delta;
-  ++loops;
-
-  if (CL_Keyboard::get_keycode(CL_KEY_D))
-    Guile::enter_repl();
-
-  unsigned int last_time = CL_System::get_time ();
-
-  // Update stuff
-  if (!do_pause)
-    {
-      collision_mgr->clear();
-      AIManager::instance()->update(delta);
-      world->update(delta);
-      collision_mgr->run();
-      view->update(delta);
-    }
-
-  GameWorld::current()->draw(*view);
-  GameWorld::current()->draw_energie(*view);
-  view->get_sc().render();
-  view->get_sc().light().fill_screen(CL_Color(50, 50, 100));
-
-  if (draw_colmap)
-    collision_mgr->draw(*view);
-
-  if (!do_pause)
-    DisplayManager::current()->update(delta);
-      
-  DisplayManager::current()->draw(*(CL_Display::get_current_window()->get_gc()));
-
-  if (CL_Mouse::get_keycode(CL_MOUSE_MIDDLE))
-    world->add(new ExplosionParticle(view->screen_to_world(FloatVector2d(CL_Mouse::get_x (),
-                                                                         CL_Mouse::get_y ())),
-                                     FloatVector2d(), 3.0f));
-
-  // Comment out for variable frame rate
-  int sleep_time = (last_time + delta_wait) - CL_System::get_time();
-  if (sleep_time > 0)
-    CL_System::sleep (sleep_time);
-
-  // Flip front and backbuffer. This makes the changes visible:
-  CL_Display::flip ();
-
-  if (!args->video_record_directory.empty())
-    {
-      std::stringstream filename;
-      filename << args->video_record_directory;
-      filename.width(8);
-      filename.fill('0');
-      filename << frames;
-      filename << ".ppm";
-      Screenshot::write_screenshot_pnm(filename.str());
-    }
-
-  ++frames;
-	    
-  // Update keyboard input and handle system events:
-  // Exits the loop if ClanLib requests shutdown - for instance if
-  // someone closes the window.
-  CL_System::keep_alive();
-  clanlib_call_post_keep_alive_func();
-  InputManager::update(delta);
-
-  InputEventLst lst = InputManager::get_controller().get_events();
-  for(InputEventLst::iterator i = lst.begin(); i != lst.end(); ++i)
-    {
-      if (i->type == BUTTON_EVENT)
-        {
-          if (i->button.name == MENU_BUTTON && i->button.is_down())
-            {
-              if (control_state == MENU_CONTROL)
-                {
-                  menu_hide();
-                  control_state = UNIT_CONTROL;
-                }
-              else 
-                {
-                  menu_show(0);
-                  control_state = MENU_CONTROL;
-                }
-            }
-          else if (i->button.name == USE_BUTTON && i->button.is_down())
-            {
-              // FIXME: Unclean hack
-              gh_call0(gh_lookup("join-nearest-vehicle"));
-            }
-        }
-    }
-
-  switch (control_state)
-    {
-    case MENU_CONTROL:
-      if (DisplayManager::current()->get_menu())
-        DisplayManager::current()->get_menu()->process_events(InputManager::get_controller().get_events());
-      else
-        {
-          std::cout << "Error: Menu not available, fallback to unit" << std::endl;
-          control_state = UNIT_CONTROL;
-        }
-      break;
-
-    case UNIT_CONTROL:
-      player->get_current_unit()->update_controlls(InputManager::get_controller());
-      break;
-      
-    default: 
-      std::cout << "Unknown ControlState, switching back to UNIT_CONTROL" << std::endl;
-      control_state = UNIT_CONTROL;
-      break;
-    }
-
-  InputManager::clear();
-}
-
-void
-GameSession::deinit()
-{
-  delete world;
-  delete buildingtypemanager;
-  delete collision_mgr;
-
-  DisplayManager::deinit();
-
-  std::cout << "Avarage delta: " << deltas/loops << std::endl;
-  std::cout << "Avarage fps:   " 
-            << float (frames) / (CL_System::get_time () - start_time) * 1000.0 << std::endl;
-}
-
-void
-GameSession::pause()
-{
-  do_pause = !do_pause;
-}
-
-void
-GameSession::save(const std::string& arg_filename)
-{
-}
-
-/* EOF */

Copied: trunk/src/game_session_manager.cpp (from rev 341, trunk/src/game_session_manager.cxx)


Property changes on: trunk/src/game_session_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_session_manager.cxx
===================================================================
--- trunk/src/game_session_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_session_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,103 +0,0 @@
-//  $Id: game_session_manager.cxx,v 1.1 2003/06/10 00:38:50 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "path_manager.hxx"
-#include "game_session.hxx"
-#include "game_session_manager.hxx"
-
-GameSessionManager* GameSessionManager::instance_ = 0;
-
-GameSessionManager* 
-GameSessionManager::instance()
-{
-  if (instance_)
-    return instance_;
-  else
-    return (instance_ = new GameSessionManager());
-}
-
-GameSessionManager::GameSessionManager()
-  : session_changed(false),
-    do_quit(false),
-    current_session(0),
-    new_session(0)
-{
-}
-
-GameSessionManager::~GameSessionManager()
-{
-  delete current_session;
-}
-
-void
-GameSessionManager::load(const std::string& filename)
-{
-  if (!current_session)
-    {
-      current_session = new GameSession(filename);
-    }
-  else
-    {
-      new_session     = new GameSession(path_manager.complete(filename));
-      session_changed = true;
-    }
-}
-
-void
-GameSessionManager::save(const std::string& filename)
-{
-  std::cout << "### Saving game to '" << filename << "' not implemented" << std::endl;
-  current_session->save(filename);
-}
-
-void
-GameSessionManager::run()
-{
-  while(!do_quit)
-    {
-      current_session->init();
-
-      while(!do_quit && !session_changed)
-        current_session->update();
-
-      current_session->deinit();
-
-      if (session_changed)
-        {
-          delete current_session;
-          current_session = new_session;
-          session_changed = false;
-        }
-    }
-}
-
-void
-GameSessionManager::pause()
-{
-  current_session->pause();
-}
-
-void
-GameSessionManager::quit()
-{
-  do_quit = true;
-}
-
-/* EOF */

Copied: trunk/src/game_world.cpp (from rev 341, trunk/src/game_world.cxx)


Property changes on: trunk/src/game_world.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_world.cxx
===================================================================
--- trunk/src/game_world.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_world.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,210 +0,0 @@
-//  $Id: game_world.cxx,v 1.20 2003/10/31 23:24:41 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <algorithm>
-#include <functional>
-
-#include "mine.hxx"
-#include "vehicles/tank.hxx"
-#include "projectile.hxx"
-#include "game_world.hxx"
-#include "groundmap/ground_map_data.hxx"
-#include "groundmap/ground_map.hxx"
-#include "game_obj.hxx"
-#include "math.hxx"
-#include "game_obj_data.hxx"
-#include "game_obj_manager.hxx"
-#include "view.hxx"
-#include "path_manager.hxx"
-#include "trigger_manager.hxx"
-#include "buildings/building_manager.hxx"
-#include "buildings/building_map.hxx"
-
-GameWorld* GameWorld::current_world = 0;
-
-GameWorld::GameWorld (SCM scm)
-  : GameWorldData (scm),
-    game_obj_manager(new GameObjManager(this)),
-    building_manager(new BuildingManager()),
-    trigger_manager (new TriggerManager()),
-    current_time(0.0f),
-    wind(40.0f, 30.0f)
-{
-  current_world = this;
-  
-  if (groundmap_data)
-    groundmap = groundmap_data->create ();//this);
-
-  if (buildingmap_data)
-    buildingmap = buildingmap_data->create();
-
-  if (!groundmap) 
-    {
-      std::cout << "GameWorld: No groundmap created, bailout" << std::endl;
-      assert(groundmap);
-    }
-  
-  if (!buildingmap)
-    {
-      std::cout << "GameWorld: No buildingmap created, bailout" << std::endl;
-      assert(buildingmap);
-    }
-
-  game_obj_manager->add_object(groundmap);
-  game_obj_manager->add_object(buildingmap);
-
-  for (std::vector<GameObjData*>::iterator i = gameobj_data.begin (); i != gameobj_data.end (); ++i)
-    {
-      game_obj_manager->add_object((*i)->create());
-    }
-  
-  // FIXME: a little hacky
-  //world_module = scm_c_define_module("feuerkraft game-world", 0, 0);
-  //last_module  = scm_set_current_module(world_module);
-
-  // Load scripts
-  for(std::vector<std::string>::iterator i = scripts.begin(); i != scripts.end(); ++i)
-    {
-      std::cout << "### Loading Script: " << *i << std::endl;
-      scm_c_primitive_load((path_manager.complete("missions/" + *i)).c_str());
-      std::cout << "### DONE: Loading Script: " << *i << std::endl;
-    }
-}
-
-GameWorld::~GameWorld ()
-{
-  delete game_obj_manager;
-  delete building_manager;
-  delete trigger_manager;
-  // FIXME: Memory Leak, we should clear the gameobj list here
-
-  // Restore module FIXME: a little hacky
-  //scm_set_current_module(last_module);
-}
-
-void 
-GameWorld::add (GameObj* obj)
-{
-  game_obj_manager->add_object(obj);
-}
-
-void 
-GameWorld::add_front (GameObj* obj)
-{
-  // FIXME: no go...
-  game_obj_manager->add_object(obj);
-}
-
-struct z_pos_sorter
-{
-  bool operator() (GameObj* a, GameObj* b)
-  {
-    return a->get_z_pos () < b->get_z_pos ();
-  }
-};
-
-void 
-GameWorld::draw (View& view)
-{
-  game_obj_manager->get_objects().sort (z_pos_sorter ());
-
-  GameObjManager* objs = game_obj_manager;
-  for (GameObjManager::iterator i = objs->begin(); i != objs->end(); ++i)
-    {
-      if (!(*i)->is_hidden())
-        (*i)->draw (view);
-    }
-}
-
-void 
-GameWorld::draw_energie (View& view)
-{
-  GameObjManager* objs = game_obj_manager;
-  for (GameObjManager::iterator i = objs->begin(); i != objs->end(); ++i)
-    {
-      if (!(*i)->is_hidden())
-        (*i)->draw_energie (view);
-    }
-}
-
-void
-GameWorld::draw_levelmap (LevelMap& levelmap)
-{
-  //groundmap->draw_levelmap (levelmap);
-
-  GameObjManager* objs = game_obj_manager;
-  for (GameObjManager::iterator i = objs->begin(); i != objs->end(); ++i)
-    {
-      if (!(*i)->is_hidden())
-        (*i)->draw_levelmap(levelmap);
-    }
-}
-
-struct is_removable
-{
-  bool operator() (GameObj* obj)
-  {
-    return obj->removable ();
-  }
-};
-
-void 
-GameWorld::update(float delta)
-{
-  current_time += delta;
-
-  //wind = FloatVector2d(40.0f).rotate((Math::frand()-.5f) * 5.0f * delta);
-
-  trigger_manager->update(delta);
-
-  game_obj_manager->get_objects().remove_if(is_removable ()); 
-
-  GameObjManager* objs = game_obj_manager;
-  for (GameObjManager::iterator i = objs->begin(); i != objs->end(); ++i)
-    if (!(*i)->is_hidden())
-      (*i)->update (delta);
-}
-
-BuildingMap*
-GameWorld::get_buildingmap ()
-{
-  // FIXME: This is a ugly ugly hack...
-  return dynamic_cast<BuildingMap*>(buildingmap);
-}
-
-GroundMap*
-GameWorld::get_groundmap ()
-{
-  return groundmap;
-}
-
-GameObjManager*
-GameWorld::get_game_obj_manager()
-{
-  return game_obj_manager;
-}
-
-FloatVector2d
-GameWorld::get_wind() const
-{
-  return wind;
-}
-
-/* EOF */

Copied: trunk/src/game_world_builder.cpp (from rev 341, trunk/src/game_world_builder.cxx)


Property changes on: trunk/src/game_world_builder.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_world_builder.cxx
===================================================================
--- trunk/src/game_world_builder.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_world_builder.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,80 +0,0 @@
-//  $Id: game_world_builder.cxx,v 1.3 2003/06/22 21:51:21 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "game_world.hxx"
-#include "game_world_builder.hxx"
-
-GameWorldBuilder::GameWorldBuilder()
-{
-  // The allocated GameWorld class is freeded by the caller of get_world()
-  //world = new GameWorld();
-}
-
-GameWorldBuilder::~GameWorldBuilder()
-{
-  // Delete the world if get_world() wasn't called
-  delete world;
-}
-
-void
-GameWorldBuilder::add_object (const std::string& type, const AList&)
-{
-  
-}
-
-void
-GameWorldBuilder::add_brush(const std::string& resname, const AList&)
-{
-  
-}
-
-void
-GameWorldBuilder::add_building(const std::string& type, const AList&)
-{
-  
-}
-
-void
-GameWorldBuilder::add_groundmap(const std::string& type, const AList&)
-{
-  
-}
-
-void
-GameWorldBuilder::add_script(const std::string& resname)
-{
-  std::cout << "### Loading Script: " << resname << std::endl;
-  scm_c_primitive_load(resname.c_str());
-  std::cout << "### DONE: Loading Script: " << resname << std::endl;
-}
-
-GameWorld*
-GameWorldBuilder::get_world() 
-{
-  GameWorld* the_world = world;
-
-  // remove our world handle, so that we don't delete world
-  // in the destructor
-  world = 0; 
-
-  return the_world; 
-}
-
-/* EOF */

Copied: trunk/src/game_world_data.cpp (from rev 341, trunk/src/game_world_data.cxx)


Property changes on: trunk/src/game_world_data.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/game_world_data.cxx
===================================================================
--- trunk/src/game_world_data.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/game_world_data.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,173 +0,0 @@
-//  $Id: game_world_data.cxx,v 1.7 2003/08/20 00:15:10 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <typeinfo>
-#include <assert.h>
-#include <iostream>
-#include "guile.hxx"
-#include "game_world.hxx"
-#include "buildings/building_map_data.hxx"
-#include "groundmap/ground_map_data.hxx"
-#include "game_obj_data.hxx"
-#include "groundmap/ground_map_data_factory.hxx"
-#include "game_obj_data_factory.hxx"
-#include "game_world_data.hxx"
-
-GameWorldData::GameWorldData (SCM desc)
-  : needs_delete (true)
-{
-  assert(gh_pair_p(desc));
-
-  if (gh_equal_p (gh_symbol2scm ("feuerkraft-scenario"), gh_car(desc)))
-    desc = gh_cdr(desc);
-  else
-    {
-      std::cout << "File is not a feuerkraft scenario" << std::endl;
-      assert(false);
-    }
-
-  while (gh_pair_p(desc))
-    {
-      if (gh_pair_p (gh_car (desc)))
-	{
-	  SCM symbol = gh_caar(desc);
-	  SCM data   = gh_cdar(desc);   
-
-	  if (gh_symbol_p (symbol))
-	    {
-	      if (gh_equal_p (gh_symbol2scm ("groundmap"), symbol))
-		{
-		  groundmap_data = GroundMapDataFactory::create (data);
-		}
-	      else if (gh_equal_p (gh_symbol2scm ("buildings"), symbol)) 
-		{
-		  buildingmap_data = new BuildingMapData (data);
-		}
-	      else if (gh_equal_p (gh_symbol2scm ("objects"), symbol))
-		{
-		  parse_objects(data);
-		}
-	      else if (gh_equal_p (gh_symbol2scm ("scripts"), symbol))
-		{
-		  parse_scripts(data);
-		}
-	      else
-		{
-		  std::cout << "GameWorldData: Error: " << symbol << " " << data << std::endl;;
-		}
-	    }
-	  else
-	    {
-	      std::cout << "GameWorldData: Error not a symbol: ";// << symbol << " " << data << std::endl;;
-	      gh_display (symbol); gh_newline ();
-	    }
-	}
-      else
-	{
-	  std::cout << "GameWorldData: Error not a pair: " << gh_car(desc) << std::endl;;
-	}
-
-      desc = gh_cdr(desc);
-    }
-}
-
-void
-GameWorldData::parse_objects (SCM desc)
-{
-  //std::cout << "GameWorldData::parse_objects" << std::endl;
-  //gh_display (desc);
-  //gh_newline ();
-  while (gh_pair_p(desc)) // is a list
-    {
-      if (gh_pair_p (gh_car (desc))) // is a symbol/value pair
-	{
-	  SCM symbol = gh_caar(desc);
-	  SCM data   = gh_cdar(desc);   
-
-	  GameObjData* obj = GameObjDataFactory::create (symbol, data);
-	  if (obj)
-	    {
-	      gameobj_data.push_back (obj);
-	    }
-	  else
-	    {
-	      std::cout << "Error: GameWorldData::parse_objects" << std::endl;
-	    }
-	}
-      else
-	{
-	  std::cout << "Error: GameWorldData::parse_objects" << std::endl;
-	}
-      desc = gh_cdr (desc);
-    }
-}
-
-GameWorldData::~GameWorldData ()
-{
-  if (needs_delete)
-    {
-      // FIXME: Memory Leak, we should clear the gameobj_data list here
-    }
-}
-
-SCM
-GameWorldData::dump_to_scm ()
-{
-  std::cout << "GameWorldData::dump_to_scm()" << std::endl;
-
-  SCM world_lst = SCM_EOL;
-
-  SCM objs = SCM_EOL;
-  for (std::vector<GameObjData*>::iterator i = gameobj_data.begin (); i != gameobj_data.end (); ++i)
-    {
-      if (*i)
-	{
-	  SCM obj = (*i)->dump_to_scm ();
-	  if (obj == SCM_BOOL_F)
-	    {
-	      std::cout << "GameWorldData: Error dumping: " << typeid(**i).name () << std::endl;
-	    }
-	  else // Object successfully dumped
-	    {
-	      objs = gh_cons (obj, objs);
-	    }
-	}
-    }
-  
-  world_lst = gh_cons (gh_symbol2scm ("objects"), gh_reverse(objs));
-
-  world_lst = SCM_BOOL_F; //scm_listify (gh_symbol2scm ("world"), world_lst, SCM_UNDEFINED);
-
-  return world_lst;
-}
-
-void
-GameWorldData::parse_scripts(SCM desc)
-{
-  while(!gh_null_p(desc))
-    {
-      SCM script = gh_car(desc);
-
-      scripts.push_back(Guile::scm2string(script));
-      
-      desc = gh_cdr(desc);
-    }
-}
-
-/* EOF */

Copied: trunk/src/generic/random.cpp (from rev 341, trunk/src/generic/random.cxx)


Property changes on: trunk/src/generic/random.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/generic/random.cxx
===================================================================
--- trunk/src/generic/random.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/generic/random.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,47 +0,0 @@
-//  $Id: random.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <stdlib.h>
-#include "random.hxx"
-
-float
-Random::frand (float max)
-{
-  return (float(::rand ()) / RAND_MAX) * max;
-}
-
-float
-Random::frand (float min, float max)
-{
-  return frand(max - min) + min;
-}
-
-int
-Random::rand (int max)
-{
-  return ::rand() % max;
-}
-
-int
-Random::rand (int min, int max)
-{
-  return ::rand () % (max - min) + min;
-}
-
-/* EOF */

Copied: trunk/src/geometry.cpp (from rev 341, trunk/src/geometry.cxx)


Property changes on: trunk/src/geometry.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/geometry.cxx
===================================================================
--- trunk/src/geometry.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/geometry.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,29 +0,0 @@
-//  $Id: geometry.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "geometry.hxx"
-
-bool 
-Circle::do_not_intersec (const Circle& c)
-{
-  return (get_position ().distance (c.get_position ()) 
-	  > get_radius () + c.get_radius());
-}
-
-/* EOF */

Copied: trunk/src/globals.cpp (from rev 341, trunk/src/globals.cxx)


Property changes on: trunk/src/globals.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/globals.cxx
===================================================================
--- trunk/src/globals.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/globals.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,27 +0,0 @@
-//  $Id: globals.cxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "globals.hxx"
-
-bool music_enabled = true;
-bool sound_enabled = true;
-bool draw_colmap   = false;
-int  verbose = 1;
-
-/* EOF */

Copied: trunk/src/goal_manager.cpp (from rev 341, trunk/src/goal_manager.cxx)


Property changes on: trunk/src/goal_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/goal_manager.cxx
===================================================================
--- trunk/src/goal_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/goal_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,24 +0,0 @@
-//  $Id: goal_manager.cxx,v 1.1 2003/06/18 13:05:35 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "goal_manager.hxx"
-
-
-
-/* EOF */

Copied: trunk/src/groundmap/grid_map.cpp (from rev 341, trunk/src/groundmap/grid_map.cxx)


Property changes on: trunk/src/groundmap/grid_map.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/grid_map.cxx
===================================================================
--- trunk/src/groundmap/grid_map.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/grid_map.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,121 +0,0 @@
-//  $Id: grid_map.cxx,v 1.11 2003/10/20 20:58:40 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "grid_tile.hxx"
-#include "../path_manager.hxx"
-#include "grid_map.hxx"
-
-GridMap::GridMap (const GridMapData& data)
-  : GridMapData (data),
-    tiles (path_manager.complete("tiles.scm")),
-    surface(provider)
-{
-  std::vector<GridTileData> tile_data;
-  
-  width  = grid_width  - 1;
-  height = grid_height - 1;
-
-  tile_data.resize (width * height);
-
-  // Generated a temporary tile_data
-  for (int y = 0; y < height; ++y)
-    {
-      for (int x = 0; x < width; ++x)
-	{
-	  tile_data[x + (y * width)] = GridTileData (grid_data[(x + 0) + ((y + 0) * grid_width)],
-						     grid_data[(x + 1) + ((y + 0) * grid_width)],
-						     grid_data[(x + 1) + ((y + 1) * grid_width)],
-						     grid_data[(x + 0) + ((y + 1) * grid_width)]);
-	}
-    }
-
-  // Resize the gridmap to the correct size and fill it with tiles
-  gridmap.resize (tile_data.size ());
-  for (unsigned int i = 0; i != tile_data.size (); ++i)
-    {
-      gridmap[i] = tiles.create(tile_data[i]);
-    }
-
-}
-
-GridMap::~GridMap ()
-{
-  
-}
-
-void
-GridMap::draw (View& view)
-{
-  //std::cout << "Drawing" << std::endl;
-
-  /* FIXME: This code should be shared with TileMap */
-  int tile_x_offset = int(-(view.get_x_offset ()) / 40);
-  int tile_y_offset = int(-(view.get_y_offset ()) / 40);
-  int tile_width    = tile_x_offset + (view.get_width()  / 40) + 2;
-  int tile_height   = tile_y_offset + (view.get_height() / 40) + 2; 
-  // FIXME: one tile more to avoid artefacts, hack, hack hack...
-  
-  for (int y = tile_y_offset; y < tile_height; ++y)
-    for (int x = tile_x_offset; x < tile_width; ++x)
-      {
-	// FIXME: Hard coded gridmap size is ugly
-	if (y < height && y >= 0 && x < width && x >= 0) // Could be optimized away
-	  {
-	    if (gridmap [(width * y) + x]) // Tile is not empty
-	      {
-		gridmap [(width * y) + x]->draw (view, 
-						 int(x * 40) + 20, // FIXME: Map offset needs to be
-						 int(y * 40) + 20); // FIXME: configurable;
-	      }
-	    else
-	      {
-		//std::cout << "Empty tile at: "<< x << "x" << y << std::endl;
-	      }
-	  }
-      }
-}
-
-void
-GridMap::update (float)
-{
-  
-}
-
-void
-GridMap::draw_levelmap (LevelMap& levelmap)
-{
-  surface.set_alpha(0.95f);
-  surface.draw (0, 0);
-  surface.set_alpha(1.0f);
-}
-
-GroundType
-GridMap::get_groundtype (float x, float y)
-{
-  // FIXME: This doesn't look right, tile size is hardcoded
-  int ix = int((x + 20) / 40);
-  int iy = int((y + 20) / 40);
-
-  if (ix >= 0 && ix < grid_width && iy >= 0 && iy < grid_height)
-    return grid_data[ix + (iy * grid_width)];
-  else
-    return GT_EMPTY;
-}
-
-/* EOF */

Copied: trunk/src/groundmap/grid_map_data.cpp (from rev 341, trunk/src/groundmap/grid_map_data.cxx)


Property changes on: trunk/src/groundmap/grid_map_data.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/grid_map_data.cxx
===================================================================
--- trunk/src/groundmap/grid_map_data.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/grid_map_data.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,100 +0,0 @@
-//  $Id: grid_map_data.cxx,v 1.5 2003/10/20 20:58:40 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <ClanLib/Display/Providers/png_provider.h>
-
-#include "../path_manager.hxx"
-#include "grid_map.hxx"
-#include "grid_map_data.hxx"
-
-GridMapData::GridMapData (SCM desc)
-{
-  grid_width  = -1;
-  grid_height = -1;
-  
-  while (!gh_null_p (desc))
-    {
-      SCM symbol = gh_caar(desc);
-      SCM data   = gh_cdar(desc);
-
-      if (gh_equal_p (gh_symbol2scm ("file"), symbol))
-        {
-          parse_from_file (data);
-        }
-      else
-        {
-          std::cout << "GridMapData: Unknown data type: '" << std::flush;
-          gh_display (symbol);
-          std::cout << "' with data: " << std::flush;
-          gh_display (data);
-          std::cout << std::endl;
-          return;
-        }
-
-      desc = gh_cdr (desc);
-    }
-}
-
-GridMapData::~GridMapData ()
-{
-  // delete provider; FIXME: disabled cause it could lead to throuble with copy c'tor
-}
-
-void
-GridMapData::parse_from_file (SCM desc)
-{
-  /* GridMaps will always get a one pixel boarder with the base
-     enviroment */
-  char* str = gh_scm2newstr(gh_car (desc), 0);
-  std::cout << "Loading from: " << str << std::endl;
-  std::string filename = str;
-#ifndef WIN32
-  free (str);
-#endif
-
-  provider = CL_PNGProvider (path_manager.complete("missions/" + filename));
-
-  provider.lock ();
-  //FIXME:Display2 assert (provider.is_indexed ());
-
-  grid_width  = provider.get_width () + 2;
-  grid_height = provider.get_height () + 2;
-
-  grid_data.resize (grid_width * grid_height);
-  
-  for (int i = 0; i < grid_height * grid_width; ++i)
-    grid_data[i] = GT_SAND; // FIXME: should be variable not hardcoded!
-
-  unsigned char* buffer = static_cast<unsigned char*>(provider.get_data ());
-  for (int y = 0; y < provider.get_height (); ++y)
-    for (int x = 0; x < provider.get_width (); ++x)
-      grid_data[(x + 1) + ((y+1) * grid_width)] 
-	= static_cast<GroundType>(buffer[x + (provider.get_width () * y)]);
-
-  provider.unlock (); 
-}
-
-GroundMap*
-GridMapData::create ()
-{
-  return new GridMap (*this);
-}
-
-/* EOF */

Copied: trunk/src/groundmap/grid_tile.cpp (from rev 341, trunk/src/groundmap/grid_tile.cxx)


Property changes on: trunk/src/groundmap/grid_tile.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/grid_tile.cxx
===================================================================
--- trunk/src/groundmap/grid_tile.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/grid_tile.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,38 +0,0 @@
-//  $Id: grid_tile.cxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/core.h>
-#include "../view.hxx"
-#include "grid_tile.hxx"
-#include "../resource_manager.hxx"
-
-GridTile::GridTile (std::string filename)
-{  
-  //std::cout << "Loading: " << filename << std::endl;
-  sprite = resources->get_sprite (filename);
-  //std::cout << "Done: Loading: " << filename << std::endl;
-}
-
-void
-GridTile::draw(View& view, float x, float y)
-{
-  view.get_sc().color().draw(sprite, x, y);
-}
-
-/* EOF */

Copied: trunk/src/groundmap/grid_tile_data.cpp (from rev 341, trunk/src/groundmap/grid_tile_data.cxx)


Property changes on: trunk/src/groundmap/grid_tile_data.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/grid_tile_data.cxx
===================================================================
--- trunk/src/groundmap/grid_tile_data.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/grid_tile_data.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,86 +0,0 @@
-//  $Id: grid_tile_data.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "grid_tile.hxx"
-#include "grid_tile_data.hxx"
-
-GridTile*
-GridTileData::create ()
-{
-  //return new GridTile (*this);
-  return 0;// FIXME: Unused
-}
-
-static bool Gridless(const GridTileData& a, const GridTileData& b)
-{
-  if (a.ul < b.ul)
-    return true;
-  else if (a.ul > b.ul) 
-    return false;
-  else
-    if (a.ur < b.ur)
-      return true;
-    else if (a.ur > b.ur) 
-      return false;    
-    else
-      if (a.br < b.br)
-	return true;
-      else if (a.br > b.br) 
-	return false;    
-      else
-	if (a.bl < b.bl)
-	  return true;
-	else if (a.bl > b.bl) 
-	  return false;
-
-  return false;
-}
-
-bool operator<(const GridTileData& a, const GridTileData& b)
-{
-  /*
-  std::cout << "if ("  << (int)a.ul << (int)a.ur << (int)a.br  << (int)a.bl
-	    << " < " 
-	    << (int)b.ul << (int)b.ur << (int)b.br << (int)b.bl
-	    << ") != " << Gridless (a, b) << ": " << "print \"Error\""<< std::endl;
-  */
-  return Gridless (a, b);
-}
-
-std::ostream& operator<<(std::ostream& s, const GridTileData& b)
-{
-  s << "#<GroundType "
-    << GroundType2string(b.ul) << ", "
-    << GroundType2string(b.ur) << ", "
-    << GroundType2string(b.br) << ", "
-    << GroundType2string(b.bl)
-    << ">";
-  return s;
-}
-
-bool
-GridTileData::operator==(const GridTileData& b)
-{
-  return (this->ur == b.ur
-	  && this->ul == b.ul
-	  && this->bl == b.bl
-	  && this->br == b.br); 
-}
-
-/* EOF */

Copied: trunk/src/groundmap/grid_tile_generator.cpp (from rev 341, trunk/src/groundmap/grid_tile_generator.cxx)


Property changes on: trunk/src/groundmap/grid_tile_generator.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/grid_tile_generator.cxx
===================================================================
--- trunk/src/groundmap/grid_tile_generator.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/grid_tile_generator.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,180 +0,0 @@
-//  $Id: grid_tile_generator.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../command_line_arguments.hxx"
-#include "grid_tile.hxx"
-#include "grid_tile_generator.hxx"
-
-GridTileGenerator::GridTileGenerator (std::string filename)
-  : emptytile (new GridTile ("feuerkraft/emptytile"))
-{
-  SCM fdes = scm_open_file (gh_str02scm(filename.c_str ()), 
-			    gh_str02scm("r"));
-  SCM lst  = scm_read (fdes);
-
-  lst = gh_cdr(lst); // Skip the 'tiles' mark
-
-  while (gh_pair_p(lst))
-    {
-      parse_line (gh_car (lst));
-      lst = gh_cdr(lst); 
-    }
-
-  scm_close (fdes);
-}
-
-GridTileGenerator::~GridTileGenerator ()
-{
-  delete emptytile;
-}
-
-void
-GridTileGenerator::parse_line (SCM desc)
-{
-  SCM data = gh_car (desc);
-  SCM lst  = gh_cdr (desc);
-
-  GridTileData gdata = scm2GridTileData (data);
-
-  TileTable::iterator i;
-  for (i = tiles.begin (); i != tiles.end (); ++i)
-    if (i->first == gdata)
-      break;
-
-  if (i != tiles.end ())
-    {
-      std::cout << "GridTileGenerator: collision in file: " << gdata << std::endl;
-    }
-  else
-    {
-      tiles.push_back (TileTableEntry(gdata, scm2GridTileVector (lst)));
-    }
-}
-
-GridTileData
-GridTileGenerator::scm2GridTileData (SCM desc)
-{
-  GridTileData data;
-  // FIXME: No error checking here
-  data.ul = symbol2GroundType(gh_car (desc));
-  data.ur = symbol2GroundType(gh_cadr (desc));
-  data.br = symbol2GroundType(gh_caddr (desc));
-  data.bl = symbol2GroundType(gh_car(gh_cdddr (desc)));
-  
-  return data;
-}
-
-GroundType
-GridTileGenerator::symbol2GroundType (SCM symbol)
-{
-  if (gh_equal_p (gh_symbol2scm ("s"), symbol))
-    {
-      return GT_SAND;
-    }
-  else if (gh_equal_p (gh_symbol2scm ("f"), symbol))
-    {
-      return GT_FLATWATER;
-    }
-  else if (gh_equal_p (gh_symbol2scm ("d"), symbol))
-    {
-      return GT_DEEPWATER;
-    }
-  else if (gh_equal_p (gh_symbol2scm ("g"), symbol))
-    {
-      return GT_GRASS;
-    }
-  else if (gh_equal_p (gh_symbol2scm ("m"), symbol))
-    {
-      return GT_MUD;
-    }
-  else if (gh_equal_p (gh_symbol2scm ("a"), symbol))
-    {
-      return GT_ASPHALT;
-    }
-  else if (gh_equal_p (gh_symbol2scm ("w"), symbol))
-    {
-      return GT_WETSAND;
-    }
-  else 
-    {
-      return GT_EMPTY;
-    }
-}
-
-std::vector<GridTile*>
-GridTileGenerator::scm2GridTileVector (SCM desc)
-{
-  std::vector<GridTile*> vec;
-
-  while (gh_pair_p(desc))
-    {
-      char* str = gh_scm2newstr (gh_car (desc), 0);
-      vec.push_back (new GridTile (str));
-      
-#ifndef WIN32
-      free (str);
-#endif
-
-      desc = gh_cdr (desc);
-    }
-
-  return vec;
-}
-
-GridTile*
-GridTileGenerator::create (const GridTileData& data)
-{
-  if (data.ur == GT_EMPTY || data.ul == GT_EMPTY || data.bl == GT_EMPTY || data.br == GT_EMPTY)
-    {
-      return 0;
-    }
-  
-  // We switch to transparent when the tile has the same 'color' as the base ground
-  // FIXME: ground color needs to be variable
-  if (data.ur == GT_SAND && data.ul == GT_SAND && data.bl == GT_SAND && data.br == GT_SAND)
-    {
-      return 0;
-    }
-
-  TileTable::iterator i;
-  for (i = tiles.begin (); i != tiles.end (); ++i)
-    if (i->first == data)
-      break;
-
-  if (i != tiles.end ())
-    {
-      if (i->second.size () > 0)
-	return (i->second)[rand () % (i->second.size ())]; // Return a random tile
-      else
-	{
-	  // The tile list is empty, no tile available
-          if (args->verbose)
-            std::cout << "GridTileGenerator: Warning: Tile: " << data << " missing" << std::endl;
-          return 0;
-	}
-    }
-  else
-    {
-      std::cout << "GridTileGenerator: Warning: Tile: " << data << " missing" << std::endl;
-      return emptytile;
-    }
-}
-
-/* EOF */

Copied: trunk/src/groundmap/ground_map_data.cpp (from rev 341, trunk/src/groundmap/ground_map_data.cxx)


Property changes on: trunk/src/groundmap/ground_map_data.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/ground_map_data.cxx
===================================================================
--- trunk/src/groundmap/ground_map_data.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/ground_map_data.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,22 +0,0 @@
-//  $Id: ground_map_data.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "ground_map_data.hxx"
-
-/* EOF */

Copied: trunk/src/groundmap/ground_map_data_factory.cpp (from rev 341, trunk/src/groundmap/ground_map_data_factory.cxx)


Property changes on: trunk/src/groundmap/ground_map_data_factory.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/ground_map_data_factory.cxx
===================================================================
--- trunk/src/groundmap/ground_map_data_factory.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/ground_map_data_factory.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,71 +0,0 @@
-//  $Id: ground_map_data_factory.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "tile_map_data.hxx"
-#include "multi_ground_map.hxx"
-#include "grid_map_data.hxx"
-#include "ground_map_data_factory.hxx"
-
-GroundMapData* 
-GroundMapDataFactory::create (SCM desc)
-{
-  MultiGroundMapData* multigroundmap = new MultiGroundMapData ();
-
-  /*std::cout << "GroundMapFactory: desc: "<< std::flush;
-  gh_display (desc);
-  gh_newline ();*/
-
-  while (gh_pair_p (desc))
-    {
-      SCM symbol = gh_caar (desc);
-      SCM data   = gh_cdar (desc);
-
-      /*      
-      std::cout << "GroundMapFactory: symbol: "<< std::flush;
-      gh_display (symbol);
-      gh_newline ();
-      
-      std::cout << "GroundMapFactory: data: "<< std::flush;
-      gh_display (data);
-      gh_newline ();
-      */
-      if (gh_equal_p (gh_symbol2scm ("tilemap"), symbol))
-	{
-	  multigroundmap->add(new TileMapData (data));
-	}
-      else if (gh_equal_p (gh_symbol2scm ("gridmap"), symbol))
-	{
-	  multigroundmap->add(new GridMapData (data));
-	}
-      else
-	{
-	  std::cout << "GroundMapFactory: Unknown map type: " << std::flush;
-	  gh_display (symbol);
-	  gh_newline ();
-	  //return 0;
-	}
-
-      desc = gh_cdr (desc);
-    }
-
-  return multigroundmap;
-}
-
-/* EOF */

Copied: trunk/src/groundmap/ground_type.cpp (from rev 341, trunk/src/groundmap/ground_type.cxx)


Property changes on: trunk/src/groundmap/ground_type.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/ground_type.cxx
===================================================================
--- trunk/src/groundmap/ground_type.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/ground_type.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,48 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "ground_type.hxx"
-
-std::string GroundType2string(const GroundType& a)
-{
-  switch (a)
-    {
-    case GT_EMPTY:
-      return "empty";
-    case GT_SAND:
-      return "sand";
-    case GT_GRASS:
-      return "grass";
-    case GT_MUD:
-      return "mud";
-    case GT_FLATWATER:
-      return "flatwater";
-    case GT_DEEPWATER:
-      return "deepwater";
-    case GT_ASPHALT: 
-      return "asphalt";
-    case GT_WETSAND:
-      return "wetsand";
-    default:
-      return "unknown";
-    }
-}
-
-/* EOF */

Copied: trunk/src/groundmap/multi_ground_map.cpp (from rev 341, trunk/src/groundmap/multi_ground_map.cxx)


Property changes on: trunk/src/groundmap/multi_ground_map.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/multi_ground_map.cxx
===================================================================
--- trunk/src/groundmap/multi_ground_map.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/multi_ground_map.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,77 +0,0 @@
-//  $Id: multi_ground_map.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "multi_ground_map.hxx"
-
-MultiGroundMap::MultiGroundMap (const MultiGroundMapData& data)
-  : MultiGroundMapData (data)
-{
-  for (std::vector<GroundMapData*>::iterator i = mapsdata.begin (); i != mapsdata.end (); ++i)
-    {
-      maps.push_back ((*i)->create ());
-    }
-}
-
-MultiGroundMap::~MultiGroundMap ()
-{
-  for (std::vector<GroundMap*>::iterator i = maps.begin (); i != maps.end (); ++i)
-    {
-      delete *i;
-    }
-}
-
-/** Return the type of ground, x and y are in world coordinates */
-GroundType
-MultiGroundMap::get_groundtype (float x, float y)
-{
-  for (std::vector<GroundMap*>::reverse_iterator i = maps.rbegin (); i != maps.rend (); ++i)
-    {
-      GroundType type = (*i)->get_groundtype (x, y);
-      if (type != GT_EMPTY)
-	return type;
-    }  
-  return GT_SAND;
-}
-
-void
-MultiGroundMap::draw(View& view)
-{
-  for (std::vector<GroundMap*>::reverse_iterator i = maps.rbegin (); i != maps.rend (); ++i)
-    {
-      (*i)->draw(view);
-    }
-}
-
-void
-MultiGroundMap::draw_levelmap(LevelMap& levelmap)
-{
-  for (std::vector<GroundMap*>::reverse_iterator i = maps.rbegin (); i != maps.rend (); ++i)
-    {
-      (*i)->draw_levelmap(levelmap);
-    } 
-}
-
-void
-MultiGroundMap::add (GroundMap* groundmap)
-{
-  if (groundmap)
-    maps.push_back (groundmap);
-}
-
-/* EOF */

Copied: trunk/src/groundmap/multi_ground_map_data.cpp (from rev 341, trunk/src/groundmap/multi_ground_map_data.cxx)


Property changes on: trunk/src/groundmap/multi_ground_map_data.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/multi_ground_map_data.cxx
===================================================================
--- trunk/src/groundmap/multi_ground_map_data.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/multi_ground_map_data.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,44 +0,0 @@
-//  $Id: multi_ground_map_data.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "multi_ground_map.hxx"
-#include "multi_ground_map_data.hxx"
-
-MultiGroundMapData::MultiGroundMapData ()
-{
-}
-
-MultiGroundMapData::~MultiGroundMapData ()
-{
-  // FIXME: delete here could be problematic when we copy this class
-}
-
-void
-MultiGroundMapData::add (GroundMapData* groundmapdata)
-{
-  mapsdata.push_back (groundmapdata);
-}
-
-GroundMap*
-MultiGroundMapData::create()
-{
-  return new MultiGroundMap(*this);
-}
-
-/* EOF */

Copied: trunk/src/groundmap/sprite_tile.cpp (from rev 341, trunk/src/groundmap/sprite_tile.cxx)


Property changes on: trunk/src/groundmap/sprite_tile.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/sprite_tile.cxx
===================================================================
--- trunk/src/groundmap/sprite_tile.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/sprite_tile.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,50 +0,0 @@
-//  $Id: sprite_tile.cxx,v 1.4 2003/05/19 19:00:56 grumbel Exp $
-// 
-//  Feuerkraft
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef SPRITETILE_CXX
-#define SPRITETILE_CXX
-
-#include <ClanLib/display.h>
-#include "sprite_tile.hxx"
-#include "../resource_manager.hxx"
-#include "../view.hxx"
-
-SpriteTile::SpriteTile (const SpriteTileData& data)
-  : SpriteTileData (data),
-    sprite (resources->get_sprite (sprite_location.c_str ()))
-{
-  sprite.set_alignment (origin_top_left);
-}
-
-void
-SpriteTile::draw(View& view, float x, float y)
-{
-  view.get_sc().color().draw(sprite, x, y);
-}
-
-/** FIXME: 'float delta' should be replaced with GameDelta */
-void
-SpriteTile::update (float delta)
-{
-  sprite.update (delta);
-}
-
-#endif
-
-/* EOF */

Copied: trunk/src/groundmap/sprite_tile_data.cpp (from rev 341, trunk/src/groundmap/sprite_tile_data.cxx)


Property changes on: trunk/src/groundmap/sprite_tile_data.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/sprite_tile_data.cxx
===================================================================
--- trunk/src/groundmap/sprite_tile_data.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/sprite_tile_data.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,37 +0,0 @@
-//  $Id: sprite_tile_data.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "sprite_tile.hxx"
-#include "sprite_tile_data.hxx"
-
-SpriteTileData::SpriteTileData ()
-{
-}
-
-SpriteTileData::~SpriteTileData ()
-{
-}
-
-Tile*
-SpriteTileData::create_Tile ()
-{
-  return new SpriteTile (*this);
-}
-
-/* EOF */

Copied: trunk/src/groundmap/tile_data_factory.cpp (from rev 341, trunk/src/groundmap/tile_data_factory.cxx)


Property changes on: trunk/src/groundmap/tile_data_factory.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/tile_data_factory.cxx
===================================================================
--- trunk/src/groundmap/tile_data_factory.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/tile_data_factory.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,86 +0,0 @@
-//  $Id: tile_data_factory.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-
-#include "tile_data.hxx"
-#include "sprite_tile_data.hxx"
-#include "sprite_tile.hxx"
-#include "tile_data_factory.hxx"
-
-TileData*
-TileDataFactory::create (SCM desc)
-{
-  SCM symbol = gh_car (desc);
-  SCM data   = gh_cdr (desc);
-  
-  if (gh_equal_p (gh_symbol2scm ("spritetile"), symbol))
-    {
-      return create_SpriteTileData (data);
-    }
-  else
-    {
-      std::cout << "TileDataFactory: Unknown tile type: '" << std::flush;
-      gh_display (symbol);
-      std::cout << "' with data: " << std::flush;
-      gh_display (data);
-      std::cout << std::endl;
-      return 0;
-    }
-}
-
-SpriteTileData*
-TileDataFactory::create_SpriteTileData (SCM desc)
-{
-  SpriteTileData* sprite_data = new SpriteTileData ();
-
-  //std::cout << "TileDataFactory:create_SpriteTileData:" << std::flush;
-  //gh_display (desc);
-  //std::cout << std::endl;
-
-  while (!gh_null_p (desc))
-    {
-      SCM symbol = gh_caar(desc);
-      SCM data   = gh_cdar(desc);
-
-      if (gh_equal_p (gh_symbol2scm ("location"), symbol))
-	{
-	  char* str = gh_scm2newstr(gh_car (data), 0);
-	  sprite_data->sprite_location = str;
-#ifndef WIN32	// Freeing this crashed under VisualC++
-	  free (str);
-#endif	
-	}
-      else
-	{
-	  std::cout << "TileDataFactory: Unknown sprite tile type: '" << std::flush;
-	  gh_display (symbol);
-	  std::cout << "' with data: " << std::flush;
-	  gh_display (data);
-	  std::cout << std::endl;
-	  return 0;
-	}
-
-      desc = gh_cdr (desc);
-    }
-
-  return sprite_data;
-}
-
-/* EOF */

Copied: trunk/src/groundmap/tile_map.cpp (from rev 341, trunk/src/groundmap/tile_map.cxx)


Property changes on: trunk/src/groundmap/tile_map.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/tile_map.cxx
===================================================================
--- trunk/src/groundmap/tile_map.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/tile_map.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,110 +0,0 @@
-//  $Id: tile_map.cxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "tile.hxx"
-#include "tile_data.hxx"
-#include "tile_map.hxx"
-
-TileMap::TileMap (const TileMapData& data)
-  : TileMapData (data)
-{
-  // Create the tiles from tiles_data
-  for (std::vector<TileData*>::iterator it = tiles_data.begin ();
-       it != tiles_data.end ();
-       ++it)
-    {
-      //std::cout << "Tiles: " << *it << std::endl;
-      if (*it)
-	tiles.push_back ((*it)->create_Tile ());
-      else
-	tiles.push_back (NULL);
-    }
-
-  // Create the tilemap out of tiles_data and tiles
-  tilemap.resize (tilemap_data.size ());
-  for (unsigned int i = 0; i < tilemap.size (); ++i)
-    {
-      if (tilemap_data[i] >= 0 && tilemap_data[i] < int(tiles.size()))
-	{
-	  tilemap[i] = tiles[tilemap_data[i]];
-	  //std::cout << "Tile: " << tilemap_data[i] << " " << tiles[tilemap_data[i]] << std::endl;
-	}
-      else
-	{
-	  //std::cout << "Tile" << tiles.size() << ": " << tilemap_data[i] << std::endl;
-	}
-    }
-  
-  //std::cout << "Tilemap: " << width << "x" << height << std::endl;
-
-}
-
-TileMap::~TileMap ()
-{
-  for (std::vector<Tile*>::iterator i = tiles.begin (); i != tiles.end (); ++i)
-    delete *i;
-}
-
-GroundType
-TileMap::get_groundtype (float x, float y)
-{
-  return GT_FLATWATER;
-}
-
-void
-TileMap::draw(View& view)
-{
-  //std::cout << "Offset: " << view->get_x_offset () << std::endl;
-
-  int tile_x_offset = int(-(view.get_x_offset () / 40));
-  int tile_y_offset = int(-(view.get_y_offset () / 40));
-  int tile_width    = tile_x_offset + (view.get_width () / 40) + 1;
-  int tile_height   = tile_y_offset + (view.get_height () / 40) + 1; 
- // FIXME: one tile more to avoid artefacts, hack, hack hack...
-  
-
-  for (int y = tile_y_offset; y < tile_height; ++y)
-    for (int x = tile_x_offset; x < tile_width; ++x)
-    {
-      // FIXME: Hard coded tilemap size is ugly
-      if (y < height && y >= 0 && x < width && x >= 0) // Could be optimized away
-	if (tilemap [(width * y) + x])
-          {
-            tilemap [(width * y) + x]->draw (view , 
-                                             int(x * 40),
-                                             int(y * 40));
-          }
-    }
-}
-
-void
-TileMap::draw_levelmap (LevelMap& levelmap)
-{
-}
-
-void
-TileMap::update (float delta)
-{
-  //std::cout << "TileMap::update" << std::endl;
-  for (std::vector<Tile*>::iterator i = tiles.begin (); i != tiles.end (); ++i)
-    if (*i)
-      (*i)->update (delta);
-}
-
-/* EOF */

Copied: trunk/src/groundmap/tile_map_data.cpp (from rev 341, trunk/src/groundmap/tile_map_data.cxx)


Property changes on: trunk/src/groundmap/tile_map_data.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/groundmap/tile_map_data.cxx
===================================================================
--- trunk/src/groundmap/tile_map_data.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/groundmap/tile_map_data.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,156 +0,0 @@
-//  $Id: tile_map_data.cxx,v 1.5 2003/10/20 20:58:40 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <ClanLib/Display/Providers/png_provider.h>
-
-#include "../path_manager.hxx"
-#include "tile_data_factory.hxx"
-#include "tile_map_data.hxx"
-#include "tile_map.hxx"
-
-TileMapData::TileMapData (SCM desc)
-{
-  width = -1;
-  height = -1;
-
-  while (!gh_null_p (desc))
-    {
-      SCM symbol = gh_caar(desc);
-      SCM data   = gh_cdar(desc);
-
-      if (gh_equal_p (gh_symbol2scm ("width"), symbol))
-	{
-	  width = gh_scm2int(gh_car (data));
-	}
-      else if (gh_equal_p (gh_symbol2scm ("height"), symbol))
-	{
-	  height = gh_scm2int(gh_car (data));
-	}
-      else if (gh_equal_p (gh_symbol2scm ("tiles"), symbol))
-	{
-	  parse_tiles (data);
-	}
-      else if (gh_equal_p (gh_symbol2scm ("file"), symbol))
-	{
-	  parse_from_file (data);
-	}
-      else if (gh_equal_p (gh_symbol2scm ("map"), symbol))
-	{
-	  parse_map (data);
-	}
-      else
-	{
-	  std::cout << "TileMapData: Unknown data type: '" << std::flush;
-	  gh_display (symbol);
-	  std::cout << "' with data: " << std::flush;
-	  gh_display (data);
-	  std::cout << std::endl;
-	  return;
-	}
-
-      desc = gh_cdr (desc);
-    }
-}
-
-TileMapData::~TileMapData ()
-{ 
-}
-
-void
-TileMapData::parse_from_file (SCM desc)
-{
-  char* str = gh_scm2newstr(gh_car (desc), 0);
-  std::cout << "Loading from: " << str << std::endl;
-  std::string filename = str;
-  free (str);
-
-  CL_PNGProvider provider(path_manager.complete("missions/" + filename));
-
-  provider.lock ();
-  //FIXME:Display2 assert (provider.is_indexed ());
-
-  width  = provider.get_width ();
-  height = provider.get_height ();
-
-  tilemap_data.resize (width * height);
-  
-  unsigned char* buffer = static_cast<unsigned char*>(provider.get_data ());
-  for (int i = 0; i < width * height; ++i)
-    tilemap_data[i] = buffer[i];
-
-  provider.unlock ();
-}
-
-void
-TileMapData::parse_map (SCM desc)
-{
-  assert (width != -1);
-  assert (height != -1);
-  tilemap_data.resize (width * height);
-  
-  // Init the map to '0'
-  for (std::vector<int>::iterator it = tilemap_data.begin ();
-       it != tilemap_data.end (); ++it)
-    *it = 0;
-  
-  /*std::cout << "Tilemap MapData: " << std::flush;
-  gh_display (desc);
-  gh_newline ();*/
-  
-  int i = 0;
-  bool to_large = false;
-  while (!gh_null_p (desc))
-    {
-      if (i < static_cast<int>(tilemap_data.size()))
-	{
-	  tilemap_data[i] = gh_scm2int (gh_car (desc));
-	  ++i;
-	}
-      else
-	{
-	  to_large = true;
-	  ++i;
-	}
-      
-      desc = gh_cdr(desc);
-    }
-
-  std::cout << "TileMapData: map to large: " << width * height
-	    << " < " << i << std::endl;
-}
-
-void
-TileMapData::parse_tiles (SCM desc)
-{
-  //std::cout << "TileMapData::parse_tiles: " tiles_ << std::endl;
-  while (!gh_null_p (desc))
-    {
-      tiles_data.push_back (TileDataFactory::create (gh_car(desc)));
-      desc = gh_cdr (desc);
-    }
-}
-
-GroundMap*
-TileMapData::create ()
-{
-  return new TileMap (*this);
-}
-
-/* EOF */

Copied: trunk/src/guile.cpp (from rev 341, trunk/src/guile.cxx)


Property changes on: trunk/src/guile.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/guile.cxx
===================================================================
--- trunk/src/guile.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/guile.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,340 +0,0 @@
-//  $Id: guile.cxx,v 1.18 2003/08/20 00:15:10 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <assert.h>
-#include <guile/gh.h>
-#include <ClanLib/Core/System/cl_assert.h>
-
-#include "property.hxx"
-#include "property_set.hxx"
-#include "guile.hxx"
-
-namespace Guile {
-std::string
-scm2string (SCM data)
-{
-  std::string str;
-  
-  if (gh_string_p(data))
-    {
-      char* tmpstr = gh_scm2newstr(data, 0);
-      str = tmpstr;
-      free(tmpstr);
-    } else {
-      SCM scmstr = scm_make_string(SCM_MAKINUM(0), SCM_UNDEFINED);
-      SCM port = scm_mkstrport(SCM_INUM0, scmstr,
-                               SCM_OPN | SCM_WRTNG, "scm_mkstrport");
-      scm_display(data, port);
-      char* tmpstr = gh_scm2newstr(scmstr, 0);
-      str = tmpstr;
-      free(tmpstr);
-    }
-  return str;
-}
-
-SCM vector2scm (const FloatVector2d& vec)
-{
-  /** If this causes throuble on WIN32, replace it with gh_cons() */
-  return SCM_BOOL_F; /*scm_listify (gh_symbol2scm ("pos"),
-                       gh_double2scm(vec.x),
-                       gh_double2scm(vec.y),
-                       gh_double2scm(vec.z),
-                       SCM_UNDEFINED);*/
-}
-
-SCM pos2scm (int x, int y)
-{
-  return SCM_BOOL_F;/*scm_listify (gh_symbol2scm ("pos"),
-                      gh_int2scm (x),
-                      gh_int2scm (y), 
-                      SCM_UNDEFINED);*/
-}
-
-void pretty_print (std::ostream& stream, SCM obj)
-{
-  std::cout << "pretty_print" << std::endl;
-  // FIXME: ...lalala..
-  gh_write (obj);
-  gh_newline ();
-
-}
-
-bool equal_p(SCM a, SCM b)
-{
-  return SCM_NFALSEP(scm_equal_p(a, b));
-}
-
-SCM symbol2scm(const char* str)
-{
-  return scm_str2symbol(str);
-}
-
-std::string keyword2string(SCM keyword)
-{
-  assert(SCM_KEYWORDP(keyword));
-  //puts("keyword2string: ");
-  //gh_display(keyword);
-  //gh_newline();
-  //gh_display(scm_keyword_dash_symbol(keyword));
-  //gh_newline();
-
-  char* str = gh_symbol2newstr(scm_keyword_dash_symbol(keyword), 0);
-  std::string ret = str + 1; // skip the dash
-  free(str);
-  return ret;
-}
-
-AList keywords2alist(SCM lst)
-{
-  AList alist;
-  while(gh_pair_p(lst) && !gh_null_p(gh_cdr(lst)))
-    {
-      SCM key  = gh_car(lst);
-      SCM data = gh_cadr(lst);
-    
-      if (scm_keyword_p(key) == SCM_BOOL_F)
-        {
-          std::cout << "Skipping keyword: " << key << std::endl;
-        }
-      else
-        {
-          std::string keyword = Guile::keyword2string(key);
-          if (gh_string_p(data))
-            {
-              alist.set_string(keyword,
-                               Guile::scm2string(data));
-            }
-          else if (gh_exact_p(data))
-            {
-              alist.set_int(keyword,
-                            gh_scm2int(data));
-            }
-          else if (gh_inexact_p(data))
-            {
-              alist.set_float(keyword,
-                              gh_scm2double(data));
-            }
-          else if (gh_boolean_p(data))
-            {
-              alist.set_bool(keyword,
-                             gh_scm2bool(data));
-            }
-          else if (gh_list_p(data) && gh_length(data) == 2
-                   && gh_exact_p(gh_car(data)) 
-                   && gh_exact_p(gh_cadr(data)))
-            {
-              IntVector2d vec;
-              vec.x = gh_scm2int(gh_car(data));
-              vec.y = gh_scm2int(gh_cadr(data));
-              alist.set_int_vector2d(keyword,
-                                     vec);
-            }
-          else if (gh_symbol_p(data))
-            {
-              alist.set_string(keyword,
-                               Guile::symbol2string(data));
-            }
-          else
-            {
-              std::cout << "Guile: Error: Couldn't handle data" << std::endl;
-              gh_display(data);
-              gh_newline();
-            }          
-        }
-
-      lst = gh_cddr(lst);
-    }
-  return alist;
-}
-
-AList scm2alist(SCM lst)
-{
-  AList alist;
-  while(!gh_null_p(lst))
-    {
-      SCM key  = gh_caar(lst);
-      SCM data = gh_cdar(lst);
-
-      if (gh_pair_p(data) && gh_null_p(gh_cdr(data)))
-        data = gh_car(data);
-
-      if (!gh_symbol_p(key))
-        {
-          std::cout << "Guile: Error: key not a symbol" << std::endl;
-          gh_display(key);
-          gh_newline();
-        }
-      else
-        {
-          if (gh_string_p(data))
-            {
-              alist.set_string(Guile::symbol2string(key), 
-                               Guile::scm2string(data));
-            }
-          else if (gh_exact_p(data))
-            {
-              alist.set_int(Guile::symbol2string(key), 
-                            gh_scm2int(data));
-            }
-          else if (gh_inexact_p(data))
-            {
-              alist.set_float(Guile::symbol2string(key), 
-                              gh_scm2double(data));
-            }
-          else if (gh_boolean_p(data))
-            {
-              alist.set_bool(Guile::symbol2string(key), 
-                             gh_scm2bool(data));
-            }
-          else if (gh_list_p(data) && gh_length(data) == 2
-                   && gh_exact_p(gh_car(data)) 
-                   && gh_exact_p(gh_cadr(data)))
-            {
-              IntVector2d vec;
-              vec.x = gh_scm2int(gh_car(data));
-              vec.y = gh_scm2int(gh_cadr(data));
-              alist.set_int_vector2d(Guile::symbol2string(key), 
-                                     vec);
-            }
-          else if (gh_symbol_p(data))
-            {
-              alist.set_string(Guile::symbol2string(key),
-                               Guile::symbol2string(data));
-            }
-          else
-            {
-              std::cout << "Guile: Error: Couldn't handle data" << std::endl;
-              gh_display(data);
-              gh_newline();
-            }
-        }
-
-      lst = gh_cdr(lst);
-    }
-  return alist;
-}
-
-std::string symbol2string(SCM symbol)
-{
-  char* c_str = gh_symbol2newstr(symbol, 0);
-  std::string str = c_str;
-  free(c_str);
-  return str;
-}
-
-void enter_repl()
-{
-  SCM func = gh_lookup("feuerkraft:repl");
-  if (func != SCM_BOOL_F)
-    {
-      scm_call_0(func);
-    }
-  else
-    {
-      std::cout << "### Error: feuerkraft.scm must be loaded to use the repl!" << std::endl;
-    }
-}
-
-void scm2property(PropertySet& properties, const char* name, SCM value)
-{
-  if (gh_string_p(value))
-    {
-      properties.set_string(name, Guile::scm2string(value));
-    }
-  else if (gh_boolean_p(value))
-    {
-      properties.set_bool(name, gh_scm2bool(value));
-    }
-  else if (gh_exact_p(value))
-    {
-      properties.set_int(name, gh_scm2int(value));
-    }
-  else if (gh_inexact_p(value))
-    {
-      properties.set_float(name, gh_scm2double(value));
-    }
-  else
-    {
-      std::cout << "Unhandled value" << std::endl;
-    }
-}
-
-SCM  property2scm(const Property& property)
-{
-  switch(property.get_type())
-    {
-    case Property::T_INT:
-      return gh_int2scm(property.get_int());
-      break;
-              
-    case Property::T_FLOAT:
-      return gh_double2scm(property.get_float());
-      break;
-
-    case Property::T_BOOL:
-      return gh_bool2scm(property.get_bool());
-      break;
-
-    case Property::T_STRING:
-      return gh_str02scm(property.get_string().c_str());
-      break;
-
-    default:
-      std::cout << "Guile: Unhandled property type" << std::endl;
-      return SCM_UNSPECIFIED;
-      break;
-    }
-}
-
-void enable_debug()
-{
-#if 0 // OLD Guile
-  SCM_DEVAL_P = 1;
-  SCM_BACKTRACE_P = 1;
-  SCM_RECORD_POSITIONS_P = 1;
-  SCM_RESET_DEBUG_MODE;
-#else
-  gh_eval_str("(debug-enable 'debug)"
-              "(debug-enable 'backtrace)"
-              "(read-enable  'positions)");
-#endif
-}
-
-/** Disable all debugging */
-void disable_debug()
-{
-  gh_eval_str("(debug-disable 'debug)"
-              "(debug-disable 'backtrace)"
-              "(read-disable  'positions)");
-}
-
-void enable_readline()
-{
-#ifdef WITH_STATIC_READLINE
-  std::cout << "Loading readline... " << std::endl;
-  scm_init_readline();
-#endif
-
-  gh_eval_str("(use-modules (ice-9 readline))"
-              "(activate-readline)");
-}
-
-} // namespace Guile
-
-/* EOF */

Copied: trunk/src/help.cpp (from rev 341, trunk/src/help.cxx)


Property changes on: trunk/src/help.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/help.cxx
===================================================================
--- trunk/src/help.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/help.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,57 +0,0 @@
-//  $Id: help.cxx,v 1.2 2003/06/06 11:11:19 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/display.h>
-#include "fonts.hxx"
-#include "help.hxx"
-
-Help::Help()
-{
-  font = Fonts::font;
-}
-
-Help::~Help()
-{
-}
-
-void
-Help::draw(CL_GraphicContext& gc)
-{
-  int center_x = CL_Display::get_width()/2;
-  int center_y = CL_Display::get_height()/2;
-
-  CL_Display::fill_rect(CL_Rect(center_x - 200, center_y - 150,
-                                center_x + 200, center_y + 150),
-                        CL_Color(100, 100, 0, 230));
-  font.set_alignment(origin_top_left);
-  font.draw(center_x - 190, center_y - 120, 
-            "F1 - show/hide this help screen\n"
-            "Esc - leave game\n"
-            "j  - enter/leave a vehicle\n"
-            "left - turn left\n"
-            "right - turn right\n"
-            );
-}
-
-void
-Help::update(float delta)
-{
-}
-
-/* EOF */

Copied: trunk/src/input/axis_button.cpp (from rev 341, trunk/src/input/axis_button.cxx)


Property changes on: trunk/src/input/axis_button.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/axis_button.cxx
===================================================================
--- trunk/src/input/axis_button.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/axis_button.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,72 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "input_axis.hxx"
-#include "axis_button.hxx"
-
-AxisButton::AxisButton(InputAxis* axis, bool top)
-  : axis(axis),
-    down(false),
-    top(top)
-{
-  on_axis_move_slot = axis->on_move().connect(this, &AxisButton::on_axis_move);
-}
-
-AxisButton::~AxisButton()
-{
-}
-
-void
-AxisButton::update(float delta)
-{
-}
-
-void
-AxisButton::on_axis_move(float pos)
-{
-  if (top)
-    {
-      if (down && pos < 0.5f)
-        {
-          down = false;
-          button_up();
-        }
-      else if (!down && pos > 0.5f)
-        {
-          down = true;
-          button_down();
-        }
-    }
-  else
-    {
-      if (down && pos > -0.5f)
-        {
-          down = false;
-          button_up();
-        }
-      else if (!down && pos < -0.5f)
-        {
-          down = true;
-          button_down();
-        }
-    }
-}
-
-/* EOF */

Copied: trunk/src/input/axis_factory.cpp (from rev 341, trunk/src/input/axis_factory.cxx)


Property changes on: trunk/src/input/axis_factory.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/axis_factory.cxx
===================================================================
--- trunk/src/input/axis_factory.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/axis_factory.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,79 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/joystick.h>
-#include "input_axis_input_device.hxx"
-#include "../feuerkraft_error.hxx"
-#include "../guile.hxx"
-#include "button_factory.hxx"
-#include "button_axis.hxx"
-#include "axis_factory.hxx"
-
-InputAxis* 
-AxisFactory::create(SCM lst)
-{
-  while(gh_pair_p(lst))
-    {
-      SCM sym  = gh_car(lst);
-      SCM data = gh_cdr(lst);
-      
-      if (gh_equal_p(sym, gh_symbol2scm("joystick-axis")))
-        {
-          return create_joystick_axis(data);
-        }
-      if (gh_equal_p(sym, gh_symbol2scm("button-axis")))
-        {
-          return create_button_axis(data);
-        }
-      else
-        {
-          throw FeuerkraftError("AxisFactory::create: parse error");
-        }
-
-      lst = gh_cdr(lst);
-    }
-  return 0;
-}
-
-InputAxis*
-AxisFactory::create_joystick_axis(SCM lst)
-{
-  int device_num = gh_scm2int(gh_car(lst));
-  int axis_num   = gh_scm2int(gh_cadr(lst));
-
-  if (device_num >= 0 && device_num < CL_Joystick::get_device_count())
-    return new InputAxisInputDevice(CL_Joystick::get_device(device_num), axis_num);
-  else
-    {
-      throw FeuerkraftError("Error: AxisFactory::create_joystick_axis: " 
-                            + Guile::scm2string(lst));
-      return 0;
-    }
-}
-
-InputAxis*
-AxisFactory::create_button_axis(SCM lst)
-{
-  InputButton* left  = ButtonFactory::create(gh_car(lst));
-  InputButton* right = ButtonFactory::create(gh_cadr(lst));
-
-  return new ButtonAxis(left, right);
-}
-
-/* EOF */

Copied: trunk/src/input/button_axis.cpp (from rev 341, trunk/src/input/button_axis.cxx)


Property changes on: trunk/src/input/button_axis.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/button_axis.cxx
===================================================================
--- trunk/src/input/button_axis.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/button_axis.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,87 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "input_button.hxx"
-#include "button_axis.hxx"
-
-ButtonAxis::ButtonAxis(InputButton* left, InputButton* right)
-  : left(left), right(right)
-{
-  slots.push_back(left->on_key_down().connect(this, &ButtonAxis::on_left_down));
-  slots.push_back(left->on_key_up().connect  (this, &ButtonAxis::on_left_up));
-
-  slots.push_back(right->on_key_down().connect(this, &ButtonAxis::on_right_down));
-  slots.push_back(right->on_key_up().connect  (this, &ButtonAxis::on_right_up));
-
-  left_state  = false;
-  right_state = false;
-  
-  pos = 0.0f;
-}
-
-void
-ButtonAxis::update(float delta)
-{
-  left->update(delta);
-  right->update(delta);
-
-  float new_pos = 0.0f;
-  if (left_state)
-    {
-      new_pos -= 1.0f;
-    }
-  
-  if (right_state)
-    {
-      new_pos += 1.0f;
-    }
-
-  if (new_pos != pos)
-    {
-      pos = new_pos;
-      move(pos);
-    }
-}
-
-void
-ButtonAxis::on_left_up()
-{
-  left_state = false;
-}
-
-void
-ButtonAxis::on_left_down()
-{
-  left_state = true;
-}
-
-void
-ButtonAxis::on_right_up()
-{
-  right_state = false;
-}
-
-void
-ButtonAxis::on_right_down()
-{
-  right_state = true;
-}
-
-/* EOF */

Copied: trunk/src/input/button_factory.cpp (from rev 341, trunk/src/input/button_factory.cxx)


Property changes on: trunk/src/input/button_factory.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/button_factory.cxx
===================================================================
--- trunk/src/input/button_factory.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/button_factory.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,111 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/joystick.h>
-#include <ClanLib/Display/keyboard.h>
-#include <ClanLib/Core/System/clanstring.h>
-#include "../guile.hxx"
-#include "../feuerkraft_error.hxx"
-#include "input_button.hxx"
-#include "input_axis.hxx"
-#include "input_button_input_device.hxx"
-#include "axis_factory.hxx"
-#include "axis_button.hxx"
-#include "multi_button.hxx"
-#include "button_factory.hxx"
-
-InputButton* 
-ButtonFactory::create(SCM lst)
-{
-  SCM sym = gh_car(lst);
-
-  if (gh_equal_p(sym, gh_symbol2scm("joystick-button")))
-    {
-      return create_joystick_button(gh_cdr(lst));
-    }
-  else if (gh_equal_p(sym, gh_symbol2scm("keyboard-button")))
-    {
-      return create_keyboard_button(gh_cdr(lst));
-    }
-  else if (gh_equal_p(sym, gh_symbol2scm("axis-button")))
-    {
-      return create_axis_button(gh_cdr(lst));
-    }
-  else if (gh_equal_p(sym, gh_symbol2scm("multi-button")))
-    {
-      return create_multi_button(gh_cdr(lst));
-    }
-  else
-    {
-      throw FeuerkraftError("ButtonFactory::create: parse error: '"
-                            + Guile::scm2string(lst) + "'");
-    }
-      
-  return 0;
-}
-
-InputButton*
-ButtonFactory::create_axis_button(SCM lst)
-{
-  InputAxis* axis = AxisFactory::create(gh_car(lst));
-  bool top = gh_scm2bool(gh_cadr(lst));
-  
-  return new AxisButton(axis, top);
-}
-
-InputButton*
-ButtonFactory::create_joystick_button(SCM lst)
-{
-  int device_num = gh_scm2int(gh_car(lst));
-  int button_num = gh_scm2int(gh_cadr(lst));
-  
-  if (device_num >= 0 && device_num < CL_Joystick::get_device_count())
-    return new InputButtonInputDevice(CL_Joystick::get_device(device_num), button_num);
-  else
-    {
-      throw FeuerkraftError("Error: ButtonFactory::create_joystick_button: device out of range"
-                            + CL_String::to(device_num) + " " + Guile::scm2string(lst));
-    }
-}
-
-InputButton*
-ButtonFactory::create_keyboard_button(SCM lst)
-{
-  std::string key_str = Guile::scm2string(gh_car(lst));
-  int key_num         = CL_Keyboard::get_device().string_to_keyid(key_str);
-
-  // FIXME: No error checking
-  return new InputButtonInputDevice(CL_Keyboard::get_device(), key_num);
-}
-
-InputButton*
-ButtonFactory::create_multi_button(SCM lst)
-{
-  MultiButton* button = new MultiButton();
-  
-  while (!gh_null_p(lst))
-    {
-      button->add(create(gh_car(lst)));
-      lst = gh_cdr(lst);
-    }
-  
-  return button;
-}
-
-/* EOF */

Copied: trunk/src/input/controller.cpp (from rev 341, trunk/src/input/controller.cxx)


Property changes on: trunk/src/input/controller.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/controller.cxx
===================================================================
--- trunk/src/input/controller.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/controller.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,90 +0,0 @@
-//  $Id: controller.cxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../assert.hxx"
-#include "controller.hxx"
-
-Controller::Controller()
-{
-  buttons.resize(ControllerDef::get_button_count());
-  axes.resize(ControllerDef::get_axis_count());
-}
-
-float
-Controller::get_axis_state(int name) const
-{
-  AssertMsg(name < int(axes.size()), "Controllor: Unknown AxisName");  
-  return axes[name];
-}
-        
-
-bool
-Controller::get_button_state(int name) const
-{
-  AssertMsg(name < int(buttons.size()), "Controllor: Unknown ButtonName");  
-  return buttons[name];
-}
-
-void
-Controller::set_axis_state(int name, float pos)
-{
-  AssertMsg(name < static_cast<int>(axes.size()), "Controllor: Unknown AxisName");
-  axes[name] = pos;
-}
-
-void
-Controller::set_button_state(int name, bool down)
-{
-  AssertMsg(name < static_cast<int>(buttons.size()), "Controller: Unknown ButtonName");
-  buttons[name] = down;
-}
-
-void
-Controller::add_axis_event(int name, float pos)
-{
-  InputEvent event;
-  event.type = AXIS_EVENT;
-  event.axis.name = name;
-  event.axis.pos  = pos;
-  events.push_back(event);
-}
-
-void
-Controller::add_button_event(int name, bool down)
-{
-  InputEvent event;
-  event.type = BUTTON_EVENT;
-  event.button.name = name;
-  event.button.down = down;
-  events.push_back(event);
-}
-
-InputEventLst
-Controller::get_events() const
-{
-  return events;
-}
-
-void
-Controller::set_events(const InputEventLst& lst)
-{
-  events = lst;
-}
-
-/* EOF */

Copied: trunk/src/input/input_axis_input_device.cpp (from rev 341, trunk/src/input/input_axis_input_device.cxx)


Property changes on: trunk/src/input/input_axis_input_device.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_axis_input_device.cxx
===================================================================
--- trunk/src/input/input_axis_input_device.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/input_axis_input_device.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,38 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/input_event.h>
-#include "input_axis_input_device.hxx"
-
-InputAxisInputDevice::InputAxisInputDevice(CL_InputDevice& dev, int num)
-  : dev(dev), axis_num(num)
-{
-  slots.push_back(dev.sig_axis_move().connect(this, &InputAxisInputDevice::on_axis_move));
-}
-
-void
-InputAxisInputDevice::on_axis_move(const CL_InputEvent& event)
-{
-  if (event.id == axis_num)
-    {
-      move(event.axis_pos);
-    }
-}
-
-/* EOF */

Copied: trunk/src/input/input_button_input_device.cpp (from rev 341, trunk/src/input/input_button_input_device.cxx)


Property changes on: trunk/src/input/input_button_input_device.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_button_input_device.cxx
===================================================================
--- trunk/src/input/input_button_input_device.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/input_button_input_device.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,49 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <ClanLib/Display/input_event.h>
-#include "input_button_input_device.hxx"
-
-InputButtonInputDevice::InputButtonInputDevice(CL_InputDevice& dev_, int keycode_)
-  : dev(dev_), keycode(keycode_)
-{
-  slots.push_back(dev.sig_key_down().connect(this, &InputButtonInputDevice::on_key_down));
-  slots.push_back(dev.sig_key_up().connect(this, &InputButtonInputDevice::on_key_up));
-}
-
-void
-InputButtonInputDevice::on_key_down(const CL_InputEvent& event)
-{
-  if (keycode == event.id)
-    {
-      button_down();
-    }
-}
-
-void
-InputButtonInputDevice::on_key_up(const CL_InputEvent& event)
-{
-  if (keycode == event.id)
-    {
-      button_up();
-    }
-}
-
-/* EOF */

Copied: trunk/src/input/input_manager.cpp (from rev 341, trunk/src/input/input_manager.cxx)


Property changes on: trunk/src/input/input_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_manager.cxx
===================================================================
--- trunk/src/input/input_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/input_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,98 +0,0 @@
-//  $Id: input_manager.cxx,v 1.4 2003/08/20 00:15:10 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <assert.h>
-#include <stdexcept>
-#include <sstream>
-#include <ClanLib/Display/joystick.h>
-
-#include "../feuerkraft_error.hxx"
-#include "input_manager_custom.hxx"
-#include "input_manager_player.hxx"
-#include "input_manager_impl.hxx"
-#include "input_recorder.hxx"
-#include "input_manager.hxx"
-
-InputManagerImpl* InputManager::impl = 0;
-InputRecorder* InputManager::recorder = 0;
-
-void
-InputManager::init_playback(const std::string& filename)
-{
-  impl = new InputManagerPlayer(filename);
-}
-
-void
-InputManager::init(const std::string& filename)
-{
-  std::cout << "InputManager::init(" << filename << ")" << std::endl;
-  SCM port = scm_open_file(gh_str02scm(filename.c_str()),
-                           gh_str02scm("r"));
-  SCM lst  = scm_read(port);
-
-  if (gh_equal_p(gh_symbol2scm("feuerkraft-controller"), gh_car(lst)))
-    {
-      impl = new InputManagerCustom(gh_cdr(lst));
-    }
-  else
-    {
-      throw FeuerkraftError("Error: not a valid controller file: " + filename);
-    }
-  scm_close_port(port);
-}
-
-void
-InputManager::setup_recorder(const std::string& filename)
-{
-  if (recorder)
-    delete recorder;
-
-  recorder = new InputRecorder(filename);
-}
-
-void 
-InputManager::deinit()
-{
-  delete impl;
-}
-
-void
-InputManager::update(float delta)
-{
-  assert(impl);
-  impl->update(delta);
-  if (recorder)
-    recorder->record(get_controller());
-}
-
-Controller
-InputManager::get_controller()
-{
-  assert(impl);
-  return impl->get_controller();
-}
-
-void
-InputManager::clear()
-{
-  impl->clear();
-}
-
-/* EOF */

Copied: trunk/src/input/input_manager_custom.cpp (from rev 341, trunk/src/input/input_manager_custom.cxx)


Property changes on: trunk/src/input/input_manager_custom.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_manager_custom.cxx
===================================================================
--- trunk/src/input/input_manager_custom.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/input_manager_custom.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,141 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <ClanLib/Display/keyboard.h>
-#include <ClanLib/Display/joystick.h>
-#include <ClanLib/Display/display_iostream.h>
-#include <ClanLib/Display/keys.h>
-
-#include "../guile.hxx"
-#include "../assert.hxx"
-#include "../controller_def.hxx"
-#include "input_button_input_device.hxx"
-#include "input_axis_input_device.hxx"
-#include "button_factory.hxx"
-#include "axis_factory.hxx"
-
-#include "input_manager_custom.hxx"
-
-InputManagerCustom::InputManagerCustom(SCM lst)
-{
-  init(lst);
-
-  for (int i = 0; i < (int)buttons.size(); ++i)
-    {
-      if (buttons[i])
-        {
-          slots.push_back(buttons[i]->on_key_down().connect(this, &InputManagerCustom::on_button_down, i));
-          slots.push_back(buttons[i]->on_key_up().connect  (this, &InputManagerCustom::on_button_up,   i));
-        }
-      else
-        {
-          std::cout << "# Warrning: Button '" << ControllerDef::button_id2name(i)
-                    << "' not configured and will not be usable" << std::endl;
-        }
-    }
-
-  for (int i = 0; i < (int)axes.size(); ++i)
-    {
-      if (axes[i])
-        {
-          slots.push_back(axes[i]->on_move().connect(this, &InputManagerCustom::on_axis_move, i));
-        }
-      else
-        {
-          std::cout << "# Warrning: Axis '" << ControllerDef::axis_id2name(i)
-                    << "' not configured and will not be usable" << std::endl;
-        }
-    }
-}
-
-void 
-InputManagerCustom::init(SCM lst)
-{
-  buttons.resize(ControllerDef::get_button_count());
-  axes.resize(ControllerDef::get_axis_count());
-  
-  while (gh_pair_p(lst))
-    {
-      SCM sym  = gh_caar(lst);
-      SCM data = gh_cadar(lst);
-
-      std::string name = Guile::symbol2string(sym);
-
-      int id = ControllerDef::button_name2id(name);
-      if (id != -1)
-        {
-          buttons[id] = ButtonFactory::create(data);
-        }
-      else
-        {
-          id = ControllerDef::axis_name2id(name);
-          if (id != -1)
-            {
-              axes[id] = AxisFactory::create(data);
-            }
-          else
-            {
-              std::cout << "# Warning: InputManagerCustom::init: Error unknown tag: " 
-                        << Guile::scm2string(sym) << std::endl;
-            }
-        }
-
-      lst = gh_cdr(lst);
-    }
-}  
-
-void
-InputManagerCustom::on_axis_move(float pos, int name)
-{
-  add_axis_event(name, pos);
-  controller.set_axis_state(name, pos);
-}
-
-void
-InputManagerCustom::on_button_up(int name)
-{
-  add_button_event(name, false);
-  controller.set_button_state(name, false);
-}
-
-void
-InputManagerCustom::on_button_down(int name)
-{
-  add_button_event(name, true);
-  controller.set_button_state(name, true);
-}
-
-void
-InputManagerCustom::update(float delta)
-{
-  for (int i = 0; i < (int)buttons.size(); ++i)
-    {
-      if (buttons[i])
-        buttons[i]->update(delta);
-    }
-
-  for (int i = 0; i < (int)axes.size(); ++i)
-    {
-      if (axes[i])
-        axes[i]->update(delta);
-    }
-}
-
-/* EOF */

Copied: trunk/src/input/input_manager_impl.cpp (from rev 341, trunk/src/input/input_manager_impl.cxx)


Property changes on: trunk/src/input/input_manager_impl.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_manager_impl.cxx
===================================================================
--- trunk/src/input/input_manager_impl.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/input_manager_impl.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,61 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "input_manager_impl.hxx"
-
-InputEventLst
-InputManagerImpl::get_events()
-{
-  return events;
-}
-
-Controller
-InputManagerImpl::get_controller()
-{
-  controller.set_events(events);
-  return controller;
-}
-
-void
-InputManagerImpl::add_axis_event(int name, float pos)
-{
-  InputEvent event;
-  event.type = AXIS_EVENT;
-  event.axis.name = name;
-  event.axis.pos  = pos;
-  events.push_back(event);
-}
-
-void
-InputManagerImpl::add_button_event(int name, bool down)
-{
-  InputEvent event;
-  event.type = BUTTON_EVENT;
-  event.button.name = name;
-  event.button.down = down;
-  events.push_back(event);
-}
-
-void
-InputManagerImpl::clear()
-{
-  events.clear();
-}
-
-/* EOF */

Copied: trunk/src/input/input_manager_player.cpp (from rev 341, trunk/src/input/input_manager_player.cxx)


Property changes on: trunk/src/input/input_manager_player.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_manager_player.cxx
===================================================================
--- trunk/src/input/input_manager_player.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/input_manager_player.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,93 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../guile.hxx"
-#include "input_manager_player.hxx"
-
-InputManagerPlayer::InputManagerPlayer(const std::string& filename)
-{
-  std::cout << "InputManagerPlayer::InputManagerPlayer(" << filename << ")" << std::endl;
-  entry_counter = 0;
-  SCM port = scm_open_file(gh_str02scm(filename.c_str()),
-                           gh_str02scm("r"));
-  SCM entry;
-  while(scm_eof_object_p(entry = scm_read(port)) == SCM_BOOL_F)
-    {
-      InputEventLst lst;
-      int entry_num = gh_scm2int(gh_cadr(entry));
-      entry = gh_cddr(entry);
-      
-      while(gh_pair_p(entry))
-        {
-          lst.push_back(scm2event(gh_car(entry)));
-          entry = gh_cdr(entry);
-        }
-      entries.push(Entry(entry_num, lst));
-    }
-  scm_close_port(port);
-}
-
-InputEvent
-InputManagerPlayer::scm2event(SCM entry)
-{
-  InputEvent event;
-  SCM sym  = gh_car(entry);
-  SCM data = gh_cdr(entry);
-
-  if (gh_equal_p(gh_symbol2scm("axis"), sym)) 
-    {
-      event.type = AXIS_EVENT;
-      event.axis.name = gh_scm2int(gh_car(data));
-      event.axis.pos  = gh_scm2double(gh_cadr(data));
-    } 
-  else if (gh_equal_p(gh_symbol2scm("button"), sym))
-    {
-      event.type = BUTTON_EVENT;
-      event.button.name = gh_scm2int(gh_car(data));
-      event.button.down = gh_scm2int(gh_cadr(data));
-    } 
-  else 
-    {
-      std::cout << "scm2event: Unknown sym: " << Guile::scm2string(sym) << std::endl;
-    }
-  return event;
-}
-  
-void
-InputManagerPlayer::update(float delta)
-{
-  if (entries.front().entry_num == entry_counter)
-    {
-      events = entries.front().events;
-      
-      for (InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
-        {
-          if (i->type == AXIS_EVENT)
-            controller.set_axis_state(i->axis.name, i->axis.pos);
-          else if  (i->type == BUTTON_EVENT)
-            controller.set_button_state(i->button.name, i->button.down);
-        }
-      entries.pop();
-    }
-
-  entry_counter += 1;
-}
-
-/* EOF */

Copied: trunk/src/input/input_recorder.cpp (from rev 341, trunk/src/input/input_recorder.cxx)


Property changes on: trunk/src/input/input_recorder.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/input_recorder.cxx
===================================================================
--- trunk/src/input/input_recorder.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/input_recorder.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,61 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "input_recorder.hxx"
-
-InputRecorder::InputRecorder(const std::string& filename)
-  : out(filename.c_str())
-{
-  entry_counter = 0;
-}
-
-InputRecorder::~InputRecorder()
-{
-  out.close();
-}
-
-void
-InputRecorder::record(const Controller& controller)
-{
-  InputEventLst lst = controller.get_events();
-
-  if (!lst.empty())
-    {
-      out << "(entry " << entry_counter << std::endl;
- 
-      for (InputEventLst::iterator i = lst.begin(); i != lst.end(); ++i)
-        {
-          switch(i->type)
-            {
-            case AXIS_EVENT:
-              out << "  (axis " << i->axis.name << " " << i->axis.get_pos() << ")" << std::endl;
-              break;
-          
-            case BUTTON_EVENT:
-              out << "  (button " << i->button.name << " " << i->button.down << ")" << std::endl;
-              break;
-            }
-        }
-      out << ")\n" << std::endl;
-    }
-
-  entry_counter += 1;
-}
-
-/* EOF */

Copied: trunk/src/input/multi_button.cpp (from rev 341, trunk/src/input/multi_button.cxx)


Property changes on: trunk/src/input/multi_button.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/input/multi_button.cxx
===================================================================
--- trunk/src/input/multi_button.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/input/multi_button.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,65 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "multi_button.hxx"
-
-MultiButton::MultiButton()
-{
-  press_count = 0;
-}
-
-void
-MultiButton::add(InputButton* button)
-{
-  buttons.push_back(button);
-  slots.push_back(button->on_key_down().connect(this, &MultiButton::pressed));
-  slots.push_back(button->on_key_up().connect(this, &MultiButton::released));
-}
-
-void
-MultiButton::update(float delta)
-{
-  for (Buttons::iterator i = buttons.begin(); i != buttons.end(); ++i)
-    (*i)->update(delta);
-}
-
-void
-MultiButton::released()
-{
-  press_count -= 1;
-
-  if (press_count == 0)
-    button_up();
-
-  // FIXME: Workaround
-  if (press_count < 0)
-    press_count = 0;
-}
-
-void
-MultiButton::pressed()
-{
-  press_count += 1;
-
-  if (press_count == 1)
-    button_down();
-}
-
-/* EOF */

Copied: trunk/src/ipc.cpp (from rev 341, trunk/src/ipc.cxx)


Property changes on: trunk/src/ipc.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/ipc.cxx
===================================================================
--- trunk/src/ipc.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/ipc.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,98 +0,0 @@
-//  $Id: ipc.cxx,v 1.1 2003/06/04 13:16:17 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <stdexcept>
-#include <sstream>
-#include <iostream>
-#include <unistd.h>
-#include <sys/types.h>
-#include <fcntl.h>
-#include <errno.h>
-#include <string.h>
-#include <sys/stat.h>
-
-#include "ipc.hxx"
-
-IPC::IPC(const std::string& arg_filename)
-  : filename(arg_filename)
-{
-  if (mkfifo(filename.c_str(), S_IREAD | S_IWRITE) != 0)
-    {
-      throw std::runtime_error(strerror(errno));
-    }
-
-  if ((stream_fd = open(filename.c_str(), O_RDONLY)) == -1)
-    {
-      throw std::runtime_error(strerror(errno));
-    }
-}
-
-IPC::~IPC()
-{
-  close(stream_fd);
-  unlink(filename.c_str());
-}
-
-void 
-IPC::update()
-{
-  if (something_to_read())
-    {
-      const ssize_t bufsize = 4096;
-      char buf[bufsize];
-      std::stringstream complete_buf;
-
-      ssize_t read_size;
-      do
-        {
-          read_size = read(stream_fd, buf, bufsize);
-
-          complete_buf.write(buf, read_size);
-        }
-      while (read_size == bufsize);
-
-      // Reopen the stream for a new bunch of input
-      close(stream_fd);
-      if ((stream_fd = open(filename.c_str(), O_RDONLY)) == -1)
-        {
-          throw std::runtime_error(strerror(errno));
-        }
-
-      std::cout << "[[[\n" 
-                << complete_buf.str() 
-                << "]]]\n";
-    }
-}
-
-bool
-IPC::something_to_read()
-{
-  fd_set fset;
-  struct timeval timeout;
-
-  FD_ZERO(&fset);
-  FD_SET(stream_fd, &fset);
-
-  timeout.tv_sec = 0;
-  timeout.tv_usec = 0;
-
-  return (select (FD_SETSIZE, &fset, NULL, NULL, &timeout) > 0);
-}
-
-/* EOF */

Copied: trunk/src/keyboard_manager.cpp (from rev 341, trunk/src/keyboard_manager.cxx)


Property changes on: trunk/src/keyboard_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/keyboard_manager.cxx
===================================================================
--- trunk/src/keyboard_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/keyboard_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,82 +0,0 @@
-//  $Id: keyboard_manager.cxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <ClanLib/Display/keyboard.h>
-#include <ClanLib/Display/joystick.h>
-#include <ClanLib/Display/mouse.h>
-#include "command_line_arguments.hxx"
-#include "keyboard_manager.hxx"
-
-KeyboardManager* KeyboardManager::instance_ = 0;
-
-KeyboardManager::KeyboardManager()
-{
-  slots.push_back(CL_Keyboard::sig_key_down().connect(this, &KeyboardManager::button_down));
-  slots.push_back(CL_Keyboard::sig_key_up().connect(this, &KeyboardManager::button_up));
-  slots.push_back(CL_Mouse::sig_key_down().connect(this, &KeyboardManager::button_down));
-  slots.push_back(CL_Mouse::sig_key_up().connect(this, &KeyboardManager::button_up));
-
-  if (args->joystick != -1)
-    {
-      for (int i = 0; i < CL_Joystick::get_device_count(); ++i)
-        {
-          CL_InputDevice joy = CL_Joystick::get_device(i);
-          slots.push_back(joy.sig_key_up().connect(this, &KeyboardManager::button_up));
-          slots.push_back(joy.sig_key_down().connect(this, &KeyboardManager::button_down));
-        }
-    }
-}
-
-KeyboardManager::~KeyboardManager()
-{
-  for(Callbacks::iterator i = callbacks.begin(); i != callbacks.end(); ++i)
-    {
-      delete *i;
-    }
-}
-
-void
-KeyboardManager::button_up(const CL_InputEvent& event)
-{
-}
-
-void
-KeyboardManager::button_down(const CL_InputEvent& event)
-{
-  for(Callbacks::iterator i = callbacks.begin(); i != callbacks.end(); ++i)
-    {
-      if (event.device.get_type() != CL_InputDevice::joystick)
-        {
-          if (event.id == (*i)->key_id)
-            {
-              (*i)->run();
-            }
-        }
-      else
-        {
-          if (event.id == (*i)->key_id - 1000)
-            {
-              (*i)->run();
-            }
-        }
-    }
-}
-
-/* EOF */

Copied: trunk/src/keys.cpp (from rev 341, trunk/src/keys.cxx)


Property changes on: trunk/src/keys.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/keys.cxx
===================================================================
--- trunk/src/keys.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/keys.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,273 +0,0 @@
-//  $Id: keys.cxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <string.h>
-#include <ClanLib/display.h>
-#include "keys.hxx"
-
-#ifdef WIN32
-#  define strcasecmp _stricmp
-#endif
-
-// FIXME: Not all keys CL_KEY_'s work on my X11, so I had to manually remove them!
-const char* keyid2string(int id)
-{
-  switch (id)
-    {
-    case 1001: return "JOY_1";
-    case 1002: return "JOY_2";
-    case 1003: return "JOY_3";
-    case 1004: return "JOY_4";
-
-    case CL_MOUSE_LEFT: return "MOUSE_LEFT"; 
-    case CL_MOUSE_RIGHT: return "MOUSE_RIGHT"; 
-    case CL_MOUSE_MIDDLE: return "MOUSE_MIDDLE"; 
-    case CL_MOUSE_WHEEL_UP: return "MOUSE_WHEEL_UP"; 
-    case CL_MOUSE_WHEEL_DOWN: return "MOUSE_WHEEL_DOWN"; 
-    case CL_MOUSE_XBUTTON1: return "MOUSE_XBUTTON1"; 
-    case CL_MOUSE_XBUTTON2: return "MOUSE_XBUTTON2"; 
-
-    case CL_KEY_BACKSPACE: return "KEY_BACKSPACE"; 
-    case CL_KEY_TAB: return "KEY_TAB"; 
-    case CL_KEY_CLEAR: return "KEY_CLEAR"; 
-    case CL_KEY_RETURN: return "KEY_RETURN"; 
-    case CL_KEY_MENU: return "KEY_MENU"; 
-    case CL_KEY_PAUSE: return "KEY_PAUSE"; 
-    case CL_KEY_KANJI: return "KEY_KANJI"; 
-    case CL_KEY_ESCAPE: return "KEY_ESCAPE"; 
-    case CL_KEY_SPACE: return "KEY_SPACE"; 
-    case CL_KEY_PRIOR: return "KEY_PRIOR"; 
-    case CL_KEY_NEXT: return "KEY_NEXT"; 
-    case CL_KEY_END: return "KEY_END"; 
-    case CL_KEY_HOME: return "KEY_HOME"; 
-    case CL_KEY_LEFT: return "KEY_LEFT"; 
-    case CL_KEY_UP: return "KEY_UP"; 
-    case CL_KEY_RIGHT: return "KEY_RIGHT"; 
-    case CL_KEY_DOWN: return "KEY_DOWN"; 
-    case CL_KEY_SELECT: return "KEY_SELECT"; 
-    case CL_KEY_PRINT: return "KEY_PRINT"; 
-    case CL_KEY_EXECUTE: return "KEY_EXECUTE"; 
-    case CL_KEY_INSERT: return "KEY_INSERT"; 
-    case CL_KEY_DELETE: return "KEY_DELETE"; 
-    case CL_KEY_HELP: return "KEY_HELP"; 
-    case CL_KEY_0: return "KEY_0"; 
-    case CL_KEY_1: return "KEY_1"; 
-    case CL_KEY_2: return "KEY_2"; 
-    case CL_KEY_3: return "KEY_3"; 
-    case CL_KEY_4: return "KEY_4"; 
-    case CL_KEY_5: return "KEY_5"; 
-    case CL_KEY_6: return "KEY_6"; 
-    case CL_KEY_7: return "KEY_7"; 
-    case CL_KEY_8: return "KEY_8"; 
-    case CL_KEY_9: return "KEY_9"; 
-    case CL_KEY_A: return "KEY_A"; 
-    case CL_KEY_B: return "KEY_B"; 
-    case CL_KEY_C: return "KEY_C"; 
-    case CL_KEY_D: return "KEY_D"; 
-    case CL_KEY_E: return "KEY_E"; 
-    case CL_KEY_F: return "KEY_F"; 
-    case CL_KEY_G: return "KEY_G"; 
-    case CL_KEY_H: return "KEY_H"; 
-    case CL_KEY_I: return "KEY_I"; 
-    case CL_KEY_J: return "KEY_J"; 
-    case CL_KEY_K: return "KEY_K"; 
-    case CL_KEY_L: return "KEY_L"; 
-    case CL_KEY_M: return "KEY_M"; 
-    case CL_KEY_N: return "KEY_N"; 
-    case CL_KEY_O: return "KEY_O"; 
-    case CL_KEY_P: return "KEY_P"; 
-    case CL_KEY_Q: return "KEY_Q"; 
-    case CL_KEY_R: return "KEY_R"; 
-    case CL_KEY_S: return "KEY_S"; 
-    case CL_KEY_T: return "KEY_T"; 
-    case CL_KEY_U: return "KEY_U"; 
-    case CL_KEY_V: return "KEY_V"; 
-    case CL_KEY_W: return "KEY_W"; 
-    case CL_KEY_X: return "KEY_X"; 
-    case CL_KEY_Y: return "KEY_Y"; 
-    case CL_KEY_Z: return "KEY_Z"; 
-    case CL_KEY_NUMPAD0: return "KEY_NUMPAD0"; 
-    case CL_KEY_NUMPAD1: return "KEY_NUMPAD1"; 
-    case CL_KEY_NUMPAD2: return "KEY_NUMPAD2"; 
-    case CL_KEY_NUMPAD3: return "KEY_NUMPAD3"; 
-    case CL_KEY_NUMPAD4: return "KEY_NUMPAD4"; 
-    case CL_KEY_NUMPAD5: return "KEY_NUMPAD5"; 
-    case CL_KEY_NUMPAD6: return "KEY_NUMPAD6"; 
-    case CL_KEY_NUMPAD7: return "KEY_NUMPAD7"; 
-    case CL_KEY_NUMPAD8: return "KEY_NUMPAD8"; 
-    case CL_KEY_NUMPAD9: return "KEY_NUMPAD9"; 
-    case CL_KEY_F1: return "KEY_F1"; 
-    case CL_KEY_F2: return "KEY_F2"; 
-    case CL_KEY_F3: return "KEY_F3"; 
-    case CL_KEY_F4: return "KEY_F4"; 
-    case CL_KEY_F5: return "KEY_F5"; 
-    case CL_KEY_F6: return "KEY_F6"; 
-    case CL_KEY_F7: return "KEY_F7"; 
-    case CL_KEY_F8: return "KEY_F8"; 
-    case CL_KEY_F9: return "KEY_F9"; 
-    case CL_KEY_F10: return "KEY_F10"; 
-    case CL_KEY_F11: return "KEY_F11"; 
-    case CL_KEY_F12: return "KEY_F12"; 
-    case CL_KEY_F13: return "KEY_F13"; 
-    case CL_KEY_F14: return "KEY_F14"; 
-    case CL_KEY_F15: return "KEY_F15"; 
-    case CL_KEY_F16: return "KEY_F16"; 
-    case CL_KEY_F17: return "KEY_F17"; 
-    case CL_KEY_F18: return "KEY_F18"; 
-    case CL_KEY_F19: return "KEY_F19"; 
-    case CL_KEY_F20: return "KEY_F20"; 
-    case CL_KEY_F21: return "KEY_F21"; 
-    case CL_KEY_F22: return "KEY_F22"; 
-    case CL_KEY_F23: return "KEY_F23"; 
-    case CL_KEY_F24: return "KEY_F24"; 
-    case CL_KEY_NUMLOCK: return "KEY_NUMLOCK"; 
-    case CL_KEY_SCROLL: return "KEY_SCROLL"; 
-    case CL_KEY_LSHIFT: return "KEY_LSHIFT"; 
-    case CL_KEY_RSHIFT: return "KEY_RSHIFT"; 
-    case CL_KEY_LCONTROL: return "KEY_LCONTROL"; 
-    case CL_KEY_RCONTROL: return "KEY_RCONTROL"; 
-    case CL_KEY_LMENU: return "KEY_LMENU"; 
-    case CL_KEY_RMENU: return "KEY_RMENU"; 
-    default:
-      return "<unknown>";
-    }
-}
-
-int string2keyid(const char* key)
-{
-  if      (strcasecmp(key, "JOY_1") == 0) { return 1001; }
-  else if (strcasecmp(key, "JOY_2") == 0) { return 1002; }
-  else if (strcasecmp(key, "JOY_3") == 0) { return 1003; }
-  else if (strcasecmp(key, "JOY_4") == 0) { return 1004; }
-
-  else if (strcasecmp(key, "MOUSE_LEFT") == 0) { return CL_MOUSE_LEFT; }
-  else if (strcasecmp(key, "MOUSE_RIGHT") == 0) { return CL_MOUSE_RIGHT; }
-  else if (strcasecmp(key, "MOUSE_MIDDLE") == 0) { return CL_MOUSE_MIDDLE; }
-  else if (strcasecmp(key, "MOUSE_WHEEL_UP") == 0) { return CL_MOUSE_WHEEL_UP; }
-  else if (strcasecmp(key, "MOUSE_WHEEL_DOWN") == 0) { return CL_MOUSE_WHEEL_DOWN; }
-  else if (strcasecmp(key, "MOUSE_XBUTTON1") == 0) { return CL_MOUSE_XBUTTON1; }
-  else if (strcasecmp(key, "MOUSE_XBUTTON2") == 0) { return CL_MOUSE_XBUTTON2; }
-
-  else if (strcasecmp(key, "KEY_BACKSPACE") == 0) { return CL_KEY_BACKSPACE; }
-  else if (strcasecmp(key, "KEY_TAB") == 0) { return CL_KEY_TAB; }
-  else if (strcasecmp(key, "KEY_CLEAR") == 0) { return CL_KEY_CLEAR; }
-  else if (strcasecmp(key, "KEY_RETURN") == 0) { return CL_KEY_RETURN; }
-  else if (strcasecmp(key, "KEY_SHIFT") == 0) { return CL_KEY_SHIFT; }
-  else if (strcasecmp(key, "KEY_CONTROL") == 0) { return CL_KEY_CONTROL; }
-  else if (strcasecmp(key, "KEY_MENU") == 0) { return CL_KEY_MENU; }
-  else if (strcasecmp(key, "KEY_PAUSE") == 0) { return CL_KEY_PAUSE; }
-  else if (strcasecmp(key, "KEY_KANJI") == 0) { return CL_KEY_KANJI; }
-  else if (strcasecmp(key, "KEY_ESCAPE") == 0) { return CL_KEY_ESCAPE; }
-  else if (strcasecmp(key, "KEY_SPACE") == 0) { return CL_KEY_SPACE; }
-  else if (strcasecmp(key, "KEY_PRIOR") == 0) { return CL_KEY_PRIOR; }
-  else if (strcasecmp(key, "KEY_NEXT") == 0) { return CL_KEY_NEXT; }
-  else if (strcasecmp(key, "KEY_END") == 0) { return CL_KEY_END; }
-  else if (strcasecmp(key, "KEY_HOME") == 0) { return CL_KEY_HOME; }
-  else if (strcasecmp(key, "KEY_LEFT") == 0) { return CL_KEY_LEFT; }
-  else if (strcasecmp(key, "KEY_UP") == 0) { return CL_KEY_UP; }
-  else if (strcasecmp(key, "KEY_RIGHT") == 0) { return CL_KEY_RIGHT; }
-  else if (strcasecmp(key, "KEY_DOWN") == 0) { return CL_KEY_DOWN; }
-  else if (strcasecmp(key, "KEY_SELECT") == 0) { return CL_KEY_SELECT; }
-  else if (strcasecmp(key, "KEY_PRINT") == 0) { return CL_KEY_PRINT; }
-  else if (strcasecmp(key, "KEY_EXECUTE") == 0) { return CL_KEY_EXECUTE; }
-  else if (strcasecmp(key, "KEY_INSERT") == 0) { return CL_KEY_INSERT; }
-  else if (strcasecmp(key, "KEY_DELETE") == 0) { return CL_KEY_DELETE; }
-  else if (strcasecmp(key, "KEY_HELP") == 0) { return CL_KEY_HELP; }
-  else if (strcasecmp(key, "KEY_0") == 0) { return CL_KEY_0; }
-  else if (strcasecmp(key, "KEY_1") == 0) { return CL_KEY_1; }
-  else if (strcasecmp(key, "KEY_2") == 0) { return CL_KEY_2; }
-  else if (strcasecmp(key, "KEY_3") == 0) { return CL_KEY_3; }
-  else if (strcasecmp(key, "KEY_4") == 0) { return CL_KEY_4; }
-  else if (strcasecmp(key, "KEY_5") == 0) { return CL_KEY_5; }
-  else if (strcasecmp(key, "KEY_6") == 0) { return CL_KEY_6; }
-  else if (strcasecmp(key, "KEY_7") == 0) { return CL_KEY_7; }
-  else if (strcasecmp(key, "KEY_8") == 0) { return CL_KEY_8; }
-  else if (strcasecmp(key, "KEY_9") == 0) { return CL_KEY_9; }
-  else if (strcasecmp(key, "KEY_A") == 0) { return CL_KEY_A; }
-  else if (strcasecmp(key, "KEY_B") == 0) { return CL_KEY_B; }
-  else if (strcasecmp(key, "KEY_C") == 0) { return CL_KEY_C; }
-  else if (strcasecmp(key, "KEY_D") == 0) { return CL_KEY_D; }
-  else if (strcasecmp(key, "KEY_E") == 0) { return CL_KEY_E; }
-  else if (strcasecmp(key, "KEY_F") == 0) { return CL_KEY_F; }
-  else if (strcasecmp(key, "KEY_G") == 0) { return CL_KEY_G; }
-  else if (strcasecmp(key, "KEY_H") == 0) { return CL_KEY_H; }
-  else if (strcasecmp(key, "KEY_I") == 0) { return CL_KEY_I; }
-  else if (strcasecmp(key, "KEY_J") == 0) { return CL_KEY_J; }
-  else if (strcasecmp(key, "KEY_K") == 0) { return CL_KEY_K; }
-  else if (strcasecmp(key, "KEY_L") == 0) { return CL_KEY_L; }
-  else if (strcasecmp(key, "KEY_M") == 0) { return CL_KEY_M; }
-  else if (strcasecmp(key, "KEY_N") == 0) { return CL_KEY_N; }
-  else if (strcasecmp(key, "KEY_O") == 0) { return CL_KEY_O; }
-  else if (strcasecmp(key, "KEY_P") == 0) { return CL_KEY_P; }
-  else if (strcasecmp(key, "KEY_Q") == 0) { return CL_KEY_Q; }
-  else if (strcasecmp(key, "KEY_R") == 0) { return CL_KEY_R; }
-  else if (strcasecmp(key, "KEY_S") == 0) { return CL_KEY_S; }
-  else if (strcasecmp(key, "KEY_T") == 0) { return CL_KEY_T; }
-  else if (strcasecmp(key, "KEY_U") == 0) { return CL_KEY_U; }
-  else if (strcasecmp(key, "KEY_V") == 0) { return CL_KEY_V; }
-  else if (strcasecmp(key, "KEY_W") == 0) { return CL_KEY_W; }
-  else if (strcasecmp(key, "KEY_X") == 0) { return CL_KEY_X; }
-  else if (strcasecmp(key, "KEY_Y") == 0) { return CL_KEY_Y; }
-  else if (strcasecmp(key, "KEY_Z") == 0) { return CL_KEY_Z; }
-  else if (strcasecmp(key, "KEY_NUMPAD0") == 0) { return CL_KEY_NUMPAD0; }
-  else if (strcasecmp(key, "KEY_NUMPAD1") == 0) { return CL_KEY_NUMPAD1; }
-  else if (strcasecmp(key, "KEY_NUMPAD2") == 0) { return CL_KEY_NUMPAD2; }
-  else if (strcasecmp(key, "KEY_NUMPAD3") == 0) { return CL_KEY_NUMPAD3; }
-  else if (strcasecmp(key, "KEY_NUMPAD4") == 0) { return CL_KEY_NUMPAD4; }
-  else if (strcasecmp(key, "KEY_NUMPAD5") == 0) { return CL_KEY_NUMPAD5; }
-  else if (strcasecmp(key, "KEY_NUMPAD6") == 0) { return CL_KEY_NUMPAD6; }
-  else if (strcasecmp(key, "KEY_NUMPAD7") == 0) { return CL_KEY_NUMPAD7; }
-  else if (strcasecmp(key, "KEY_NUMPAD8") == 0) { return CL_KEY_NUMPAD8; }
-  else if (strcasecmp(key, "KEY_NUMPAD9") == 0) { return CL_KEY_NUMPAD9; }
-  else if (strcasecmp(key, "KEY_F1") == 0) { return CL_KEY_F1; }
-  else if (strcasecmp(key, "KEY_F2") == 0) { return CL_KEY_F2; }
-  else if (strcasecmp(key, "KEY_F3") == 0) { return CL_KEY_F3; }
-  else if (strcasecmp(key, "KEY_F4") == 0) { return CL_KEY_F4; }
-  else if (strcasecmp(key, "KEY_F5") == 0) { return CL_KEY_F5; }
-  else if (strcasecmp(key, "KEY_F6") == 0) { return CL_KEY_F6; }
-  else if (strcasecmp(key, "KEY_F7") == 0) { return CL_KEY_F7; }
-  else if (strcasecmp(key, "KEY_F8") == 0) { return CL_KEY_F8; }
-  else if (strcasecmp(key, "KEY_F9") == 0) { return CL_KEY_F9; }
-  else if (strcasecmp(key, "KEY_F10") == 0) { return CL_KEY_F10; }
-  else if (strcasecmp(key, "KEY_F11") == 0) { return CL_KEY_F11; }
-  else if (strcasecmp(key, "KEY_F12") == 0) { return CL_KEY_F12; }
-  else if (strcasecmp(key, "KEY_F13") == 0) { return CL_KEY_F13; }
-  else if (strcasecmp(key, "KEY_F14") == 0) { return CL_KEY_F14; }
-  else if (strcasecmp(key, "KEY_F15") == 0) { return CL_KEY_F15; }
-  else if (strcasecmp(key, "KEY_F16") == 0) { return CL_KEY_F16; }
-  else if (strcasecmp(key, "KEY_F17") == 0) { return CL_KEY_F17; }
-  else if (strcasecmp(key, "KEY_F18") == 0) { return CL_KEY_F18; }
-  else if (strcasecmp(key, "KEY_F19") == 0) { return CL_KEY_F19; }
-  else if (strcasecmp(key, "KEY_F20") == 0) { return CL_KEY_F20; }
-  else if (strcasecmp(key, "KEY_F21") == 0) { return CL_KEY_F21; }
-  else if (strcasecmp(key, "KEY_F22") == 0) { return CL_KEY_F22; }
-  else if (strcasecmp(key, "KEY_F23") == 0) { return CL_KEY_F23; }
-  else if (strcasecmp(key, "KEY_F24") == 0) { return CL_KEY_F24; }
-  else if (strcasecmp(key, "KEY_NUMLOCK") == 0) { return CL_KEY_NUMLOCK; }
-  else if (strcasecmp(key, "KEY_SCROLL") == 0) { return CL_KEY_SCROLL; }
-  else if (strcasecmp(key, "KEY_LSHIFT") == 0) { return CL_KEY_LSHIFT; }
-  else if (strcasecmp(key, "KEY_RSHIFT") == 0) { return CL_KEY_RSHIFT; }
-  else if (strcasecmp(key, "KEY_LCONTROL") == 0) { return CL_KEY_LCONTROL; }
-  else if (strcasecmp(key, "KEY_RCONTROL") == 0) { return CL_KEY_RCONTROL; }
-  else if (strcasecmp(key, "KEY_LMENU") == 0) { return CL_KEY_LMENU; }
-  else if (strcasecmp(key, "KEY_RMENU") == 0) { return CL_KEY_RMENU; }
-  else { return 0; }
-}
-
-/* EOF */

Copied: trunk/src/level_map.cpp (from rev 341, trunk/src/level_map.cxx)


Property changes on: trunk/src/level_map.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/level_map.cxx
===================================================================
--- trunk/src/level_map.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/level_map.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,42 +0,0 @@
-//  $Id: level_map.cxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "game_world.hxx"
-#include "level_map.hxx"
-
-LevelMap::LevelMap ()
-{
-}
-
-LevelMap::~LevelMap ()
-{
-}
-
-void
-LevelMap::update (float delta)
-{
-}
-
-void
-LevelMap::draw (CL_GraphicContext& gc)
-{
-  GameWorld::current()->draw_levelmap (*this);
-}
-
-/* EOF */

Copied: trunk/src/line_segments.cpp (from rev 341, trunk/src/line_segments.cxx)


Property changes on: trunk/src/line_segments.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/line_segments.cxx
===================================================================
--- trunk/src/line_segments.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/line_segments.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,504 +0,0 @@
-//  $Id: line_segments.cxx,v 1.14 2003/06/18 14:38:28 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <math.h>
-#include <assert.h>
-#include <iostream>
-#include "math.hxx"
-#include "color.hxx"
-#include "view.hxx"
-#include "line_segments.hxx"
-
-LineSegments::LineSegments(float arg_init_x, float arg_init_y, float arg_init_orientation)
-  : init_x(arg_init_x),
-    init_y(arg_init_y),
-    init_orientation(arg_init_orientation)
-{
-}
-
-float
-LineSegments::get_orientation(const Segment& segment, float len)
-{
-  switch(segment.type)
-    {
-    case RADIAL:
-      {
-        const float& start_angle = segment.radial.start_angle;
-        const float& end_angle   = segment.radial.end_angle;
-        //const float& radius      = segment.radial.radius;
-        
-        float angle;
-
-        if (segment.radial.turn_right)
-          angle = Math::normalize_angle(end_angle - start_angle);
-        else
-          angle = Math::normalize_angle(start_angle - end_angle);
-
-        float relative = len / (segment.radial.radius * angle);
-
-        angle = angle * relative;
-
-        if (segment.radial.turn_right)
-          return start_angle + angle + Math::pi_2;
-        else
-          return start_angle - angle - Math::pi_2;
-      }
-      break;
-
-    case STRAIGHT:
-      {
-        return atan2(segment.straight.y2 - segment.straight.y1,
-                     segment.straight.x2 - segment.straight.x1);
-      }
-      break;
-
-    default:
-      assert(false);
-    }
-  return 0;  
-}
-
-float
-LineSegments::calc_length(const Segment& segment)
-{
-  switch(segment.type)
-    {
-    case RADIAL:
-      {
-        if (segment.radial.turn_right)
-          {
-            float angle = Math::normalize_angle(segment.radial.end_angle - segment.radial.start_angle);
-            return angle * segment.radial.radius;
-          }
-        else
-          {
-            float angle = Math::normalize_angle(segment.radial.start_angle - segment.radial.end_angle);
-            return angle * segment.radial.radius;
-          }
-      }
-      break;
-
-    case STRAIGHT:
-      {
-        float xlen = segment.straight.x2 - segment.straight.x1;
-        float ylen = segment.straight.y2 - segment.straight.y1;
-        return sqrt(xlen*xlen + ylen*ylen);
-      }
-      break;
-
-    default:
-      assert(false);
-    }
-  return 0;
-}
-
-LineSegments::Segments::iterator
-LineSegments::get_segment(float l)
-{
-  float len = 0.0f;
-  
-  Segments::iterator seg = segments.end();
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)
-    {
-      if (len < l)
-        seg = i;
-      else
-        return seg;
-    }
-  return seg;
-}
-
-float
-LineSegments::get_orientation(float l)
-{
-  float len = 0.0f; 
-  
-  Segments::iterator seg = segments.begin();
-  while(seg != segments.end())
-    {
-      len += seg->length;
-      if (len > l)
-        break;
-      ++seg;
-    }
-
-  if (seg == segments.end())
-    {
-      std::cout << "trying to access bejoint last segment: " << l << " " << get_length() << std::endl;
-      return get_end_orientation();
-    }
-  else
-    return get_orientation(*seg, seg->length - (len - l));
-}
-
-FloatVector2d
-LineSegments::get_pos(float l)
-{
-  float len = 0.0f; 
-  
-  Segments::iterator seg = segments.begin();
-  while(seg != segments.end())
-    {
-      len += seg->length;
-      if (len > l)
-        break;
-      ++seg;
-    }
-
-  if (seg == segments.end())
-    {
-      std::cout << "trying to access bejoint last segment: " << l << " " << get_length() << std::endl;
-      return get_end_pos();
-    }
-  else
-    return get_pos(*seg, seg->length - (len - l));
-}
-
-float
-LineSegments::get_end_orientation()
-{
-  if (segments.size() > 0)
-    {
-      Segment& segment = segments.back();
-  
-      switch (segment.type)
-        {
-        case STRAIGHT:
-          return atan2(segment.straight.y2 - segment.straight.y1,
-                       segment.straight.x2 - segment.straight.x1);
-          break;
-
-        case RADIAL:
-      
-          break;
-        }
-      return 0;
-    }
-  else
-    {
-      return init_orientation;
-    }
-}
-
-FloatVector2d
-LineSegments::get_end_pos()
-{
-  if (segments.size() > 0)
-    {
-      Segment& segment = segments.back();
-      switch (segment.type)
-        {
-        case STRAIGHT:
-          return FloatVector2d(segment.straight.x2,
-                           segment.straight.y2);
-        case RADIAL:
-          return FloatVector2d(segment.radial.x + segment.radial.radius * cos(segment.radial.end_angle),
-                           segment.radial.y + segment.radial.radius * sin(segment.radial.end_angle));
-          break;
-        }
-      return FloatVector2d();
-    }
-  else
-    {
-      return FloatVector2d(init_x, init_y);
-    }
-}
-
-float
-LineSegments::get_length()
-{
-  float len = 0.0f;
-
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)
-    len += i->length;
-  
-  return len;
-}
-
-FloatVector2d
-LineSegments::get_pos(const Segment& segment, float len)
-{
-  switch(segment.type)
-    {
-    case RADIAL:
-      {
-        const float& start_angle = segment.radial.start_angle;
-        const float& end_angle   = segment.radial.end_angle;
-        const float& radius      = segment.radial.radius;
-        
-        float angle;
-
-        if (segment.radial.turn_right)
-          angle = Math::normalize_angle(end_angle - start_angle);
-        else
-          angle = Math::normalize_angle(start_angle - end_angle);
-
-        float relative = len / (segment.radial.radius * angle);
-
-        angle = angle * relative;
-
-        if (segment.radial.turn_right)
-          return FloatVector2d(segment.radial.x + cos(start_angle + angle)*radius,
-                           segment.radial.y + sin(start_angle + angle)*radius);
-        else
-          return FloatVector2d(segment.radial.x + cos(start_angle - angle)*radius,
-                           segment.radial.y + sin(start_angle - angle)*radius);
-      }
-      break;
-    case STRAIGHT:
-      {
-        // relative position on the segment
-        float rel_pos = len/calc_length(segment);
-        float xlen    = segment.straight.x2 - segment.straight.x1;
-        float ylen    = segment.straight.y2 - segment.straight.y1;
-
-        return FloatVector2d(segment.straight.x1 + (xlen * rel_pos),
-                         segment.straight.y1 + (ylen * rel_pos));
-      }
-      break;
-    }
-  return FloatVector2d();
-}
-
-void
-LineSegments::add_straight_segment(float x1, float y1, float x2, float y2)
-{
-  Segment segment;
-
-  segment.straight.x1 = x1;
-  segment.straight.y1 = y1;
-  segment.straight.x2 = x2;
-  segment.straight.y2 = y2;
-
-  segment.type   = STRAIGHT;
-  segment.length = calc_length(segment);
-  
-  //std::cout << "Line length: " << segment.length << std::endl;
-
-  segments.push_back(segment);
-}
-
-void
-LineSegments::add_radial_segment(float x, float y, float radius, 
-                                 float start_angle, float stop_angle, bool turn_right)
-{
-  Segment segment;
-
-  segment.radial.x = x;
-  segment.radial.y = y;
-  segment.radial.radius = radius;
-  segment.radial.start_angle = start_angle;
-  segment.radial.end_angle   = stop_angle;
-  segment.radial.turn_right  = turn_right;
-
-  segment.type   = RADIAL;
-  segment.length = calc_length(segment);
-
-  segments.push_back(segment);
-}
-
-bool LineSegments::calc_route(float start_x, float start_y, 
-                              float dest_x, float dest_y, 
-                              float start_orientation, 
-                              float radius, bool turn_right,
-                              float& px, float& py, float& qx, float& qy,
-                              float& angle_start, float& angle_final, float& length)
-{
-  // See AI Programming Wisdom, pp. 189
-  float angle_to_p  = turn_right ? start_orientation - Math::pi_2 : start_orientation + Math::pi_2;
-  px = start_x + (radius * cos(angle_to_p));
-  py = start_y + (radius * sin(angle_to_p));
-  float dx = dest_x - px;
-  float dy = dest_y - py;
-  float h  = sqrt(dx*dx + dy*dy);
-
-  if (h < radius)
-    {
-      //std::cout << "Couldn't generate line segment" << std::endl;
-      return false;
-    }
-
-  float d = sqrt(h*h - radius*radius);
-  float theta = acos(radius / h);
-  
-  float phi = atan2(dy, dx);
-
-  angle_final = Math::normalize_angle(turn_right ? phi + theta : phi - theta);
-  qx = px + radius * cos(angle_final);
-  qy = py + radius * sin(angle_final);
-  
-  angle_start = Math::normalize_angle(angle_to_p + Math::pi);
-
-  float total_curve = turn_right ? angle_start - angle_final : angle_final - angle_start;
-
-  float curve_length = Math::normalize_angle(total_curve) * radius;
-
-  length = d + curve_length;
-  
-  return true;
-}
-
-void
-LineSegments::add_controll_point(float dest_x, float dest_y, float radius)
-{ 
-  float start_orientation = get_end_orientation();
-  float start_x = get_end_pos().x;
-  float start_y = get_end_pos().y;
-
-  float l_px, l_py, l_qx, l_qy, l_angle_start, l_angle_final, l_length;
-  bool  l_possible;
-
-  l_possible = calc_route(start_x, start_y,
-                          dest_x, dest_y,
-                          start_orientation, radius, true,
-                          l_px, l_py, l_qx, l_qy,
-                          l_angle_start, l_angle_final, l_length);
-  
-  float r_px, r_py, r_qx, r_qy, r_angle_start, r_angle_final, r_length;
-  bool r_possible;
-  r_possible = calc_route(start_x, start_y, 
-                          dest_x, dest_y,
-                          start_orientation,
-                          radius, false,
-                          r_px, r_py, r_qx, r_qy, 
-                          r_angle_start, r_angle_final, r_length);
-  
-  if (l_possible && r_possible)
-    {
-      if (l_length < r_length)
-        {
-          add_radial_segment(l_px, l_py, radius, l_angle_start, l_angle_final, false);
-          add_straight_segment(l_qx, l_qy, dest_x, dest_y);
-        }
-      else
-        {
-          add_radial_segment(r_px, r_py, radius, r_angle_start, r_angle_final, true);
-          add_straight_segment(r_qx, r_qy, dest_x, dest_y); 
-        }
-    }
-  else if (l_possible)
-    {
-      add_radial_segment(l_px, l_py, radius, l_angle_start, l_angle_final, false);
-      add_straight_segment(l_qx, l_qy, dest_x, dest_y);
-    }
-  else if (r_possible)
-    {
-      add_radial_segment(r_px, r_py, radius, r_angle_start, r_angle_final, true);
-      add_straight_segment(r_qx, r_qy, dest_x, dest_y);
-    }
-  else
-    {
-      std::cout << "LineSegment: Already at the requested controll point, doing nothing" << std::endl;
-    }
-}
-
-void
-LineSegments::clear()
-{
-  segments.clear();  
-}
-
-void
-LineSegments::draw(View& view)
-{
-#if 0
-  for(float i = 0; i < get_length(); i += 15)
-    {
-      FloatVector2d pos = get_pos(i);
-      //std::cout << "Pos: " << pos << std::endl;
-      view->draw_fillrect(int(pos.x-5), int(pos.y-5),
-                          int(pos.x+5), int(pos.y+5),
-                          1.0f, 0.0f, 0.0f, .5f); // red      
-    }
-#endif
-
-  //std::cout << "-----: " << segments.size()  << std::endl;
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)
-    {
-      switch(i->type)
-        {
-        case RADIAL:
-          //std::cout << "Radial: " << (int)i->radial.x << ", " <<(int)i->radial.y
-          //        << " " << (int)i->radial.radius << std::endl;
-          /*
-          view->draw_circle((int)i->radial.x, (int)i->radial.y, (int)i->radial.radius,
-          Color(1.0f, 1.0f, 1.0f, .3f));*/
-
-
-          if (i->radial.turn_right)
-            {
-              view.get_sc().color().draw_arc(i->radial.x, i->radial.y, i->radial.radius,
-                                     i->radial.start_angle, i->radial.end_angle, 
-                                     CL_Color(255, 255, 255));
-              /*
-              view.draw_fillrect((int)i->radial.x-5, (int)i->radial.y-5,
-                                  (int)i->radial.x+5, (int)i->radial.y+5,
-                                  Color(0.0f, 0.0f, 1.0f)); //blue
-              */
-            }
-          else
-            {
-              view.get_sc().color().draw_arc(i->radial.x, i->radial.y, i->radial.radius,
-                                     i->radial.end_angle, i->radial.start_angle, 
-                                     CL_Color(255, 255, 255));
-              /*
-              view.draw_fillrect(i->radial.x-5, i->radial.y-5,
-                                  i->radial.x+5, i->radial.y+5,
-                                  Color(1.0f, 0.0f, 0.0f)); // red
-              */
-            }
-          /*
-          {
-            int x = int(i->radial.x + i->radial.radius * cos(i->radial.start_angle));
-            int y = int(i->radial.y + i->radial.radius * sin(i->radial.start_angle));
-            view.draw_fillrect(x-5, y-5,
-                                x+5, y+5,
-                                Color(0.0, 0.0f, 1.0f));
-          }
-
-          {
-            int x = int(i->radial.x + i->radial.radius * cos(i->radial.end_angle));
-            int y = int(i->radial.y + i->radial.radius * sin(i->radial.end_angle));
-            view.draw_fillrect(x-5, y-5,
-                                x+5, y+5,
-                                Color(1.0, 0.0f, 1.0f));
-          }*/
-          break;
-
-        case STRAIGHT:
-          view.get_sc().color().draw_line(i->straight.x1, i->straight.y1,
-                                  i->straight.x2, i->straight.y2, 
-                                  CL_Color(255, 255, 255, 255));
-          break;
-        default:
-          std::cout << "Unhandled type: " << i->type << std::endl;
-          break;
-        }
-    }
-}
-
-void
-LineSegments::set_pos(float arg_init_x, float arg_init_y, float arg_init_orientation)
-{
-  init_x = arg_init_x;
-  init_y = arg_init_y;
-  init_orientation = arg_init_orientation;
-}
-
-/* EOF */

Copied: trunk/src/marker.cpp (from rev 341, trunk/src/marker.cxx)


Property changes on: trunk/src/marker.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/marker.cxx
===================================================================
--- trunk/src/marker.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/marker.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,63 +0,0 @@
-//  $Id: marker.cxx,v 1.3 2003/06/23 09:56:39 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "property_set.hxx"
-#include "resource_manager.hxx"
-#include "marker.hxx"
-#include "alist.hxx"
-#include "radar.hxx"
-#include "view.hxx"
-
-Marker::Marker(const AList& lst)
-{
-  passed_time = 0;
-  properties->register_float("x-pos", &pos.x);
-  properties->register_float("y-pos", &pos.y);
-
-  pos.x = lst.get_float("x-pos");
-  pos.y = lst.get_float("y-pos");
-
-  sprite = resources->get_sprite("feuerkraft/marker");
-  sprite.set_blend_func(blend_src_alpha, blend_one);
-}
-
-Marker::~Marker()
-{
-}
-
-void
-Marker::draw (View& view)
-{
-  view.get_sc().color().draw(sprite, pos.x, pos.y);
-}
-
-void
-Marker::draw_radar(Radar& radar)
-{
-  radar.draw_blip(pos, 3, 1.0f, 1.0f, 1.0f);
-}
-
-void
-Marker::update(float delta)
-{
-  passed_time += delta;
-  sprite.set_alpha(sin(passed_time * 7.0f) * .2 + .3);
-}
-
-/* EOF */

Copied: trunk/src/math.cpp (from rev 341, trunk/src/math.cxx)


Property changes on: trunk/src/math.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/math.cxx
===================================================================
--- trunk/src/math.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/math.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,116 +0,0 @@
-//  $Id: math.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "math.hxx"
-
-namespace Math {
-
-
-bool quad_collide(const Quad& quad1, const Quad& quad2)
-{
-  // add bounding box check here
-  
-  if (lines_intersect(quad1.a, quad1.b,
-                      quad2.a, quad2.b))
-    return true;
-  else if (lines_intersect(quad1.b, quad1.c,
-                           quad2.a, quad2.b))
-    return true;
-  else if (lines_intersect(quad1.c, quad1.d,
-                           quad2.a, quad2.b))
-    return true;
-  else if (lines_intersect(quad1.d, quad1.a,
-                           quad2.a, quad2.b))
-    return true;
-  // snip
-  else if (lines_intersect(quad1.a, quad1.b,
-                           quad2.b, quad2.c))
-    return true;
-  else if (lines_intersect(quad1.b, quad1.c,
-                           quad2.b, quad2.c))
-    return true;
-  else if (lines_intersect(quad1.c, quad1.d,
-                           quad2.b, quad2.c))
-    return true;
-  else if (lines_intersect(quad1.d, quad1.a,
-                           quad2.b, quad2.c))  
-    return true;
-  // snip
-  else if (lines_intersect(quad1.a, quad1.b,
-                           quad2.c, quad2.d))
-    return true;
-  else if (lines_intersect(quad1.b, quad1.c,
-                           quad2.c, quad2.d))
-    return true;
-  else if (lines_intersect(quad1.c, quad1.d,
-                           quad2.c, quad2.d))
-    return true;
-  else if (lines_intersect(quad1.d, quad1.a,
-                           quad2.c, quad2.d))  
-    return true;
-  // snip
-  else if (lines_intersect(quad1.a, quad1.b,
-                           quad2.d, quad2.a))
-    return true;
-  else if (lines_intersect(quad1.b, quad1.c,
-                           quad2.d, quad2.a))
-    return true;
-  else if (lines_intersect(quad1.c, quad1.d,
-                           quad2.d, quad2.a))
-    return true;
-  else if (lines_intersect(quad1.d, quad1.a,
-                           quad2.d, quad2.a))
-    return true;
-
-  else // no lines intersect, but one quad might be completly inside of another quad
-    {
-      if (point_inside_quad(quad1.a, quad2)
-          || point_inside_quad(quad1.b, quad2)
-          || point_inside_quad(quad1.c, quad2)
-          || point_inside_quad(quad1.d, quad2))
-        return true;
-      else if (point_inside_quad(quad2.a, quad1)
-               || point_inside_quad(quad2.b, quad1)
-               || point_inside_quad(quad2.c, quad1)
-               || point_inside_quad(quad2.d, quad1))
-        return true;
-      else
-        return false;
-    }
-}
-
-bool point_inside_quad(const Point& point, const Quad& quad)
-{
-  Triangle triangle1, triangle2;
-
-  triangle1.a = quad.a;
-  triangle1.b = quad.b;
-  triangle1.c = quad.c;
-
-  triangle2.a = quad.b;
-  triangle2.b = quad.c;
-  triangle2.c = quad.d;
-
-  return point_inside_triangle(point, triangle1)
-    || point_inside_triangle(point, triangle2);
-}
-
-} // namespace Math
-
-/* EOF */

Copied: trunk/src/menu.cpp (from rev 341, trunk/src/menu.cxx)


Property changes on: trunk/src/menu.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/menu.cxx
===================================================================
--- trunk/src/menu.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/menu.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,183 +0,0 @@
-//  $Id: menu.cxx,v 1.7 2003/10/31 23:24:41 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/display.h>
-#include "assert.hxx"
-#include "display_manager.hxx"
-#include "fonts.hxx"
-#include "input/input_manager.hxx"
-#include "menu_item.hxx"
-#include "menu.hxx"
-
-Menu::Menu()
-{
-  current_item = 0;
-  pos = 0;
-  moving = false;
-}
-
-Menu::~Menu()
-{
-}
-
-void
-Menu::add_item(MenuItem* item)
-{
-  items.push_back(item);
-}
-
-void
-Menu::update(float delta)
-{
-  
-}
-
-void
-Menu::draw(CL_GraphicContext& gc)
-{
-  // Draw menu background 
-  CL_Display::fill_rect(CL_Rect(CL_Display::get_width() - 170, 0,
-                                CL_Display::get_width(), items.size() 
-                                * (Fonts::font.get_height() + 4) + 20),
-                        CL_Color(0,0,0, 50));
-
-  // Draw menu items
-  int y = 10;
-  for(MenuItems::iterator i = items.begin(); i != items.end(); ++i)
-    {
-      if ((i - items.begin()) == current_item)
-        (*i)->draw_highlight(CL_Display::get_width() - 160, y);
-      else
-        (*i)->draw(CL_Display::get_width() - 160, y);
-
-      y += (Fonts::font.get_height() + 4);
-    }
-}
-
-void
-Menu::next_item()
-{
-  AssertMsg(items.size() > 0, "Menu is empty!");
-
-  if (current_item == static_cast<int>(items.size()) - 1)
-    current_item = 0;
-  else
-    current_item += 1;
-}
-
-void
-Menu::previous_item()
-{
-  AssertMsg(items.size() > 0, "Menu is empty!");
-
-  if (current_item == 0)
-    current_item = items.size()-1;
-  else
-    current_item -= 1;
-}
-
-void
-Menu::call_current_item()
-{
-  AssertMsg(items.size() > 0, "Menu is empty!");
-
-  items[current_item]->call();
-}
-
-void
-Menu::hide()
-{
-  if (DisplayManager::current()->get_menu() == this)
-    DisplayManager::current()->hide_menu();
-}
-
-void
-Menu::process_events(const InputEventLst& lst)
-{
-  for(InputEventLst::const_iterator i = lst.begin(); i != lst.end(); ++i)
-    {
-      switch(i->type)
-        {
-        case AXIS_EVENT:
-          switch (i->axis.name)
-            {
-            case ACCELERATE_AXIS:
-              // not using events for analog, but states
-              break;
-            default:
-              break;
-            }
-          break;
-        case BUTTON_EVENT:
-          switch (i->button.name)
-            {
-            case PRIMARY_FIRE_BUTTON:
-              if (i->button.down)
-                {
-                  std::cout << "--- button event" << std::endl;
-                  call_current_item();
-                  hide();
-                }
-              break;
-            case SECONDARY_FIRE_BUTTON:
-              // FIXME: Go a menu item back (hack)
-              DisplayManager::current()->pop_menu();
-              break;
-            default:
-              break;
-            }
-          break;
-        default:
-          break;
-        }
-    }
-
-  // FIXME: no delta
-  float delta = InputManager::get_controller().get_axis_state(ACCELERATE_AXIS);
-  
-  if (delta > .1f && !moving)
-    {
-      pos = 5.0f;
-      moving = true;
-    }
-  else if (delta < -.1f && !moving)
-    {
-      pos = -5.0f;
-      moving = true;
-    }
-  else if (moving && fabsf(delta) < .1f)
-    {
-      moving = false;
-    }
-  
-  pos += delta/4.0f;
-  
-  if (pos >= 1.0f)
-    {
-      next_item();
-      pos = 0.0f;
-    }
-  else if (pos <= -1.0f)
-    {
-      previous_item();
-      pos = 0.0f;
-    }
-}
-
-/* EOF */

Copied: trunk/src/menu_handle_mgr.cpp (from rev 341, trunk/src/menu_handle_mgr.cxx)


Property changes on: trunk/src/menu_handle_mgr.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/menu_handle_mgr.cxx
===================================================================
--- trunk/src/menu_handle_mgr.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/menu_handle_mgr.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,25 +0,0 @@
-//  $Id: menu_handle_mgr.cxx,v 1.1 2003/06/06 09:49:35 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "menu_handle_mgr.hxx"
-
-HandleManager<Menu>     menu_handle_mgr;
-HandleManager<MenuItem> menu_item_handle_mgr;
-
-/* EOF */

Copied: trunk/src/menu_item.cpp (from rev 341, trunk/src/menu_item.cxx)


Property changes on: trunk/src/menu_item.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/menu_item.cxx
===================================================================
--- trunk/src/menu_item.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/menu_item.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,72 +0,0 @@
-//  $Id: menu_item.cxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/display.h>
-#include "fonts.hxx"
-#include "display_manager.hxx"
-#include "menu_item.hxx"
-
-MenuItemSubMenuFunctor::MenuItemSubMenuFunctor(Menu* arg_submenu)
-  : submenu(arg_submenu)
-{
-}
-
-void
-MenuItemSubMenuFunctor::call()
-{ // FIXME: This could be implemented on the scheme site
-  DisplayManager::current()->push_menu(submenu);
-}
-
-MenuItem::MenuItem(const std::string& arg_label, MenuItemFunctor* arg_functor)
-  : label(arg_label),
-    functor(arg_functor)
-{
-  
-}
-
-MenuItem::~MenuItem()
-{
-  delete functor;
-}
-
-void
-MenuItem::draw_highlight(int x, int y)
-{
-  CL_Display::fill_rect(CL_Rect(x, y, x + 150, y + Fonts::font.get_height() + 2),
-                        CL_Color(255, 255, 255, 230));
-  Fonts::font.set_alignment(origin_top_left);
-  Fonts::font.draw(x + 10, y + 1, label);
-}
-
-void
-MenuItem::draw(int x, int y)
-{
-  CL_Display::fill_rect(CL_Rect(x, y, x + 150, y + Fonts::font.get_height() + 2),
-                        CL_Color(85,85,0, 230));
-  Fonts::font.set_alignment(origin_top_left);
-  Fonts::font.draw(x + 10, y + 1, label);
-}
-
-void
-MenuItem::call()
-{
-  functor->call();
-}
-
-/* EOF */

Copied: trunk/src/message_buffer.cpp (from rev 341, trunk/src/message_buffer.cxx)


Property changes on: trunk/src/message_buffer.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/message_buffer.cxx
===================================================================
--- trunk/src/message_buffer.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/message_buffer.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,77 +0,0 @@
-//  $Id: message_buffer.cxx,v 1.3 2003/06/08 15:49:00 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "assert.hxx"
-#include "fonts.hxx"
-#include "message_buffer.hxx"
-
-MessageBuffer* MessageBuffer::current_ = 0;
-
-MessageBuffer::MessageBuffer(int arg_x, int arg_y)
-{
-  current_ = this;
-  x_pos = arg_x;
-  y_pos = arg_y;
-}
-
-MessageBuffer* 
-MessageBuffer::current()
-{
-  AssertMsg(current_, "comm-* commands must not be called on script loading!");
-  return current_;
-}
-
-void
-MessageBuffer::add(const std::string& str)
-{
-  MessageBufferEntry entry;
-  entry.display_time = 0;
-  entry.message = str;
-  buffer.push_back(entry);
-}
-
-void
-MessageBuffer::draw(CL_GraphicContext& gc)
-{
-  int y = y_pos;
-
-  for(Buffer::reverse_iterator i = buffer.rbegin(); i != buffer.rend(); ++i)
-    {
-      if (i->display_time < 5.0f)
-        {
-          if (i->display_time > 4.0f)
-            Fonts::font.set_alpha(1.0f - (i->display_time - 4.0f));
-          Fonts::font.set_alignment(origin_top_center);
-          Fonts::font.draw(x_pos, y, i->message);
-          Fonts::font.set_alpha(1.0f);
-        }
-      y -= Fonts::font.get_height() + 2;
-    }
-}
-
-void
-MessageBuffer::update(float delta)
-{
-  for(Buffer::iterator i = buffer.begin(); i != buffer.end(); ++i)
-    {
-      i->display_time += delta;
-    }  
-}
-
-/* EOF */

Copied: trunk/src/mine.cpp (from rev 341, trunk/src/mine.cxx)


Property changes on: trunk/src/mine.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/mine.cxx
===================================================================
--- trunk/src/mine.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/mine.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,126 +0,0 @@
-//  $Id: mine.cxx,v 1.11 2003/06/20 20:54:23 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "alist.hxx"
-#include "vehicles/tank.hxx"
-#include "mine.hxx"
-#include "game_obj_manager.hxx"
-#include "game_world.hxx"
-#include "groundmap/ground_map.hxx"
-#include "collision_manager.hxx"
-#include "property_set.hxx"
-#include "resource_manager.hxx"
-
-Mine::Mine (const AList& lst)
-  : pos (0, 0),
-    active (2),
-    detonated (false),
-    hole (resources->get_sprite ("feuerkraft/hole"))
-{
-  properties->register_float("x-pos", &pos.x);
-  properties->register_float("y-pos", &pos.y);
-  
-  pos.x = lst.get_float("x-pos");
-  pos.y = lst.get_float("y-pos");
-
-  GroundType type = GameWorld::current()->get_groundmap ()->get_groundtype (pos.x, pos.y);
-  if (type == GT_FLATWATER)
-    {
-      sur = resources->get_sprite ("feuerkraft/minewater");
-      sur_active = resources->get_sprite ("feuerkraft/minewateractive");
-    }
-  else if (type == GT_DEEPWATER)
-    {
-      sur = resources->get_sprite ("feuerkraft/minewater");
-      sur_active = resources->get_sprite ("feuerkraft/minewateractive");
-      remove (); // Mines can't be placed in deepwater
-    }
-  else
-    {
-      sur = resources->get_sprite ("feuerkraft/mine");
-      sur_active = resources->get_sprite ("feuerkraft/mineactive");
-    }
-}
-
-void 
-Mine::update (float delta) 
-{
-  if (!is_active ())
-    {
-      active -= delta;
-    }
-  else if (!detonated)
-    {
-      CollisionManager::current()->add_circle(get_id(), pos.x, pos.y, 8);
-    }
-}
-
-void
-Mine::on_collision(GameObj* obj)
-{
-  Mine::detonate();
-}
-
-bool 
-Mine::is_active ()
-{
-  return (active <= 0);
-}
-
-void 
-Mine::draw (View& view) 
-{
-  if (!is_active ())
-    {
-      view.get_sc().color().draw(sur, pos.x, pos.y);
-    }
-  else if (!detonated)
-    {
-      view.get_sc().color().draw(sur_active, pos.x, pos.y);
-    }
-  else
-    {
-      //view->draw (hole, pos);
-    }
-}
-
-void 
-Mine::detonate () 
-{
-  // Search for game objects in the given area to make damage
-  GameObjManager* objs = GameWorld::current()->get_game_obj_manager();
-  for (GameObjManager::iterator i = objs->begin(); i != objs->end(); ++i)
-    {
-      //Vehicle* vehicle = dynamic_cast<Vehicle*>(*i);
-      
-      // If distance to the mine is smaller than 100 apply a force
-      /*if (vehicle && (vehicle->get_pos () - get_pos ()).get_length() < 100.0)
-	{
-	  FloatVector2d force(pos - vehicle->get_pos());
-	  force = (100.0f) * (pos - vehicle->get_pos()).get_length();
-	  vehicle->collide(force);
-	}*/
-    }
-
-  GameWorld::current()->add (new Explosion(pos, Explosion::MEDIUM));
-  detonated = true;
-  //remove ();
-}
-
-/* EOF */

Copied: trunk/src/output_world_builder.cpp (from rev 341, trunk/src/output_world_builder.cxx)


Property changes on: trunk/src/output_world_builder.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/output_world_builder.cxx
===================================================================
--- trunk/src/output_world_builder.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/output_world_builder.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,99 +0,0 @@
-//  $Id: output_world_builder.cxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "output_world_builder.hxx"
-
-OutputWorldBuilder::OutputWorldBuilder()
-{
-}
-
-void
-OutputWorldBuilder::add_object(const std::string& type, const AList& alist)
-{
-  std::cout << "OutputWorldBuilder: gameobj: " << type << std::endl;
-  print_alist(alist);
-}
-
-void
-OutputWorldBuilder::add_brush(const std::string& resname, const AList& alist)
-{
-  std::cout << "OutputWorldBuilder: brush: " << resname << std::endl;
-  print_alist(alist);
-}
-
-void
-OutputWorldBuilder::add_building(const std::string& type, const AList& alist)
-{
-  std::cout << "OutputWorldBuilder: building: " << type << std::endl;
-  print_alist(alist);
-}
-
-void
-OutputWorldBuilder::add_groundmap(const std::string& type, const AList& alist)
-{
-  std::cout << "OutputWorldBuilder: groundmap: " << type << std::endl;
-  print_alist(alist);
-}
-
-void
-OutputWorldBuilder::add_script(const std::string& resname)
-{
-  std::cout << "OutputWorldBuilder: script: " << resname << std::endl;
-}
-
-void
-OutputWorldBuilder::print_alist(const AList& alist)
-{
-  for(AList::const_iterator i = alist.begin(); i != alist.end(); ++i)
-    {
-      std::cout << "  " << i->first << " -> ";
-      switch(i->second.type)
-        {
-        case AList::AL_INT:
-          std::cout << i->second.v_int << std::endl;
-          break;
-        case AList::AL_FLOAT:
-          std::cout << i->second.v_float << std::endl;
-          break;
-        case AList::AL_BOOL:
-          std::cout << i->second.v_bool << std::endl;
-          break;
-        case AList::AL_STRING:
-          std::cout << *i->second.v_string << std::endl;
-          break;
-        case AList::AL_INTVECTOR2D:
-          std::cout << "[" << (*i).second.v_int_vector2d.x
-                    << ", " << (*i).second.v_int_vector2d.y
-                    << "]"
-                    << std::endl;
-          break;
-          /*case AList::AL_FLOATVECTOR2D:
-          std::cout << "[" << (*i).second.v_float_vector2d.x
-                    << ", " << (*i).second.v_float_vector2d.y
-                    << "]"
-                    << std::endl;
-                    break;*/
-        default:
-          std::cout << "<unhandled>" << std::endl;
-          break;
-        }
-    }
-}
-
-/* EOF */

Copied: trunk/src/particles/fire_emitter.cpp (from rev 341, trunk/src/particles/fire_emitter.cxx)


Property changes on: trunk/src/particles/fire_emitter.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/fire_emitter.cxx
===================================================================
--- trunk/src/particles/fire_emitter.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/particles/fire_emitter.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,24 +0,0 @@
-//  $Id: fire_emitter.cxx,v 1.1 2003/06/07 17:18:34 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "fire_emitter.hxx"
-
-
-
-/* EOF */

Copied: trunk/src/particles/fire_particle.cpp (from rev 341, trunk/src/particles/fire_particle.cxx)


Property changes on: trunk/src/particles/fire_particle.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/fire_particle.cxx
===================================================================
--- trunk/src/particles/fire_particle.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/particles/fire_particle.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,69 +0,0 @@
-//  $Id: fire_particle.cxx,v 1.2 2003/06/08 15:31:27 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/color.h>
-#include "../math.hxx"
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "fire_particle.hxx"
-
-FireParticle::FireParticle(const FloatVector2d& arg_pos)
-  : sprite(resources->get_sprite("feuerkraft/firep")),
-    pos(arg_pos),
-    life_time(0)
-{
-  sprite.set_angle(Math::rad2deg(Math::frand() * Math::pi*2));
-  sprite.set_blend_func(blend_src_alpha, blend_one);
-}
-
-void
-FireParticle::update(float delta)
-{
-  pos += GameWorld::current()->get_wind() * delta * 1.3f;
-
-  life_time += delta;
-
-  if (life_time > .33f)
-    {
-      life_time = .33f;
-      remove();
-    }
-
-  // black  CL_Color(  0,   0,   0);
-  // red    CL_Color(255,   0,   0);
-  // yellow CL_Color(255, 255,   0);
-  // white  CL_Color(255, 255, 255);
-
-  float factor = life_time * 3.0f;
-  
-  CL_Color color(life_time >= 0.75 ? 255 : int(255 * (life_time - 0.75f)/0.25f),
-                 int(factor * 255),
-                 life_time >= 0.25 ? 255 : int(255 * (life_time - 0.25f)/0.75f));
-  sprite.set_color(color);
-  sprite.set_alpha(1.0f - factor);
-  sprite.set_scale(1.0 - factor/2, 1.0 - factor/2);
-}
-
-void
-FireParticle::draw (View& view)
-{
-  view.get_sc().color().draw(sprite, pos.x, pos.y);
-}
-
-/* EOF */

Copied: trunk/src/particles/rocket_smoke_particle.cpp (from rev 341, trunk/src/particles/rocket_smoke_particle.cxx)


Property changes on: trunk/src/particles/rocket_smoke_particle.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/rocket_smoke_particle.cxx
===================================================================
--- trunk/src/particles/rocket_smoke_particle.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/particles/rocket_smoke_particle.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,65 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "rocket_smoke_particle.hxx"
-
-RocketSmokeParticle::RocketSmokeParticle(const FloatVector2d& arg_pos)
-{
-  pos = arg_pos;
-  size = 1;
-  angle = rand () % 360;    
-  sprite = resources->get_sprite("feuerkraft/rocket_smoke");
-  max_life_time = 10.0f;
-  life_time = max_life_time;
-  //velocity = FloatVector2d (80.0f, 0.0f);
-}
-
-RocketSmokeParticle::~RocketSmokeParticle()
-{
-}
-
-void
-RocketSmokeParticle::update (float delta) 
-{
-  pos += GameWorld::current()->get_wind() * delta;
-
-  Particle::update (delta);
-
-  life_time -= delta;
-}
-
-void
-RocketSmokeParticle::draw (View& view) 
-{    
-  sprite.set_alpha ((life_time/max_life_time) * .3);
-  sprite.set_scale (0.8f + ((1 - life_time/max_life_time)) * 4.0f,
-                    0.8f + ((1 - life_time/max_life_time)) * 4.0f);
-  sprite.set_angle(angle);
-  view.get_sc().color().draw(sprite, pos.x, pos.y);
-}
-
-float
-RocketSmokeParticle::get_z_pos () 
-{
-  return 100; 
-}
-
-/* EOF */

Copied: trunk/src/particles/smoke_emitter.cpp (from rev 341, trunk/src/particles/smoke_emitter.cxx)


Property changes on: trunk/src/particles/smoke_emitter.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/particles/smoke_emitter.cxx
===================================================================
--- trunk/src/particles/smoke_emitter.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/particles/smoke_emitter.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,59 +0,0 @@
-//  $Id: smoke_emitter.cxx,v 1.2 2003/06/09 20:27:31 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../game_world.hxx"
-#include "../math.hxx"
-#include "fire_particle.hxx"
-#include "smoke_particle.hxx"
-#include "smoke_emitter.hxx"
-
-SmokeEmitter::SmokeEmitter(const FloatVector2d& arg_pos)
-  : pos(arg_pos)
-{
-  last_particle = 0.0f;
-}
-
-void
-SmokeEmitter::set_pos(const FloatVector2d& arg_pos)
-{
-  pos = arg_pos;
-}
-
-void
-SmokeEmitter::update(float delta)
-{
-  float particle_release_count = .3f;
-
-  last_particle += delta;
-
-  GameWorld::current()->add(new FireParticle(pos+ FloatVector2d::make_polar(Math::frand() * 5,
-                                                                                  Math::frand() * Math::pi*2)));
-
-  while (last_particle > particle_release_count)
-    {
-      GameWorld::current()->add(new FireParticle(pos + FloatVector2d::make_polar(Math::frand() * 5,
-                                                                                  Math::frand() * Math::pi*2)));
-
-      GameWorld::current()->add(new SmokeParticle(pos + FloatVector2d::make_polar(Math::frand() * 20,
-                                                                                  Math::frand() * Math::pi*2)));
-      last_particle -= particle_release_count;
-    }
-}
-
-/* EOF */

Copied: trunk/src/path_manager.cpp (from rev 341, trunk/src/path_manager.cxx)


Property changes on: trunk/src/path_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/path_manager.cxx
===================================================================
--- trunk/src/path_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/path_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,106 +0,0 @@
-//  $Id: path_manager.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "system.hxx"
-#include "path_manager.hxx"
-
-PathManager path_manager;
-
-PathManager::PathManager ()
-  : path_found (false)
-{
-}
-
-PathManager::~PathManager ()
-{
-}
-
-void
-PathManager::add_path (const std::string& path)
-{
-  //std::cout << "PathManager: add_path: " << path << std::endl;
-  path_list.push_back (path);
-}
-
-std::string
-PathManager::complete (const std::string& relative_path)
-{
-  std::string comp_path = base_path + "/" + relative_path;
-  //std::cout << "PathManager: " << relative_path << " -> " << comp_path << std::endl;
-
-  return comp_path;
-}
-
-bool
-PathManager::find_path (const std::list<std::string>& file_list)
-{
-  for (PathIter i = path_list.begin (); !path_found && i != path_list.end (); ++i)
-    {
-      bool found_file = true;
-      for (PathIter f = file_list.begin (); found_file && f != file_list.end (); ++f)
-	{
-	  if (!System::exist(*i + "/" + *f))
-	    found_file = false;
-	}
-      if (found_file)
-	{
-	  path_found = true;
-	  base_path = *i;
-
-	  std::cout << "PathManager: Using base_path: " << base_path << std::endl;
-
-	  return true;
-	}
-    }
-
-  std::cout << "PathManager: No base path found" << std::endl;
-
-  return false;
-}
-
-/** Search for a path which contains the file 'file' */
-bool
-PathManager::find_path (const std::string& file)
-{
-  for (PathIter i = path_list.begin (); !path_found && i != path_list.end (); ++i)
-    {
-      if (System::exist(*i + "/" + file))
-	{
-	  path_found = true;
-	  base_path = *i;
-
-	  std::cout << "PathManager: Using base_path: " << base_path << std::endl;
-
-	  return true;
-	}
-    }
-
-  std::cout << "PathManager: No base path found" << std::endl;
-
-  return false;
-}
-
-void
-PathManager::set_path (const std::string& path)
-{
-  base_path = path;
-}
-
-/* EOF */

Copied: trunk/src/player.cpp (from rev 341, trunk/src/player.cxx)


Property changes on: trunk/src/player.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/player.cxx
===================================================================
--- trunk/src/player.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/player.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,55 +0,0 @@
-//  $Id: player.cxx,v 1.5 2003/06/17 22:06:13 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <assert.h>
-#include "player.hxx"
-
-Player::Player(Unit* arg_unit)
-{
-  soldier = arg_unit;
-  set_current_unit(arg_unit);
-}
-
-Unit*
-Player::get_soldier()
-{
-  return soldier;
-}
-
-void
-Player::set_soldier(Unit* new_soldier)
-{
-  soldier = new_soldier;
-  set_current_unit(soldier);
-}
-
-void
-Player::set_current_unit(Unit* arg_unit)
-{
-  unit = arg_unit;
-}
-
-Unit*
-Player::get_current_unit()
-{
-  assert(unit);
-  return unit;
-}
-
-/* EOF */

Copied: trunk/src/player_view.cpp (from rev 341, trunk/src/player_view.cxx)


Property changes on: trunk/src/player_view.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/player_view.cxx
===================================================================
--- trunk/src/player_view.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/player_view.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,38 +0,0 @@
-//  $Id: player_view.cxx,v 1.4 2003/06/04 13:10:09 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "player.hxx"
-#include "player_view.hxx"
-
-PlayerViewUpdater::PlayerViewUpdater(Player* arg_player)
-  : VehicleViewUpdater(arg_player->get_current_unit()),
-    player(arg_player)
-{
-}
-
-void
-PlayerViewUpdater::update(float delta, ViewState& state)
-{
-  // FIXME: Polling considered evil, maybe CL_Signal will help
-  set_unit(player->get_current_unit());
-
-  VehicleViewUpdater::update(delta, state);
-}
-
-/* EOF */

Copied: trunk/src/projectile.cpp (from rev 341, trunk/src/projectile.cxx)


Property changes on: trunk/src/projectile.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/projectile.cxx
===================================================================
--- trunk/src/projectile.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/projectile.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,125 +0,0 @@
-//  $Id: projectile.cxx,v 1.14 2003/06/22 21:51:21 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "property_set.hxx"
-#include "view.hxx"
-#include "collision_manager.hxx"
-#include "explosion.hxx"
-#include "buildings/building.hxx"
-#include "buildings/building_map.hxx"
-#include "game_obj_manager.hxx"
-#include "projectile.hxx"
-#include "vehicles/vehicle.hxx"
-#include "resource_manager.hxx"
-
-Projectile::Projectile (GameObj* p,
-			const FloatVector2d& arg_pos, const FloatVector2d& arg_velocity)
-  : sur (resources->get_sprite("feuerkraft/projectile")),
-    sur_light (resources->get_sprite("feuerkraft/projectile-light")),
-    tmp_pos (arg_pos),
-    velocity (arg_velocity),
-    lifetime (45 + rand () % 5 ),
-    parent (p)
-{
-  //std::cout << "Velocity: " << velocity.x << " " << velocity.y << std::endl;
-  pos  = arg_pos;
-  
-  properties->register_float("lifetime",   &lifetime);
-  properties->register_float("x-pos",      &pos.x);
-  properties->register_float("y-pos",      &pos.y);
-  properties->register_float("velocity-x", &velocity.x);
-  properties->register_float("velocity-y", &velocity.y);
-}
-
-Projectile::~Projectile ()
-{
-  
-}
-
-void 
-Projectile::draw (View& view)
-{
-  if (lifetime > 0) {
-    sur.set_angle(Math::rad2deg(velocity.get_orientation()));
-    sur_light.set_angle(Math::rad2deg(velocity.get_orientation()));
-    view.get_sc().color().draw(sur, pos.x, pos.y);
-    view.get_sc().light().draw(sur_light, pos.x, pos.y);
-  }
-
-  //std::cout << "Pos: " << pos.x << " " << pos.y << std::endl;
-  //CL_Display::draw_line (tmp_pos.x, tmp_pos.y, 
-  //		 pos.x, pos.y, 1.0, 1.0, 1.0, 0.0);
-}
-
-void 
-Projectile::update (float delta)
-{
-  sur.update(delta);
-  delta = delta * 50.0f;
-
-  if (lifetime >= 0)
-    {
-      tmp_pos = pos;
-
-      pos += velocity * delta;
-      --lifetime; // FIXME: not delta clean
-    }
-
-  if (lifetime < 0)
-    detonate ();
-
-  CollisionManager::current()->add_point(get_id(), pos.x, pos.y);
-}
-
-bool 
-Projectile::removable ()
-{
-  return (lifetime < 0);
-}
-
-void 
-Projectile::detonate ()
-{
-  lifetime = -1;
-  GameWorld::current()->add_front(new Explosion(pos));
-}
-
-void
-Projectile::on_collision(GameObj* obj)
-{
-  if (Projectile::parent != obj)
-    {
-      //std::cout << "Projectile " << get_id() << " touched gameobj " << obj->get_id() << std::endl;
-      Vehicle* vehicle = dynamic_cast<Vehicle*>(obj);
-      if (vehicle)
-        vehicle->collide(this);
-      detonate();
-    }
-}
-
-void
-Projectile::on_collision_with_building(Building* building)
-{
-  //std::cout << "Projectile touched building" << get_id() << std::endl;
-  building->collide (this);
-  detonate ();
-}
-
-/* EOF */

Copied: trunk/src/property.cpp (from rev 341, trunk/src/property.cxx)


Property changes on: trunk/src/property.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/property.cxx
===================================================================
--- trunk/src/property.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/property.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,158 +0,0 @@
-//  $Id: property.cxx,v 1.7 2003/06/09 20:27:31 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <assert.h>
-#include <ClanLib/Core/System/clanstring.h>
-#include "property.hxx"
-
-Property::Property(const std::string& arg_name)
-  : name(arg_name), type(T_EMPTY)
-{
-}
-
-Property::Property(const std::string& arg_name, bool* value_ptr)
-  : name(arg_name), type(T_BOOL)
-{
-  data.m_bool = value_ptr;
-}
-
-Property::Property(const std::string& arg_name, int* value_ptr)
-  : name(arg_name), type(T_INT)
-{
-  data.m_int = value_ptr;
-}
-
-Property::Property(const std::string& arg_name, float* value_ptr)
-  : name(arg_name), type(T_FLOAT)
-{
-  data.m_float = value_ptr;
-}
-
-Property::Property(const std::string& arg_name, std::string* value_ptr)
-  : name(arg_name), type(T_STRING)
-{
-  data.m_string = value_ptr;
-}
-
-Property::~Property()
-{
-}
-
-void
-Property::set_bool(bool value)
-{
-  assert(type == T_BOOL);
-  *data.m_bool = value;
-}
-
-void
-Property::set_int(int value)
-{
-  assert(type == T_INT || type == T_EMPTY);
-  *data.m_int = value;
-  type = T_INT;
-}
-
-void
-Property::set_float(float value)
-{
-  assert(type == T_FLOAT);
-  *data.m_float = value;
-}
-
-void
-Property::set_string(const std::string& value)
-{
-  assert(type == T_STRING);
-  *data.m_string = value;
-}
-
-bool
-Property::get_bool() const
-{
-  assert(type == T_BOOL);
-  return *data.m_bool;
-}
-
-int
-Property::get_int() const
-{
-  assert(type == T_INT);
-  return *data.m_int;
-}
-
-float
-Property::get_float() const
-{
-  assert(type == T_FLOAT);
-  return *data.m_float;
-}
-
-std::string
-Property::get_string() const
-{
-  assert(type == T_STRING);
-  return *data.m_string;
-}
-
-std::string
-Property::to_string() const
-{
-  switch (type)
-    {
-    case Property::T_BOOL:
-      return CL_String::to(get_bool());
-
-    case Property::T_FLOAT:
-      return CL_String::to(get_float());
-      
-    case Property::T_INT:
-      return CL_String::to(get_int());
-
-    case Property::T_STRING:
-      return get_string();
-
-    default:
-      return "<empty>";
-    }
-}
-
-std::ostream& operator<<(std::ostream& s, const Property& property)
-{
-  switch (property.type)
-    {
-    case Property::T_BOOL:
-      return s << property.get_bool();
-
-    case Property::T_FLOAT:
-      return s << property.get_float();
-      
-    case Property::T_INT:
-      return s << property.get_int();
-
-    case Property::T_STRING:
-      return s << property.get_string();
-
-    default:
-      return s << "<empty>";
-    }
-}
-
-/* EOF */

Copied: trunk/src/property_set.cpp (from rev 341, trunk/src/property_set.cxx)


Property changes on: trunk/src/property_set.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/property_set.cxx
===================================================================
--- trunk/src/property_set.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/property_set.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,108 +0,0 @@
-//  $Id: property_set.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <assert.h>
-#include "property.hxx"
-#include "property_set.hxx"
-
-PropertySet::PropertySet()
-{
-  
-}
-
-PropertySet::~PropertySet() 
-{
-  for(Properties::iterator i = properties.begin(); i != properties.end(); ++i)
-    {
-      delete i->second;
-    }
-}
-
-Property* 
-PropertySet::lookup(const std::string& name)
-{
-  Properties::iterator i = properties.find(name);
-  if (i == properties.end())
-    return 0;
-  else
-    return i->second;
-}
-
-void
-PropertySet::register_bool(const std::string& name, bool* value_ptr)
-{
-  assert(lookup(name) == 0);
-  properties[name] = new Property(name, value_ptr);
-}
-
-void
-PropertySet::register_int(const std::string& name, int* value_ptr)
-{
-  assert(lookup(name) == 0);
-  properties[name] = new Property(name, value_ptr);
-}
-
-void
-PropertySet::register_float(const std::string& name, float* value_ptr)
-{
-  assert(lookup(name) == 0);
-  properties[name] = new Property(name, value_ptr);
-}
-
-void
-PropertySet::register_string(const std::string& name, std::string* value_ptr)
-{
-  assert(lookup(name) == 0);
-  properties[name] = new Property(name, value_ptr);
-}
-
-void
-PropertySet::set_bool(const std::string& name, bool value)
-{
-  Property* property = lookup(name);
-  assert(property);
-  property->set_bool(value);
-}
-
-void
-PropertySet::set_int(const std::string& name, int value)
-{
-  Property* property = lookup(name);
-  assert(property);
-  property->set_int(value);
-}
-
-void
-PropertySet::set_float(const std::string& name, float value)
-{
-  Property* property = lookup(name);
-  assert(property);
-  property->set_float(value);
-}
-
-void
-PropertySet::set_string(const std::string& name, const std::string& value)
-{
-  Property* property = lookup(name);
-  assert(property);
-  property->set_string(value);
-
-}
-
-/* EOF */

Copied: trunk/src/radar.cpp (from rev 341, trunk/src/radar.cxx)


Property changes on: trunk/src/radar.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/radar.cxx
===================================================================
--- trunk/src/radar.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/radar.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,104 +0,0 @@
-//  $Id: radar.cxx,v 1.15 2003/06/23 10:01:41 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright(C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or(at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/display.h>
-#include "buildings/building_map.hxx"
-#include "game_obj_manager.hxx"
-#include "radar.hxx"
-#include "math.hxx"
-#include "player.hxx"
-#include "vehicles/vehicle.hxx"
-#include "resource_manager.hxx"
-
-Radar::Radar(const FloatVector2d& arg_pos, 
-             PlayerPtr p)
-  : player(p),
-    background(resources->get_sprite("feuerkraft/radar")),
-    pos(arg_pos),
-    angle(0)
-{
-}
-
-Radar::~Radar()
-{
-}
-
-void 
-Radar::draw(CL_GraphicContext& gc)
-{
-  FloatVector2d end(0.0f, 64.0f);
-
-  end = end.rotate(angle);
-
-  end += pos;
-
-  background.draw(int(pos.x), int(pos.y), &gc);
-  
-  GameObjManager* objs = GameWorld::current()->get_game_obj_manager();
-  for (GameObjManager::iterator i = objs->begin(); i != objs->end(); ++i)
-    {
-      (*i)->draw_radar(*this);
-    }
-
-  GameWorld::current()->get_buildingmap()->draw_radar(*this);
-
-  CL_Display::draw_line(int(pos.x), int(pos.y - 5),
-                        int(pos.x), int(pos.y + 5),
-                        CL_Color(0, 255, 0));
-
-  CL_Display::draw_line(int(pos.x - 5), int(pos.y),
-                        int(pos.x + 5), int(pos.y),
-                        CL_Color(0, 255, 0));
-}
-
-void
-Radar::draw_blip(const FloatVector2d& arg_pos, int size,
-                 float red, float green, float blue)
-{
-  // Callculate the distance between 'pos' and the vehicle that holds
-  // the radar
-  FloatVector2d diff = arg_pos;
-
-  diff -= player->get_current_unit()->get_pos();
-  diff *= 1/30.0f;
-
-  float alpha =(diff.get_length() / 64.0);
-  alpha *= alpha * alpha;
-  alpha = 1.0f - alpha;
-
-  if (diff.get_length() < 64.0)
-    {
-      //diff = diff.rotate(-vehicle->get_angle () + (3.14159/2), FloatVector2d (0, 0, 1.0));
-      
-      CL_Display::fill_rect(CL_Rect(int(pos.x + diff.x) - size, int(pos.y + diff.y) - size,
-                                    int(pos.x + diff.x) + size, int(pos.y + diff.y) + size),
-                            CL_Color(int(255*red),
-                                     int(255*green),
-                                     int(255*blue), 
-                                     int(255*alpha)));
-    }
-}
-
-void 
-Radar::update(float delta)
-{
-  angle += 10.0f * delta;
-}
-
-/* EOF */

Copied: trunk/src/resource_manager.cpp (from rev 341, trunk/src/resource_manager.cxx)


Property changes on: trunk/src/resource_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/resource_manager.cxx
===================================================================
--- trunk/src/resource_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/resource_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,82 +0,0 @@
-//  $Id: resource_manager.cxx,v 1.12 2003/09/15 20:23:53 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <assert.h>
-#include <iostream>
-#include <ClanLib/Display/surface.h>
-#include <ClanLib/Display/font.h>
-#include <ClanLib/Core/Resources/resource_manager.h>
-#include <ClanLib/Core/System/error.h>
-#include <ClanLib/Core/System/cl_assert.h>
-
-#include "path_manager.hxx"
-#include "resource_manager.hxx"
-
-ResourceManager* resources;
-
-ResourceManager::ResourceManager ()
-{
-  resource_manager  = new CL_ResourceManager();
-  resource_manager->add_resources(CL_ResourceManager(path_manager.complete("feuerkraft.xml"), false));
-  resource_manager->add_resources(CL_ResourceManager(path_manager.complete("tiles.xml"), false));
-}
-
-ResourceManager::~ResourceManager ()
-{
-}
-
-CL_Surface
-ResourceManager::get_surface (const std::string& location)
-{
-  try {
-    return CL_Surface (location, resource_manager);
-  } catch(CL_Error& err) {
-      std::cout << "ResourceManager: Error: " << err.message << std::endl;
-    return CL_Surface();
-  }
-}
-
-CL_Sprite
-ResourceManager::get_sprite (const std::string& location)
-{
-  try {
-    CL_Sprite sprite(location, resource_manager);
-    sprite.set_alignment(origin_center);
-    return sprite;
-  } catch (CL_Error& err) {
-    std::cout << "ResourceManager: Error: " << err.message << std::endl;
-    return CL_Sprite ();
-  }
-}
-
-CL_Font
-ResourceManager::get_font(const std::string& location)
-{
-  try {
-    CL_Font font(location, resource_manager);
-    return font;
-  } catch(CL_Error& err) {
-    std::cout << "Couldn't load font: " << location << std::endl;
-    std::cout << "CL_Error: " << err.message << std::endl;
-    assert(false);
-    return CL_Font();
-  }
-}
-
-/* EOF */

Copied: trunk/src/robot_tank.cpp (from rev 341, trunk/src/robot_tank.cxx)


Property changes on: trunk/src/robot_tank.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/robot_tank.cxx
===================================================================
--- trunk/src/robot_tank.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/robot_tank.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,145 +0,0 @@
-//  $Id: robot_tank.cxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "vector2d.hxx"
-#include "view.hxx"
-#include "math.hxx"
-#include "resource_manager.hxx"
-#include "robot_tank.hxx"
-
-RobotTank::RobotTank(float x_, float y_, float orientation_, float velocity_)
-{
-  pos.x = x_;
-  pos.y = y_;
-  orientation = orientation_; 
-  velocity = velocity_;
-
-  max_velocity = 150.0f;
-  throttle_state = T_NEUTRAL;
-  steering_state = S_NEUTRAL;
-
-  sprite = resources->get_sprite("feuerkraft/trooper");
-  sprite.set_alignment(origin_center);
-
-  ai_count = 0;
-}
-
-void
-RobotTank::update (float delta)
-{
-  update_ai(delta);
-
-  const float max_acceleration = 25.0f;
-  const float max_deceleration = 10.0f;
-  const float max_steering = 1.0f;
-
-  // update velocity
-  switch(throttle_state)
-    {
-    case T_ACCELERATE:
-      velocity += max_acceleration * delta;
-      break;
-    case T_NEUTRAL:
-      velocity -= 5.0f * delta;
-      break;
-    case T_BREAK:
-      velocity -= max_deceleration * delta;
-      break;
-    default:
-      assert(false);
-    }
-
-  if (velocity < 0)
-    velocity = 0;
-  else if (velocity > max_velocity)
-    velocity = max_velocity;
-
-  // update orientation
-  switch(steering_state)
-    {
-    case S_LEFT:
-      orientation += max_steering * delta;
-      break;
-    case S_NEUTRAL:
-      // do nothing
-      break;
-    case S_RIGHT:
-      orientation -= max_steering * delta;
-      break;
-    default:
-      assert(false);
-    }
-
-  // update position
-  FloatVector2d vec(velocity * delta, 0);
-  vec.set_orientation(orientation);
-  pos += vec;
-}
-
-void
-RobotTank::update_ai (float delta)
-{
-  ai_count += delta;
-  
-  if (ai_count > 2)
-    {
-      ai_count = 0;
-      
-      switch (rand() % 5)
-        {
-        case 0:
-        case 1:
-        case 2:
-          throttle_state = T_ACCELERATE;
-          break;
-        case 3:
-          throttle_state = T_BREAK;
-          break;
-        case 4:
-          throttle_state = T_NEUTRAL;
-          break;
-        }
-      steering_state = SteeringState(rand() % S_MAX);
-    }
-}
-
-void
-RobotTank::draw (View& view)
-{
-  // FIXME: Orientation is wrong
-  sprite.set_angle(Math::deg2rad(-orientation - Math::pi_2));
-  view.get_sc().color().draw(sprite, pos.x, pos.y);
-}
-
-void
-RobotTank::draw_energie (View& view)
-{
-}
-
-void
-RobotTank::draw_radar (Radar& radar)
-{
-}
-
-void
-RobotTank::draw_levelmap (LevelMap& view)
-{
-}
-
-/* EOF */

Copied: trunk/src/rocket.cpp (from rev 341, trunk/src/rocket.cxx)


Property changes on: trunk/src/rocket.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/rocket.cxx
===================================================================
--- trunk/src/rocket.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/rocket.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,105 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "resource_manager.hxx"
-#include "collision_manager.hxx"
-#include "explosion.hxx"
-#include "particles/rocket_smoke_particle.hxx"
-#include "view.hxx"
-#include "buildings/building.hxx"
-#include "rocket.hxx"
-
-Rocket::Rocket(const FloatVector2d& pos, float orientation)
-  : pos(pos),
-    orientation(orientation),
-    velocity(10.0f),
-    max_velocity(50.0f),
-    life_time(0)
-{
-  release_count = 0;
-  sprite = resources->get_sprite("feuerkraft/rocket");
-
-  sprite_light     = resources->get_sprite("feuerkraft/rocket-light");
-  sprite_highlight = resources->get_sprite("feuerkraft/rocket-highlight");
-
-  smoke  = resources->get_sprite("feuerkraft/rocket_smoke");
-}
-
-Rocket::~Rocket()
-{
-}
-
-void
-Rocket::draw(View& view)
-{
-  sprite.set_angle(Math::rad2deg(orientation));
-  sprite_light.set_angle(Math::rad2deg(orientation));
-  sprite_highlight.set_angle(Math::rad2deg(orientation));
-
-  // Light flicker
-  sprite_light.set_alpha(Math::frand()*0.5f + 0.5f);
-  sprite_highlight.set_alpha(Math::frand()*0.5f + 0.5f);
-
-  view.get_sc().color().draw(sprite, pos.x, pos.y);
-  view.get_sc().light().draw(sprite_light, pos.x, pos.y);
-  view.get_sc().highlight().draw(sprite_highlight, pos.x, pos.y);
-}
-
-void
-Rocket::update(float delta)
-{
-  pos += FloatVector2d(velocity, 0).rotate(orientation);
-
-  velocity += 10.0f * delta;
-  if (velocity > max_velocity)
-    velocity = max_velocity;
-
-  CollisionManager::current()->add_point(get_id(), pos.x, pos.y);
-
-  release_count += delta;
-  if (release_count > 0.03f)
-    GameWorld::current()->add(new RocketSmokeParticle(pos));
-
-  while (release_count > 0.03f)
-    {
-      release_count -= 0.03f;
-    }
-
-  life_time += delta;
-  if (life_time > 2.0f)
-    {
-      detonate();
-    }
-}
-
-void
-Rocket::on_collision_with_building(Building* building)
-{
-  building->collide(35);
-  detonate();
-}
-
-void
-Rocket::detonate()
-{
-  GameWorld::current()->add_front(new Explosion(pos, Explosion::MEDIUM));
-  remove();
-}
-
-/* EOF */

Copied: trunk/src/satchel_charge.cpp (from rev 341, trunk/src/satchel_charge.cxx)


Property changes on: trunk/src/satchel_charge.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/satchel_charge.cxx
===================================================================
--- trunk/src/satchel_charge.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/satchel_charge.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,56 +0,0 @@
-//  $Id: satchel_charge.cxx,v 1.2 2003/06/20 20:54:23 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "view.hxx"
-#include "alist.hxx"
-#include "explosion.hxx"
-#include "property_set.hxx"
-#include "resource_manager.hxx"
-#include "satchel_charge.hxx"
-
-SatchelCharge::SatchelCharge(const AList& lst)
-{
-  pos.x = lst.get_float("x-pos");
-  pos.y = lst.get_float("y-pos");
-
-  properties->register_float("x-pos", &pos.x);
-  properties->register_float("y-pos", &pos.y);
-
-  sprite = resources->get_sprite ("feuerkraft/satchel");
-}
-
-void
-SatchelCharge::update(float delta)
-{
-}
-
-void
-SatchelCharge::draw(View& view)
-{
-  view.get_sc().color().draw(sprite, pos.x, pos.y);
-}
-
-void
-SatchelCharge::detonate()
-{
-  GameWorld::current()->add (new Explosion(pos, Explosion::MEDIUM));
-  remove();
-}
-
-/* EOF */

Copied: trunk/src/scm_functor.cpp (from rev 341, trunk/src/scm_functor.cxx)


Property changes on: trunk/src/scm_functor.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scm_functor.cxx
===================================================================
--- trunk/src/scm_functor.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scm_functor.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,80 +0,0 @@
-//  $Id: scm_functor.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <libguile.h>
-#include "scm_functor.hxx"
-
-SCMFunctor::SCMFunctor(SCM arg_func)
-{
-  func = arg_func;
-  scm_gc_protect_object(func);
-}
-
-SCMFunctor::~SCMFunctor()
-{
-  scm_gc_unprotect_object(func);
-}
-
-SCMFunctor::SCMFunctor(const SCMFunctor& hook)
-{
-  func = hook.func;
-
-  scm_gc_protect_object(func);
-}
-
-SCMFunctor& 
-SCMFunctor::operator= (const SCMFunctor& hook)
-{
-  if (this != &hook)
-    {
-      scm_gc_unprotect_object(func);
-
-      func = hook.func;
-
-      scm_gc_protect_object(func);
-    }
-  return *this;
-}
-
-void
-SCMFunctor::operator()()
-{
-  scm_call_0(func);
-}
-
-void
-SCMFunctor::operator()(SCM arg)
-{
-  scm_call_1(func, arg);
-}
-
-void
-SCMFunctor::operator()(SCM arg1, SCM arg2)
-{
-  scm_call_2(func, arg1, arg2);
-}
-
-void
-SCMFunctor::operator()(SCM arg1, SCM arg2, SCM arg3)
-{
-  scm_call_3(func, arg1, arg2, arg3);
-}
-
-/* EOF */

Copied: trunk/src/scm_sequence_hook.cpp (from rev 341, trunk/src/scm_sequence_hook.cxx)


Property changes on: trunk/src/scm_sequence_hook.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scm_sequence_hook.cxx
===================================================================
--- trunk/src/scm_sequence_hook.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scm_sequence_hook.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,63 +0,0 @@
-//  $Id: scm_sequence_hook.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <libguile.h>
-#include "scm_sequence_hook.hxx"
-
-SCMSequenceHook::SCMSequenceHook(SCM arg_func)
-{
-  func = arg_func;
-  scm_gc_protect_object(func);
-}
-
-SCMSequenceHook::~SCMSequenceHook()
-{
-  scm_gc_unprotect_object(func);
-}
-
-SCMSequenceHook::SCMSequenceHook(const SCMSequenceHook& hook)
-{
-  func = hook.func;
-
-  scm_gc_protect_object(func);
-}
-
-SCMSequenceHook& 
-SCMSequenceHook::operator= (const SCMSequenceHook& hook)
-{
-  if (this != &hook)
-    {
-      scm_gc_unprotect_object(func);
-
-      func = hook.func;
-
-      scm_gc_protect_object(func);
-    }
-  return *this;
-}
-
-void
-SCMSequenceHook::call()
-{
-  std::cout << "SCMSequenceHook::call(): " << get_id() << std::endl;
-  scm_call_0(func);
-}
-
-/* EOF */

Copied: trunk/src/screen.cpp (from rev 341, trunk/src/screen.cxx)


Property changes on: trunk/src/screen.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/screen.cxx
===================================================================
--- trunk/src/screen.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/screen.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,78 +0,0 @@
-//  $Id: screen.cxx,v 1.7 2003/06/06 09:49:00 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "screen.hxx"
-
-Screen::Screen ()
-{
-}
-
-Screen::~Screen ()
-{
-}
-
-void 
-Screen::draw (CL_GraphicContext& gc)
-{
-  for (GuiObjIter i = gui_objs.begin (); i != gui_objs.end (); ++i)
-    {
-      (*i)->draw(gc);
-    }
-}
-
-void 
-Screen::update (float delta)
-{
-  for (GuiObjIter i = gui_objs.begin (); i != gui_objs.end (); ++i)
-    {
-      (*i)->update (delta);
-    }
-}
-
-bool
-Screen::has(GuiObj* obj)
-{
-  for (GuiObjIter i = gui_objs.begin (); i != gui_objs.end (); ++i)
-    if (obj == *i)
-      return true;
-  
-  return false;
-}
-
-void 
-Screen::add (GuiObj* obj)
-{
-  if (!has(obj))
-    gui_objs.push_back (obj);
-}
-
-void 
-Screen::remove (GuiObj* obj)
-{
-  for (GuiObjIter i = gui_objs.begin (); i != gui_objs.end (); ++i)
-    {
-      if (*i == obj)
-        {
-          gui_objs.erase(i);
-          return;
-        }
-    }
-}
-
-/* EOF */

Copied: trunk/src/screenshot.cpp (from rev 341, trunk/src/screenshot.cxx)


Property changes on: trunk/src/screenshot.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/screenshot.cxx
===================================================================
--- trunk/src/screenshot.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/screenshot.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,84 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <stdio.h>
-#include <iostream>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
-#include <ClanLib/Display/pixel_buffer.h>
-#include <ClanLib/Display/pixel_format.h>
-#include "screenshot.hxx"
-
-void
-Screenshot::write_screenshot_pnm(const std::string& filename)
-{
-  CL_PixelBuffer buf = take_screen_shot();
-
-  FILE* out = fopen(filename.c_str(), "wb");
-  
-  if (!out)
-    {
-      perror(filename.c_str());
-      std::cout << "Screenshot: Couldn't write file: " << filename << std::endl;
-      return;
-    }
-
-  buf.lock();
-  int width  = buf.get_width();
-  int pitch  = buf.get_width()*3;
-  int height = buf.get_height();
-
-  fprintf(out,
-	  "P6\n"
-	  "# CREATOR: Feuerkraft\n"
-          "%d %d\n"
-	  "255\n",
-	  width,
-	  height);
-
-  unsigned char* data = static_cast<unsigned char*>(buf.get_data());
-  
-  for(int i = height-1; i >= 0; --i)
-    {
-      fwrite(data + pitch*i,
-             sizeof(unsigned char),
-             pitch, 
-             out);
-    }
-
-  buf.unlock();
-  fclose(out);
-}
-
-CL_PixelBuffer
-Screenshot::take_screen_shot()
-{
-  CL_PixelBuffer back_buffer = CL_Display::get_current_window()->get_back_buffer();
-  
-  unsigned short width = back_buffer.get_width();
-  unsigned short height = back_buffer.get_height();
-		
-  CL_PixelBuffer pbuf(width, height, width*3, CL_PixelFormat::bgr888);
-  back_buffer.convert(pbuf);
-  
-  return pbuf;
-}
-
-
-/* EOF */

Modified: trunk/src/scripting/Makefile.am
===================================================================
--- trunk/src/scripting/Makefile.am	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/Makefile.am	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,63 +1,63 @@
 noinst_LIBRARIES = libfeuerkraft_scripting.a
 
 command_source = \
- ai_commands.cxx \
- ai_commands.hxx \
- ai_vehicle_commands.cxx \
- ai_vehicle_commands.hxx \
- building_commands.cxx   \
- building_commands.hxx   \
- clanlib_commands.hxx    \
- clanlib_commands.cxx    \
- comm_commands.cxx       \
- comm_commands.hxx       \
- display_commands.hxx    \
- display_commands.cxx    \
- debug_commands.hxx      \
- debug_commands.cxx      \
- effect_commands.cxx     \
- effect_commands.hxx     \
- gameobj_commands.cxx    \
- gameobj_commands.hxx    \
- game_commands.cxx       \
- game_commands.hxx       \
- input_commands.cxx      \
- input_commands.hxx      \
- menu_commands.cxx       \
- menu_commands.hxx       \
- object_commands.cxx     \
- object_commands.hxx     \
- player_commands.cxx     \
- player_commands.hxx     \
- sequence_commands.cxx   \
- sequence_commands.hxx   \
- sound_commands.cxx      \
- sound_commands.hxx      \
- trigger_commands.cxx    \
- trigger_commands.hxx    \
- vehicle_commands.cxx    \
- vehicle_commands.hxx    \
- script_helper.cxx       \
- script_helper.hxx
+ ai_commands.cpp \
+ ai_commands.hpp \
+ ai_vehicle_commands.cpp \
+ ai_vehicle_commands.hpp \
+ building_commands.cpp   \
+ building_commands.hpp   \
+ clanlib_commands.hpp    \
+ clanlib_commands.cpp    \
+ comm_commands.cpp       \
+ comm_commands.hpp       \
+ display_commands.hpp    \
+ display_commands.cpp    \
+ debug_commands.hpp      \
+ debug_commands.cpp      \
+ effect_commands.cpp     \
+ effect_commands.hpp     \
+ gameobj_commands.cpp    \
+ gameobj_commands.hpp    \
+ game_commands.cpp       \
+ game_commands.hpp       \
+ input_commands.cpp      \
+ input_commands.hpp      \
+ menu_commands.cpp       \
+ menu_commands.hpp       \
+ object_commands.cpp     \
+ object_commands.hpp     \
+ player_commands.cpp     \
+ player_commands.hpp     \
+ sequence_commands.cpp   \
+ sequence_commands.hpp   \
+ sound_commands.cpp      \
+ sound_commands.hpp      \
+ trigger_commands.cpp    \
+ trigger_commands.hpp    \
+ vehicle_commands.cpp    \
+ vehicle_commands.hpp    \
+ script_helper.cpp       \
+ script_helper.hpp
 
 libfeuerkraft_scripting_a_SOURCES = \
  $(command_source) \
- feuerkraft_wrap.cxx
+ feuerkraft_wrap.cpp
 
 #lib_LTLIBRARIES = libguile-feuerkraft.la
 
-#libguile_feuerkraft_la_SOURCES = feuerkraft_wrap.cxx
+#libguile_feuerkraft_la_SOURCES = feuerkraft_wrap.cpp
 #libguile_feuerkraft_la_LIBADD = libfeuerkraft_scripting.a
 
-# Include feuerkraft_wrap.cxx in case the user doesn't have swig installed
-EXTRA_DIST = feuerkraft_wrap.cxx
+# Include feuerkraft_wrap.cpp in case the user doesn't have swig installed
+EXTRA_DIST = feuerkraft_wrap.cpp
 
-feuerkraft_wrap.cxx: feuerkraft.i  $(command_source)
+feuerkraft_wrap.cpp: feuerkraft.i  $(command_source)
 	$(SWIG) -guile -c++  -o $@ $<
 
 # We override the default compile command to skip all the warnings
 # that compiling the wrappers causes.
-feuerkraft_wrap.o : feuerkraft_wrap.cxx
+feuerkraft_wrap.o : feuerkraft_wrap.cpp
 	$(CXX) -c -O2 -o $@ $<
 
 # EOF #

Copied: trunk/src/scripting/ai_commands.cpp (from rev 341, trunk/src/scripting/ai_commands.cxx)


Property changes on: trunk/src/scripting/ai_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/ai_commands.cxx
===================================================================
--- trunk/src/scripting/ai_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/ai_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,79 +0,0 @@
-//  $Id: ai_commands.cxx,v 1.3 2003/06/20 20:54:23 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../soldier.hxx"
-#include "../ai_manager.hxx"
-#include "script_helper.hxx"
-#include "ai_commands.hxx"
-
-void
-ai_goto(int handle, float x, float y)
-{
-  Soldier* soldier = Scripting::get_object<Soldier>(handle);
-
-  if (soldier)
-    {
-      AI* ai = AIManager::instance()->get_ai(soldier);
-      SoldierAI* soldier_ai = 0;
-      if (ai && (soldier_ai = dynamic_cast<SoldierAI*>(ai)))
-        {
-          soldier_ai->goto_to(FloatVector2d(x, y));
-        }
-      else
-        {
-          std::cout << "Soldier doesn't have an AI" << std::endl;
-        }
-    }
-  else
-    {
-      std::cout << "No soldier with id: " << handle << std::endl;
-    }
-}
-
-void
-ai_stop(int handle)
-{
-  SoldierAI* soldier_ai = Scripting::get_ai<SoldierAI>(handle);
-  if (soldier_ai)
-    soldier_ai->stop();
-}
-
-bool
-ai_has(int handle)
-{
-  AI* ai = AIManager::instance()->get_ai(Scripting::get_object<GameObj>(handle));
-  return ai;
-}
-
-void
-ai_attach(int handle)
-{
-  Unit* unit = Scripting::get_object<Unit>(handle);
-  if (unit)
-    unit->attach_ai();
-}
-
-void ai_dettach(int handle)
-{
-  Unit* unit = Scripting::get_object<Unit>(handle);
-  if (unit)
-    unit->dettach_ai();
-}
-
-/* EOF */

Copied: trunk/src/scripting/ai_vehicle_commands.cpp (from rev 341, trunk/src/scripting/ai_vehicle_commands.cxx)


Property changes on: trunk/src/scripting/ai_vehicle_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/ai_vehicle_commands.cxx
===================================================================
--- trunk/src/scripting/ai_vehicle_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/ai_vehicle_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,76 +0,0 @@
-//  $Id: ai_vehicle_commands.cxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../game_obj_manager.hxx"
-#include "../ai_vehicle.hxx"
-#include "ai_vehicle_commands.hxx"
-
-static AIVehicle*
-get_AIVehicle(int object_id)
-{
-  AIVehicle* vehicle = dynamic_cast<AIVehicle*>(GameObjManager::current()->get_object_by_id(object_id));
-  if (vehicle)
-    {
-      return vehicle;
-    }
-  else
-    {
-      std::cout  << "AIVehicle: no object given by id: " << object_id << std::endl;
-      return 0;
-    }
-}
- 
-
-int
-ai_vehicle_create(int x, int y)
-{
-  AIVehicle* vehicle = new AIVehicle(FloatVector2d(x,y));
-
-  return GameObjManager::current()->add_object(vehicle);
-}
-
-void
-ai_vehicle_wait(int object_id, float seconds)
-{
-  AIVehicle* vehicle = get_AIVehicle(object_id);
-
-  if (vehicle)
-    vehicle->wait(seconds);
-}
-
-void
-ai_vehicle_drive_to(int object_id, int x, int y)
-{
-  AIVehicle* vehicle = get_AIVehicle(object_id);
-
-  if (vehicle)
-    vehicle->drive_to(FloatVector2d(x, y));
-}
-
-void
-ai_vehicle_clear_orders(int object_id)
-{
-  AIVehicle* vehicle = get_AIVehicle(object_id);
-
-  if (vehicle)
-    vehicle->clear_orders();
-}
-
-/* EOF */

Copied: trunk/src/scripting/building_commands.cpp (from rev 341, trunk/src/scripting/building_commands.cxx)


Property changes on: trunk/src/scripting/building_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/building_commands.cxx
===================================================================
--- trunk/src/scripting/building_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/building_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,177 +0,0 @@
-//  $Id: building_commands.cxx,v 1.13 2003/06/23 09:04:10 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <guile/gh.h>
-#include "../guile.hxx"
-#include "../game_world.hxx"
-#include "../property.hxx"
-#include "../property_set.hxx"
-#include "../buildings/building.hxx"
-#include "../buildings/custom_building.hxx"
-#include "../buildings/building_type_manager.hxx"
-#include "../buildings/building_manager.hxx"
-#include "building_commands.hxx"
-
-int
-building_create(int type, int x, int y)
-{
-  Building* building;
-
-  if (type == 1)
-    {
-      building = 0;
-    }
-  else
-    {
-      AList props;
-      props.set_int("x-pos", x);
-      props.set_int("y-pos", y);
-      building = BuildingTypeManager::current()->create_building(type, props);
-    }
-
-  if (building)
-    {
-      BuildingManager::current()->add_building(building, x, y);
-      return building->get_id();
-    }
-  else
-    {
-      std::cout << "BuildingCommands: Unhandled building type: " << type << std::endl;
-      return 0;
-    }
-}
-
-void
-building_remove(int handle)
-{
-}
-
-int
-building_get_tile(int x, int y)
-{
-  return 0;
-}
-
-int
-building_get(int x, int y)
-{
-  return 0;
-}
-
-int
-building_create_type(const char* name, SCM lst)
-{
-  AList alist;
-  
-  while(!gh_null_p(lst))
-    {
-      SCM key   = gh_car(lst);
-
-      if (gh_null_p(gh_cdr(lst)))
-        {
-          std::cout << "Missing argument to keyword!" << std::endl;
-        }
-
-      SCM value = gh_cadr(lst);
-
-      if (gh_boolean_p(value))
-        {
-          alist.set_bool(Guile::keyword2string(key), gh_scm2bool(value));
-        }
-      else if (gh_number_p(value))
-        {
-          alist.set_int(Guile::keyword2string(key), gh_scm2int(value));
-        }
-      else if (gh_string_p(value))
-        {
-          alist.set_string(Guile::keyword2string(key), Guile::scm2string(value));
-        }
-      else
-        {
-          std::cout << "BuildingCommands: unknown argumnent type" << std::endl;
-        }
-
-      lst = gh_cddr(lst);
-    }
-
-  return BuildingTypeManager::current()->register_factory(new CustomBuildingFactory(name, alist));
-}
-
-SCM 
-building_get_property(int handle, const char* name)
-{
-  Building* building = BuildingManager::current()->get_building_by_id(handle);
-  if (!building)
-    {
-      std::cout << "building_get_property: unknown handle: " << handle << std::endl;
-      return SCM_UNSPECIFIED;
-    }
-  else
-    {
-      PropertySet* properties = building->get_properties();
-      if (!properties)
-        {
-          return SCM_UNSPECIFIED;
-        }
-      else
-        {
-          Property* property = properties->lookup(name);
-          
-          if (!property)
-            {
-              return SCM_UNSPECIFIED;
-            }
-          else
-            {
-              return Guile::property2scm(*property);
-            }
-        }
-    }
-}
-
-void
-building_set_property(int handle, const char* name, SCM value)
-{
-  Building* building = BuildingManager::current()->get_building_by_id(handle);
-  if (!building)
-    {
-      std::cout << "building_set_property: unknown handle: " << handle << std::endl;
-    }
-  else
-    {
-      PropertySet* properties = building->get_properties();
-      if (!properties)
-        {
-          std::cout << "building_set_property: object has no properties" << std::endl;
-        }
-      else
-        {
-          Guile::scm2property(*properties, name, value);
-        }
-    }
-}
-
-int
-building_get_type_from_name(const char* name)
-{
-  return BuildingTypeManager::current()->name_to_id(name);
-}
-
-/* EOF */

Copied: trunk/src/scripting/clanlib_commands.cpp (from rev 341, trunk/src/scripting/clanlib_commands.cxx)


Property changes on: trunk/src/scripting/clanlib_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/clanlib_commands.cxx
===================================================================
--- trunk/src/scripting/clanlib_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/clanlib_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,49 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "clanlib_commands.hxx"
-
-SCM post_keep_alive_func = SCM_BOOL_F;
-
-SCM  clanlib_get_post_keep_alive_func()
-{
-  return post_keep_alive_func;
-}
-
-void clanlib_set_post_keep_alive_func(SCM func)
-{
-  if (post_keep_alive_func != func)
-    {
-      if (post_keep_alive_func != SCM_BOOL_F)
-        scm_gc_unprotect_object(post_keep_alive_func);
-
-      post_keep_alive_func = func;
-      scm_gc_protect_object(post_keep_alive_func);
-    }  
-}
-
-void clanlib_call_post_keep_alive_func()
-{
-  if (post_keep_alive_func != SCM_BOOL_F)
-    {
-      gh_call0(post_keep_alive_func);
-    }
-}
-
-/* EOF */

Copied: trunk/src/scripting/comm_commands.cpp (from rev 341, trunk/src/scripting/comm_commands.cxx)


Property changes on: trunk/src/scripting/comm_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/comm_commands.cxx
===================================================================
--- trunk/src/scripting/comm_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/comm_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,41 +0,0 @@
-//  $Id: comm_commands.cxx,v 1.3 2003/06/05 21:17:11 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <sstream>
-#include "../message_buffer.hxx"
-#include "../communication_dialog.hxx"
-#include "comm_commands.hxx"
-
-void
-comm_send_message(int color, const char* str) 
-{
-  std::stringstream s;
-  s << color << ": '" << str << "'" << std::endl;
-  std::cout << "### " << str << std::endl;
-  MessageBuffer::current()->add(s.str());
-}
-
-void
-comm_unit_message(int unit, const char* str)
-{
-  CommunicationDialog::current()->send(unit, str);
-}
-
-/* EOF */

Copied: trunk/src/scripting/debug_commands.cpp (from rev 341, trunk/src/scripting/debug_commands.cxx)


Property changes on: trunk/src/scripting/debug_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/debug_commands.cxx
===================================================================
--- trunk/src/scripting/debug_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/debug_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,66 +0,0 @@
-//  $Id: debug_commands.cxx,v 1.1 2003/06/18 13:04:21 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <string.h>
-#include <stdexcept>
-#include <iostream>
-#include "../globals.hxx"
-#include "debug_commands.hxx"
-
-static
-bool& debug_lookup_flag(const char* name)
-{
-  if (strcmp(name, "colmap") == 0)
-    {
-      return draw_colmap;
-    }
-  else
-    {
-      throw std::domain_error("Debug: Unknown flag " + std::string(name));
-    }
-}
-
-void
-debug_set_flag(const char* name, bool value)
-{
-  try 
-    {
-      debug_lookup_flag(name) = value;
-    } 
-  catch (std::domain_error& err) 
-    {
-      std::cout << err.what() << std::endl;
-    }
-}
-
-bool
-debug_get_flag(const char* name)
-{
-  try 
-    {
-      return debug_lookup_flag(name);
-    } 
-  catch (std::domain_error& err) 
-    {
-      std::cout << err.what() << std::endl;
-      return false;
-    }
-}
-
-/* EOF */

Copied: trunk/src/scripting/display_commands.cpp (from rev 341, trunk/src/scripting/display_commands.cxx)


Property changes on: trunk/src/scripting/display_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/display_commands.cxx
===================================================================
--- trunk/src/scripting/display_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/display_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,53 +0,0 @@
-//  $Id: display_commands.cxx,v 1.3 2003/06/08 15:31:27 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../display_manager.hxx"
-#include "display_commands.hxx"
-
-bool
-display_levelmap_visible()
-{
-  return DisplayManager::current()->get_levelmap();
-}
-
-void
-display_show_levelmap()
-{
-  DisplayManager::current()->show_levelmap(); 
-}
-
-void
-display_hide_levelmap()
-{
-  DisplayManager::current()->hide_levelmap();
-}
-
-void
-display_show_help()
-{
-  DisplayManager::current()->show_help();
-}
-
-void
-display_hide_help()
-{
-  DisplayManager::current()->hide_help();
-}
-
-/* EOF */

Copied: trunk/src/scripting/effect_commands.cpp (from rev 341, trunk/src/scripting/effect_commands.cxx)


Property changes on: trunk/src/scripting/effect_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/effect_commands.cxx
===================================================================
--- trunk/src/scripting/effect_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/effect_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,30 +0,0 @@
-//  $Id: effect_commands.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../explosion.hxx"
-#include "../game_obj_manager.hxx"
-#include "effect_commands.hxx"
-
-void effect_add_explosion(int x, int y)
-{
-  GameObjManager::current()->add_object(new Explosion(FloatVector2d(x,y), 
-                                                      Explosion::MEDIUM));
-}
-
-/* EOF */

Copied: trunk/src/scripting/game_commands.cpp (from rev 341, trunk/src/scripting/game_commands.cxx)


Property changes on: trunk/src/scripting/game_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/game_commands.cxx
===================================================================
--- trunk/src/scripting/game_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/game_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,48 +0,0 @@
-//  $Id: game_commands.cxx,v 1.1 2003/06/10 00:38:50 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../game_session_manager.hxx"
-#include "game_commands.hxx"
-
-void
-game_pause()
-{
-  GameSessionManager::instance()->pause();
-}
-
-void
-game_quit()
-{
-  GameSessionManager::instance()->quit();
-}
-
-void
-game_load(const char* filename)
-{
-  GameSessionManager::instance()->load(filename);
-}
-
-void
-game_save(const char* filename)
-{
-  GameSessionManager::instance()->save(filename);
-}
-
-/* EOF */

Copied: trunk/src/scripting/gameobj_commands.cpp (from rev 341, trunk/src/scripting/gameobj_commands.cxx)


Property changes on: trunk/src/scripting/gameobj_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/gameobj_commands.cxx
===================================================================
--- trunk/src/scripting/gameobj_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/gameobj_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,164 +0,0 @@
-//  $Id: gameobj_commands.cxx,v 1.9 2003/06/22 21:51:21 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../guile.hxx"
-#include "../property_set.hxx"
-#include "../property.hxx"
-
-#include "../satchel_charge.hxx"
-#include "../soldier.hxx"
-#include "../vehicles/vehicle.hxx"
-#include "../vehicles/helicopter.hxx"
-#include "../unit.hxx"
-
-#include "../game_obj.hxx"
-#include "../game_obj_manager.hxx"
-#include "../game_obj_factory.hxx"
-#include "gameobj_commands.hxx"
-
-SCM
-gameobj_get_property(int handle, const char* name)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  if (obj)
-    {
-      PropertySet* properties = obj->get_properties();
-      if (properties)
-        {
-          Property* prop = properties->lookup(name);
-          if (prop)
-            return Guile::property2scm(*prop);
-        }
-    }
-    
-  return SCM_UNSPECIFIED;
-}
-
-void
-gameobj_set_property(int handle, const char* name, SCM value)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  if (obj)
-    {
-      PropertySet* properties = obj->get_properties();
-      if (properties)
-        {
-          Guile::scm2property(*properties, name, value);
-        }      
-    }
-}
-
-SCM
-gameobj_properties(int handle)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  
-  if (obj)
-    {
-      SCM lst = SCM_EOL;
-      PropertySet* properties = obj->get_properties();
-
-      if (properties)
-        {
-          for (PropertySet::iterator i = properties->begin();
-               i != properties->end();
-               ++i)
-            {
-              lst = gh_cons(gh_str02scm(i->second->get_name().c_str()), lst);
-            }
-        }
-      return gh_reverse(lst);
-    }
-  return SCM_BOOL_F;
-}
-
-int
-gameobj_create(int type_id, SCM lst)
-{
-  GameObj* obj = GameObjFactory::instance()->create(type_id, Guile::scm2alist(lst));
-  if (obj)
-    return GameObjManager::current()->add_object(obj);
-  else
-    return 0;
-}
-
-void
-gameobj_remove(int handle)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  if (obj)
-    obj->remove();
-}
-
-bool
-gameobj_is_vehicle(int handle)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  return (obj && dynamic_cast<Vehicle*>(obj));
-}
-
-bool
-gameobj_is_unit(int handle)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  return (obj && dynamic_cast<Unit*>(obj));
-}
-
-bool
-gameobj_is_soldier(int handle)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  return (obj && dynamic_cast<Soldier*>(obj));
-}
-
-bool
-gameobj_is_helicopter(int handle)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  return (obj && dynamic_cast<Helicopter*>(obj));
-}
-
-void
-satchel_detonate(int handle)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  if (obj)
-    {
-      SatchelCharge* satchel = dynamic_cast<SatchelCharge*>(obj);
-      if (satchel)
-        satchel->detonate();
-    }
-}
-
-SCM
-gameobj_get_all()
-{
-  SCM lst = SCM_EOL;
-
-  for (GameObjManager::iterator i = GameObjManager::current()->begin();
-       i != GameObjManager::current()->end();
-       ++i)
-    {
-      lst = gh_cons(scm_long2num((*i)->get_id()), lst);
-    }
-
-  return scm_reverse(lst);
-}
-
-/* EOF */

Copied: trunk/src/scripting/input_commands.cpp (from rev 341, trunk/src/scripting/input_commands.cxx)


Property changes on: trunk/src/scripting/input_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/input_commands.cxx
===================================================================
--- trunk/src/scripting/input_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/input_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,60 +0,0 @@
-//  $Id: input_commands.cxx,v 1.5 2003/06/20 20:54:23 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/mouse.h>
-#include "../scm_functor.hxx"
-#include "../keys.hxx"
-#include "../view.hxx"
-#include "../keyboard_manager.hxx"
-#include "../input/input_manager.hxx"
-#include "input_commands.hxx"
-
-void
-input_register_callback(const char* key, SCM func)
-{
-  KeyboardManager::instance()->register_down_callback(string2keyid(key), SCMFunctor(func));
-}
-
-int
-input_get_mouse_x()
-{
-  return CL_Mouse::get_x();
-}
-
-int
-input_get_mouse_y()
-{
-  return CL_Mouse::get_y();
-}
-
-float
-input_get_mouse_world_x()
-{
-  return View::current()->screen_to_world(FloatVector2d(CL_Mouse::get_x(),
-                                                        CL_Mouse::get_y())).x;  
-}
-
-float
-input_get_mouse_world_y()
-{
-  return View::current()->screen_to_world(FloatVector2d(CL_Mouse::get_x(),
-                                                        CL_Mouse::get_y())).y;
-}
-
-/* EOF */

Copied: trunk/src/scripting/menu_commands.cpp (from rev 341, trunk/src/scripting/menu_commands.cxx)


Property changes on: trunk/src/scripting/menu_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/menu_commands.cxx
===================================================================
--- trunk/src/scripting/menu_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/menu_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,94 +0,0 @@
-//  $Id: menu_commands.cxx,v 1.7 2003/10/31 23:24:41 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../scm_functor.hxx"
-#include "../menu_handle_mgr.hxx"
-#include "../display_manager.hxx"
-#include "menu_commands.hxx"
-
-void
-menu_show(int menu_id)
-{
-  Menu* menu = menu_handle_mgr.lookup_by_handle(menu_id);
-  if (menu)
-    DisplayManager::current()->push_menu(menu);
-  else
-    std::cout << "Incorrect menu handle: " << menu_id << std::endl;
-}
-
-void
-menu_hide()
-{
-  DisplayManager::current()->hide_menu();
-}
-
-int
-menu_create()
-{
-  Menu* menu = menu_handle_mgr.create();
-  return menu_handle_mgr.lookup_by_object(menu);
-}
-
-int
-menu_add_item(int menu_id, const char* label, SCM func)
-{
-  Menu* menu = menu_handle_mgr.lookup_by_handle(menu_id);
-  if (menu)
-    {
-      MenuItem* menu_item = menu_item_handle_mgr.create("- " + std::string(label),
-                                                        new MenuItemGenericFunctor<SCMFunctor>(func));
-      menu->add_item(menu_item);
-      return menu_item_handle_mgr.lookup_by_object(menu_item);
-    }
-  return -1;
-}
-
-int
-menu_add_submenu_item(int menu_id, const char* label, int sub_menu_id)
-{
-  Menu* menu     = menu_handle_mgr.lookup_by_handle(menu_id);
-  Menu* sub_menu = menu_handle_mgr.lookup_by_handle(sub_menu_id);
-
-  if (menu && sub_menu)
-    {
-      MenuItem* menu_item = menu_item_handle_mgr.create("+ " + std::string(label), 
-                                                        new MenuItemSubMenuFunctor(sub_menu));
-      menu->add_item(menu_item);
-      return menu_item_handle_mgr.lookup_by_object(menu_item);
-    }
-  else
-    {
-      std::cout << __FUNCTION__ << ": Invalid menu id: " << menu_id << " " << sub_menu_id << std::endl;
-      return 0;
-    }
-}
-
-void
-menu_remove_item(int menu_id, int item_id)
-{
-}
-
-bool
-menu_visible()
-{
-  return DisplayManager::current()->get_menu();
-}
-
-/* EOF */

Copied: trunk/src/scripting/object_commands.cpp (from rev 341, trunk/src/scripting/object_commands.cxx)


Property changes on: trunk/src/scripting/object_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/object_commands.cxx
===================================================================
--- trunk/src/scripting/object_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/object_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,29 +0,0 @@
-//  $Id: object_commands.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../game_obj_manager.hxx"
-#include "object_commands.hxx"
-
-void object_remove(int id)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(id);
-  GameObjManager::current()->remove_object(obj);
-}
-
-/* EOF */

Copied: trunk/src/scripting/player_commands.cpp (from rev 341, trunk/src/scripting/player_commands.cxx)


Property changes on: trunk/src/scripting/player_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/player_commands.cxx
===================================================================
--- trunk/src/scripting/player_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/player_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,75 +0,0 @@
-//  $Id: player_commands.cxx,v 1.6 2003/06/17 22:06:13 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../game_obj.hxx"
-#include "../unit.hxx"
-#include "../player.hxx"
-#include "../game_obj_manager.hxx"
-#include "player_commands.hxx"
-
-extern Player* player;
-
-void
-player_set_current_unit(int handle)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  if (obj)
-    {
-      Unit* unit = dynamic_cast<Unit*>(obj);
-      if (unit)
-        player->set_current_unit(unit);
-    }
-  else
-    {
-      std::cout << __FUNCTION__ << ": No such object: " << handle << std::endl;
-    }
-}
-
-int
-player_get_current_unit()
-{
-  GameObj* game_obj = player->get_current_unit();
-  return game_obj->get_id();
-}
-
-void
-player_set_soldier(int handle)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  if (obj)
-    {
-      Unit* unit = dynamic_cast<Unit*>(obj);
-      if (unit)
-        player->set_soldier(unit);
-    }
-  else
-    {
-      std::cout << __FUNCTION__ << ": No such object: " << handle << std::endl;
-    }
-}
-
-int
-player_get_soldier()
-{
-  GameObj* game_obj = player->get_soldier();
-  return game_obj->get_id();
-}
-
-/* EOF */

Copied: trunk/src/scripting/script_helper.cpp (from rev 341, trunk/src/scripting/script_helper.cxx)


Property changes on: trunk/src/scripting/script_helper.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/script_helper.cxx
===================================================================
--- trunk/src/scripting/script_helper.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/script_helper.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,24 +0,0 @@
-//  $Id: script_helper.cxx,v 1.1 2003/06/18 13:03:13 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "script_helper.hxx"
-
-
-
-/* EOF */

Copied: trunk/src/scripting/sequence_commands.cpp (from rev 341, trunk/src/scripting/sequence_commands.cxx)


Property changes on: trunk/src/scripting/sequence_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/sequence_commands.cxx
===================================================================
--- trunk/src/scripting/sequence_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/sequence_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,39 +0,0 @@
-//  $Id: sequence_commands.cxx,v 1.4 2003/09/15 20:23:53 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../scm_functor.hxx"
-#include "../sequence_manager.hxx"
-#include "sequence_commands.hxx"
-
-int  sequence_start()
-{
-  return SequenceManager::current()->start_sequence();
-}
-
-void sequence_end(int id)
-{
-  SequenceManager::current()->end_sequence(id);
-}
-
-void sequence_add_hook(SCM func)
-{
-  SequenceManager::current()->add_hook(new GenericSequenceHook<SCMFunctor>(SCMFunctor(func)));
-}
-
-/* EOF */

Copied: trunk/src/scripting/sound_commands.cpp (from rev 341, trunk/src/scripting/sound_commands.cxx)


Property changes on: trunk/src/scripting/sound_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/sound_commands.cxx
===================================================================
--- trunk/src/scripting/sound_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/sound_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,45 +0,0 @@
-//  $Id: sound_commands.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../sound/sound.hxx"
-#include "sound_commands.hxx"
-
-void
-sound_play_music(const char* name)
-{
-}
-
-void
-sound_stop_music()
-{
-}
-
-int
-sound_play_sound(const char* name)
-{
-  PingusSound::play_sound(name);
-  return 0; // Returning a handle is currently not supported 
-}
-
-void
-sound_stop_sound(int handle)
-{
-}
-
-/* EOF */

Copied: trunk/src/scripting/trigger_commands.cpp (from rev 341, trunk/src/scripting/trigger_commands.cxx)


Property changes on: trunk/src/scripting/trigger_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/trigger_commands.cxx
===================================================================
--- trunk/src/scripting/trigger_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/trigger_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,43 +0,0 @@
-//  $Id: trigger_commands.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../trigger_manager.hxx"
-#include "../scm_functor.hxx"
-#include "trigger_commands.hxx"
-
-// FIXME: return handles to the triggers to allow removal of them
-
-void
-trigger_add_timed(float seconds, SCM func)
-{
-  TriggerManager::current()->add_timed_trigger(seconds, SCMFunctor(func));
-}
-
-void
-trigger_add_tile(int x, int y, SCM func)
-{
-  TriggerManager::current()->add_tile_trigger(x, y, SCMFunctor(func));
-}
-
-void
-trigger_add_region(int x1, int y1, int x2, int y2, SCM func)
-{
-}
-
-/* EOF */

Copied: trunk/src/scripting/vehicle_commands.cpp (from rev 341, trunk/src/scripting/vehicle_commands.cxx)


Property changes on: trunk/src/scripting/vehicle_commands.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/scripting/vehicle_commands.cxx
===================================================================
--- trunk/src/scripting/vehicle_commands.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/scripting/vehicle_commands.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,70 +0,0 @@
-//  $Id: vehicle_commands.cxx,v 1.2 2003/06/07 18:57:43 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../vehicles/helicopter.hxx"
-#include "../vehicles/vehicle.hxx"
-#include "../game_obj_manager.hxx"
-#include "vehicle_commands.hxx"
-
-int vehicle_find_nearest(float x, float y, float max_distance)
-{
-  Vehicle* nearest_vehicle = 0;
-  float    nearest_vehicle_distance = 0;
-  
-  for (GameObjManager::iterator i = GameObjManager::current()->begin();
-       i != GameObjManager::current()->end(); 
-       ++i)
-    {
-      Vehicle* vehicle = dynamic_cast<Vehicle*>(*i);
-      if (vehicle)
-        {
-          float distance = (vehicle->get_pos() - FloatVector2d(x, y)).get_length();
-          if (distance <= max_distance)
-            {
-              if (nearest_vehicle)
-                {
-                  if (distance < nearest_vehicle_distance)
-                    nearest_vehicle = vehicle;
-                }
-              else
-                {
-                  nearest_vehicle = vehicle;
-                }
-            }           
-        }
-    }
-  if (nearest_vehicle)
-    return nearest_vehicle->get_id();
-  else
-    return 0;
-}
-
-void
-helicopter_start_or_land(int handle)
-{
-  GameObj* obj = GameObjManager::current()->get_object_by_id(handle);
-  if (obj)
-    {
-      Helicopter* heli = dynamic_cast<Helicopter*>(obj);
-      if (heli)
-        heli->land_or_start();
-    }
-}
-
-/* EOF */

Copied: trunk/src/sequence_manager.cpp (from rev 341, trunk/src/sequence_manager.cxx)


Property changes on: trunk/src/sequence_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sequence_manager.cxx
===================================================================
--- trunk/src/sequence_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/sequence_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,70 +0,0 @@
-//  $Id: sequence_manager.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "sequence_manager.hxx"
-
-SequenceManager* SequenceManager::current_ = 0; 
-
-SequenceHook::SequenceHook()
-{
-  
-}
-
-void
-SequenceHook::call()
-{
-  std::cout << "SequenceHook: " << id << " called" << std::endl;
-}
-
-SequenceManager::SequenceManager()
-{
-  current_sequence_id = 0;
-}
-
-int
-SequenceManager::start_sequence()
-{
-  ++current_sequence_id;
-
-  return current_sequence_id;
-}
-
-void
-SequenceManager::end_sequence(int sequence_id)
-{
-  //std::cout << "Calling hook with id: " << current_sequence_id << " " << hooks.size() << std::endl;
-  for (Hooks::iterator i = hooks.begin(); i != hooks.end(); ++i)
-    {
-      if ((*i)->get_id() == sequence_id)
-        {
-          (*i)->call();
-        }
-    }
-}
-
-void
-SequenceManager::add_hook(SequenceHook* hook)
-{
-  std::cout << "Adding hook with id: " << current_sequence_id << std::endl;
-  hook->set_id(current_sequence_id);
-  hooks.push_back(hook);
-}
-
-/* EOF */

Copied: trunk/src/sexpr_world_reader.cpp (from rev 341, trunk/src/sexpr_world_reader.cxx)


Property changes on: trunk/src/sexpr_world_reader.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sexpr_world_reader.cxx
===================================================================
--- trunk/src/sexpr_world_reader.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/sexpr_world_reader.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,187 +0,0 @@
-//  $Id: sexpr_world_reader.cxx,v 1.6 2003/08/20 00:15:10 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <assert.h>
-#include "guile.hxx"
-#include "world_builder.hxx"
-#include "sexpr_world_reader.hxx"
-
-SexprWorldReader::SexprWorldReader(const std::string& arg_filename, 
-                                   WorldBuilder* arg_builder)
-  : builder(arg_builder)
-{
-  SCM fdes = scm_open_file (scm_makfrom0str(arg_filename.c_str()),
-                            scm_makfrom0str("r"));
-  SCM lst  = scm_read (fdes);
-
-  data = lst;
-
-  scm_close(fdes);
-}
-
-SexprWorldReader::SexprWorldReader(SCM arg_data, WorldBuilder* arg_builder)
-  : builder(arg_builder),
-    data(arg_data)
-{
-}
-
-void
-SexprWorldReader::run()
-{
-  parse_file(data);
-}
-
-void
-SexprWorldReader::parse_file(SCM desc)
-{
-  if (gh_equal_p (gh_symbol2scm ("feuerkraft-scenario"), gh_car(desc)))
-    {
-      desc = gh_cdr(desc);
-    }
-  else
-    {
-      std::cout << "File is not a feuerkraft scenario" << std::endl;
-      assert(false);
-    }
-
-  while (gh_pair_p(desc))
-    {
-      if (gh_pair_p (gh_car (desc)))
-	{
-	  SCM symbol = gh_caar(desc);
-	  SCM data   = gh_cdar(desc);   
-          
-	  if (gh_symbol_p (symbol))
-	    {
-	      if (gh_equal_p(gh_symbol2scm("groundmap"), symbol))
-		{
-		  parse_groundmap(data);
-		}
-	      else if (gh_equal_p(gh_symbol2scm("buildings"), symbol)) 
-		{
-                  parse_buildings(data);
-		}
-	      else if (gh_equal_p(gh_symbol2scm("objects"), symbol))
-		{
-		  parse_objects(data);
-		}
-	      else if (gh_equal_p(gh_symbol2scm("scripts"), symbol))
-		{
-		  parse_scripts(data);
-		}
-	      else
-		{
-		  std::cout << "Error: " << symbol << " " << data << std::endl;;
-		}
-	    }
-	  else
-	    {
-	      std::cout << "Error not a symbol: ";// << symbol << " " << data << std::endl;;
-	      gh_display (symbol); gh_newline ();
-	    }
-	}
-      else
-	{
-	  std::cout << "Error not a pair: " << gh_car(desc) << std::endl;;
-	}
-
-      desc = gh_cdr(desc);
-    }
-}
-
-void
-SexprWorldReader::parse_buildings(SCM data)
-{
-  while(!gh_null_p(data))
-    {
-      SCM building = gh_car(data);
-      
-      if (gh_symbol_p(gh_car(building)))
-        {
-          builder->add_building(Guile::symbol2string(gh_car(building)),
-                                Guile::scm2alist(gh_cdr(building)));
-        }
-      else
-        {
-          std::cout << "SexprWorldReader: Not a building" << std::endl;
-          gh_display(building);
-          gh_newline();
-        }
-
-      data = gh_cdr(data);
-    }  
-}
-
-void
-SexprWorldReader::parse_objects(SCM data)
-{
-  while(!gh_null_p(data))
-    {
-      SCM object = gh_car(data);
-      
-      if (gh_symbol_p(gh_car(object)))
-        {
-          builder->add_object(Guile::symbol2string(gh_car(object)),
-                              Guile::scm2alist(gh_cdr(object)));
-        }
-      else
-        {
-          std::cout << "SexprWorldReader: Not a script file:" << std::endl;
-          gh_display(object);
-          gh_newline();
-        }
-     
-      data = gh_cdr(data);
-    }
-}
-
-void
-SexprWorldReader::parse_brushes(SCM data)
-{
-  while(!gh_null_p(data))
-    {
-      
-      data = gh_cdr(data);
-    }  
-}
-
-void
-SexprWorldReader::parse_groundmap(SCM data)
-{
-  while(!gh_null_p(data))
-    {
-      
-      data = gh_cdr(data);
-    }  
-}
-
-void
-SexprWorldReader::parse_scripts(SCM data)
-{
-  while(!gh_null_p(data))
-    {
-      SCM script = gh_car(data);
-      
-      builder->add_script(Guile::scm2string(script));
-      
-      data = gh_cdr(data);
-    }
-}
-
-/* EOF */

Copied: trunk/src/shockwave.cpp (from rev 341, trunk/src/shockwave.cxx)


Property changes on: trunk/src/shockwave.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/shockwave.cxx
===================================================================
--- trunk/src/shockwave.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/shockwave.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,57 +0,0 @@
-//  $Id: shockwave.cxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "view.hxx"
-#include "shockwave.hxx"
-#include "resource_manager.hxx"
-
-Shockwave::Shockwave(FloatVector2d arg_pos) 
-  : pos (arg_pos)
-{
-  progress = 0;
-  sprite = resources->get_sprite ("feuerkraft/shockwave");
-}
-
-Shockwave::~Shockwave ()
-{
-}
-
-template<class T> 
-T mid (T min, T some, T max)
-{
-  return std::min(std::max(min, some), max);
-}
-
-void 
-Shockwave::draw(View& view)
-{
-  sprite.set_alpha(1.0f - (progress/10.0f));
-  sprite.set_scale(progress + .5, progress + .5);
-  view.get_sc().color().draw(sprite, pos.x, pos.y);
-}
-
-void 
-Shockwave::update (float delta)
-{
-  progress += delta * 10.0f;
-  if (progress >= 10.0)
-    remove ();
-}
-
-/* EOF */

Copied: trunk/src/shortcut_pathfinder.cpp (from rev 341, trunk/src/shortcut_pathfinder.cxx)


Property changes on: trunk/src/shortcut_pathfinder.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/shortcut_pathfinder.cxx
===================================================================
--- trunk/src/shortcut_pathfinder.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/shortcut_pathfinder.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,191 +0,0 @@
-//  $Id: shortcut_pathfinder.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/core.h>
-#include <iostream>
-#include <unistd.h>
-#include "shortcut_pathfinder.hxx"
-
-struct NodeCost;
-struct NodeWalkable;
-
-typedef ShortcutPathfinder<Field<int>, NodeWalkable, NodeCost> MyPathfinder;
-
-struct NodeWalkable {
-  inline bool operator()(int a) {
-    return a > 0;
-  };
-};
-
-struct NodeCost {
-  Pos goal;
-
-  NodeCost(Pos& goal) 
-    : goal(goal)
-  {
-  }
-
-  inline int operator()(Node& node) {
-    return int(PosDistance(Pos(node.x, node.y), goal));
-  };
-};
-
-void generate_map(Field<int>& field)
-{
-  for(int y = 0; y < field.get_height(); ++y)
-    for(int x = 0; x < field.get_width(); ++x)
-      {
-        field(x,y) = rand()%10;
-      }
-
-  // Map smoothing
-  for(int count = 0; count < 3; ++count)
-    for(int y = 1; y < field.get_height()-1; ++y)
-      for(int x = 1; x < field.get_width()-1; ++x)
-        {
-          field(x,y) = (field(x-1,y) + field(x+1,y) + field(x,y-1) + field(x,y+1))/4;
-        }
-}
-
-#ifdef TESTME
-/*
-  .2msec for 256x256 grid
-*/
-int main()
-{
-  CL_SetupCore::init();
-
-  srand(time(NULL));
-  Field<int> field(50, 30);
-
-  unsigned int start_time = CL_System::get_time();
-  unsigned int end_time;
-
-  generate_map(field);
-
-  MyPathfinder pathfinder(&field, NodeWalkable(), NodeCost(goal));
-
-  Pos start;
-  Pos end;
-
-  for(int count = 0; count < 1000; ++count)
-    {
-      start.x = rand()%field.get_width();
-      start.y = rand()%field.get_height();
-  
-      end.x = rand()%field.get_width();
-      end.y = rand()%field.get_height();
-      
-      pathfinder.init(start, end);
-      //pathfinder.display();
-
-      //int i = 0;
-      //std::cout << "Start: " << start.x << " " << start.y << std::endl;
-      //std::cout << "End:   " << end.x << " " << end.y << std::endl;
-
-      int rounds = 0;
-      while(!pathfinder.finished())
-        {
-          //for(int i = 0; i < 10 && !pathfinder.finished(); ++i)
-          pathfinder.process_one_open_node();
-          ++rounds;
-          //std::cout << "c" << std::endl;
-          //pathfinder.display();
-          //getchar();
-        }
-
-      std::cout << "c" << std::endl;
-      pathfinder.display();
-      std::cout << "Rounds: " << rounds << std::endl;
-      getchar();
-     
-      //pathfinder.display();
-      
-      /*
-        if (pathfinder.get_state() != ShortcutPathfinder::PATH_FOUND)
-        {
-        std::cout << "No Path could be found" << std::endl;
-        }
-        else
-        {
-        std::cout << "Found path" << std::endl;
-        std::vector<Pos>& path = pathfinder.get_path();
-        for (std::vector<Pos>::iterator i = path.begin(); i != path.end(); ++i)
-        {
-        std::cout << "[" << i->x << ", " << i->y << "] ";
-        }       
-        std::cout << std::endl;
-        }
-      */
-
-      //      getchar();
-      //std::cout << "round: " << ++i << std::endl;
-    }
-  end_time = CL_System::get_time();
-  std::cout << "Msec: " << end_time - start_time << std::endl;
-
-  CL_SetupCore::deinit();
-}
-#elif TESTME2
-int main()
-{
-  CL_SetupCore::init();
-
-  srand(time(NULL));
-  Field<int> field(256, 256);
-
-  generate_map(field);
-
-  MyPathfinder pathfinder(&field, NodeWalkable(), NodeCost());
-
-  Pos start;
-  Pos end;
-
-  unsigned int start_time = CL_System::get_time();
-  unsigned int end_time;
-
-
-  for(int count = 0; count < 1000; ++count)
-    {
-      start.x = rand()%field.get_width();
-      start.y = rand()%field.get_height();
-  
-      end.x = rand()%field.get_width();
-      end.y = rand()%field.get_height();
-
-      pathfinder.init(start, end);
-    
-      while(!pathfinder.finished())
-        {
-          pathfinder.process_one_open_node();
-        }
-      //std::cout << "State: " << rounds << " " << pathfinder.get_state() << std::endl;
-    }
-  end_time = CL_System::get_time();
-  std::cout << "Msec: " << end_time - start_time << std::endl;
-
-  CL_SetupCore::deinit();
-}
-#endif
-
-// Local Variables:
-// compile-command: "g++-3.2 -DTESTME -g -Wall -O2 shortcut_pathfinder.cxx  -o shortcut_pathfinder -lclanCore"
-// End:
-
-/* EOF */

Copied: trunk/src/soldier.cpp (from rev 341, trunk/src/soldier.cxx)


Property changes on: trunk/src/soldier.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/soldier.cxx
===================================================================
--- trunk/src/soldier.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/soldier.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,136 +0,0 @@
-//  $Id: soldier.cxx,v 1.18 2003/06/20 20:54:23 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-
-#include "buildings/building_map.hxx"
-#include "alist.hxx"
-#include "math.hxx"
-#include "view.hxx"
-#include "input/controller.hxx"
-#include "property_set.hxx"
-#include "ai_manager.hxx"
-#include "soldier.hxx"
-
-Soldier::Soldier(const AList& lst) 
-  : ai(0),
-    sur(resources->get_sprite("feuerkraft/soldier")),
-    sur_light(resources->get_sprite("feuerkraft/soldier-light"))
-{
-  pos.x = lst.get_float("x-pos");
-  pos.y = lst.get_float("y-pos");
-}
-
-Soldier::~Soldier ()
-{
-  delete ai;
-}
-
-void
-Soldier::update_controlls(const Controller& controller)
-{
-  acceleration = controller.get_axis_state(ACCELERATE_AXIS);
-  steering     = controller.get_axis_state(ORIENTATION_AXIS);
-}
-
-void 
-Soldier::draw (View& view)
-{
-  FloatVector2d velocity;
-
-  velocity.x = steering;
-  velocity.y = acceleration;
-
-  float new_orientation = velocity.get_orientation() + Math::pi_2;
-
-  if (velocity.x == 0 && velocity.y == 0)
-    {
-      new_orientation = orientation;
-      sur.set_frame(1);
-    }
-
-  sur.set_angle(Math::rad2deg(new_orientation));
-  view.get_sc().color().draw(sur, pos.x, pos.y);
-  view.get_sc().light().draw(sur_light, pos.x, pos.y);
-  orientation = new_orientation;
-}
-
-void 
-Soldier::update(float delta)
-{
-  sur.update(delta);
-
-  FloatVector2d velocity;
-
-  velocity.x = steering;
-  velocity.y = acceleration;
-
-  FloatVector2d new_pos = pos + (velocity * 100.0f * delta);
-
-  BuildingMap* building_map = GameWorld::current()->get_buildingmap();
-
-  if (building_map->get_building(new_pos) == 0)
-    {
-      pos = new_pos;
-    }
-  else
-    {
-      // Soldier is stuck in a building, allow him to walk so he
-      // can unstuck himself
-      if (building_map->get_building(pos) != 0)
-        pos = new_pos;
-      else if (building_map->get_building(FloatVector2d(pos.x, new_pos.y)) == 0)
-        pos = FloatVector2d(pos.x, new_pos.y);
-      else if (building_map->get_building(FloatVector2d(new_pos.x, pos.y)) == 0)
-        pos = FloatVector2d(new_pos.x, pos.y);
-    }
-}
-
-bool 
-Soldier::is_colliding(FloatVector2d obj_pos)
-{
-  FloatVector2d diff = obj_pos - pos;
-  if (diff.get_length() > 5)
-    return false;
-  else
-    return true;
-}
-
-void
-Soldier::attach_ai()
-{
-  if (ai == 0)
-    {
-      ai = new SoldierAI(this);
-      AIManager::instance()->add(ai);
-    }
-}
-
-void
-Soldier::deattach_ai()
-{
-  if (ai)
-    {
-      AIManager::instance()->remove(ai);
-      delete ai;
-      ai = 0;
-    }
-}
-
-/* EOF */

Copied: trunk/src/soldier_ai.cpp (from rev 341, trunk/src/soldier_ai.cxx)


Property changes on: trunk/src/soldier_ai.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/soldier_ai.cxx
===================================================================
--- trunk/src/soldier_ai.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/soldier_ai.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,94 +0,0 @@
-//  $Id: soldier_ai.cxx,v 1.2 2003/06/18 14:38:28 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "math.hxx"
-#include "soldier.hxx"
-#include "soldier_ai.hxx"
-
-SoldierAI::SoldierAI(Soldier* arg_soldier)
-  : soldier(arg_soldier),
-    state(GOTO_TARGET)
-{
-  target_pos = FloatVector2d(2000.0f, 2000.0f);
-}
-
-void
-SoldierAI::update(float delta)
-{
-  switch(state)
-    {
-    case RANDOM:
-      controller.set_axis_state(ACCELERATE_AXIS,  Math::frand()*2.0f - 1.0f);
-      controller.set_axis_state(ORIENTATION_AXIS, Math::frand()*2.0f - 1.0f);
-      break;
-          
-    case WAITING:
-      controller.set_axis_state(ACCELERATE_AXIS,  0);
-      controller.set_axis_state(ORIENTATION_AXIS, 0);
-      break;
-            
-    case GOTO_TARGET:
-      /*std::cout << "Soldier: "
-                << target_pos << " "
-                << soldier->get_pos() << " "
-                << (target_pos - soldier->get_pos()).get_length() << std::endl;*/
-
-      if (target_pos.y > soldier->get_pos().y)
-        controller.set_axis_state(ACCELERATE_AXIS,  1.0f);
-      else if (target_pos.y < soldier->get_pos().y)
-        controller.set_axis_state(ACCELERATE_AXIS,   -1.0f);
-
-      if (target_pos.x > soldier->get_pos().x)
-        controller.set_axis_state(ORIENTATION_AXIS,  1.0f);
-      else if (target_pos.x < soldier->get_pos().x)
-        controller.set_axis_state(ORIENTATION_AXIS,  -1.0f);
-
-      if ((target_pos - soldier->get_pos()).get_length() < 10.0f)
-        state = WAITING;
-
-      break;
-
-    default:
-      break;
-    }
-
-  soldier->update_controlls(controller);
-}
-
-void
-SoldierAI::goto_to(const FloatVector2d& arg_target_pos)
-{
-  state = GOTO_TARGET;
-  target_pos = arg_target_pos;
-}
-
-void
-SoldierAI::stop()
-{
-  state = WAITING;
-}
-
-GameObj*
-SoldierAI::get_object()
-{
-  return soldier;
-}
-
-/* EOF */

Copied: trunk/src/sound/sound.cpp (from rev 341, trunk/src/sound/sound.cxx)


Property changes on: trunk/src/sound/sound.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sound/sound.cxx
===================================================================
--- trunk/src/sound/sound.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/sound/sound.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,126 +0,0 @@
-//  $Id: sound.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Core/System/error.h>
-#include <iostream>
-#include <assert.h>
-#include "../path_manager.hxx"
-#include "../globals.hxx"
-#include "sound_dummy.hxx"
-#include "sound_real.hxx"
-
-PingusSound* PingusSound::sound;
-
-using namespace Sound;
-
-void
-PingusSound::init (PingusSound* s)
-{
-  if (s == 0)
-    {
-      if (sound_enabled || music_enabled)
-        {
-          if (verbose)
-            std::cout << "Init Sound" << std::endl;
-
-          try {
-            PingusSound::init (new PingusSoundReal ());
-          } catch (CL_Error& err) {
-            std::cout << "CL_Error: " << err.message << std::endl;
-            std::cout << "Sound will be disabled" << std::endl;
-            PingusSound::init (new PingusSoundDummy ());
-          }
-        }
-      else
-        {
-          if (verbose)
-            std::cout << "Sound disabled" << std::endl;
-          PingusSound::init (new PingusSoundDummy ());
-        }
-    }
-  else
-    {
-      sound = s;
-    }
-}
-
-void
-PingusSound::deinit ()
-{
-  delete sound;
-  sound = 0;
-}
-
-/** Load a sound file and play it immediately.
-
-    @param filename The complete filename */
-
-void
-PingusSound::play_sound(const std::string& name, float volume, float panning)
-{
-  assert (sound);
-  sound->real_play_sound(name, volume, panning);
-}
-
-void
-PingusSound::play_sound(Sound::Name name, float volume, float panning)
-{
-  // FIXME: We need to return a handle to the sound
-
-  // This should be configurable via a .xml file
-  switch (name)
-    {
-    case Sound::DIGGER:
-      play_sound (path_manager.complete ("sounds/digger.wav"), volume, panning);
-      break;
-    case Sound::PLOP:
-      play_sound (path_manager.complete ("sounds/plop.wav"), volume, panning);
-      break;
-    case Sound::GOODIDEA:
-      play_sound (path_manager.complete ("sounds/goodidea.wav"), volume, panning);
-      break;
-    case Sound::OHNO:
-      play_sound (path_manager.complete ("sounds/ohno.wav"), volume, panning);
-      break;
-    case Sound::TICK:
-      play_sound (path_manager.complete ("sounds/tick.wav"), volume, panning);
-      break;
-    }
-}
-
-/** Load a sound file and play it immediately.
-
-    @param name
-    @param volume   volume */
-void
-PingusSound::play_music(const std::string & name, float volume)
-{
-  assert (sound);
-  sound->real_play_music(path_manager.complete ("data/music/" + name), volume);
-}
-
-void
-PingusSound::stop_music()
-{
-  assert(sound);
-  sound->real_stop_music();
-}
-
-/* EOF */
-

Copied: trunk/src/sound/sound_dummy.cpp (from rev 341, trunk/src/sound/sound_dummy.cxx)


Property changes on: trunk/src/sound/sound_dummy.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sound/sound_dummy.cxx
===================================================================
--- trunk/src/sound/sound_dummy.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/sound/sound_dummy.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,47 +0,0 @@
-//  $Id: sound_dummy.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../globals.hxx"
-#include "sound_dummy.hxx"
-
-namespace Sound {
-
-void
-PingusSoundDummy::real_play_sound(const std::string & filename, float /*volume*/, float /*panning*/)
-{
-  std::cout << "PingusSoundDummy::real_play_sound: " << filename << std::endl;
-}
-
-
-void
-PingusSoundDummy::real_play_music(const std::string & filename, float /*volume*/)
-{
-  std::cout << "PingusSoundDummy::real_play_music: " << filename << std::endl;
-}
-
-void
-PingusSoundDummy::real_stop_music()
-{
-}
-
-} // namespace Sound
-
-/* EOF */
-

Copied: trunk/src/sound/sound_real.cpp (from rev 341, trunk/src/sound/sound_real.cxx)


Property changes on: trunk/src/sound/sound_real.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sound/sound_real.cxx
===================================================================
--- trunk/src/sound/sound_real.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/sound/sound_real.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,175 +0,0 @@
-//  $Id: sound_real.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-
-#include <ClanLib/sound.h>
-#include <ClanLib/mikmod.h>
-#include <ClanLib/Core/System/error.h>
-
-#include <iostream>
-#include "../globals.hxx"
-#include "sound_res_mgr.hxx"
-#include "sound_real.hxx"
-
-#ifdef HAVE_LIBCLANVORBIS
-#  include <ClanLib/vorbis.h>
-#endif
-
-#ifdef HAVE_LIBCLANMIKMOD
-#  include <ClanLib/mikmod.h>
-#  include <ClanLib/MikMod/setupmikmod.h>
-#endif
-
-namespace Sound {
-
-PingusSoundReal::PingusSoundReal ()
-  : music_sample (0), music_session(0)
-{
-  std::cout << "Initializing ClanLib-Sound" << std::endl;
-
-  CL_SetupSound::init();
-
-  std::cout << "Initializing ClanLib-MikMod" << std::endl;
-
-#ifdef HAVE_LIBCLANVORBIS
-  CL_SetupVorbis::init();
-#endif
-
-#ifdef HAVE_LIBCLANMIKMOD
-  CL_SetupMikMod::init();
-#endif
-
-  output = new CL_SoundOutput(44100);
-}
-
-PingusSoundReal::~PingusSoundReal()
-{
-  real_stop_music();
-
-  delete output;
-
-#ifdef HAVE_LIBCLANMIKMOD
-  CL_SetupMikMod::deinit();
-#endif
-
-#ifdef HAVE_LIBCLANVORBIS
-  CL_SetupVorbis::init();
-#endif
-
-  CL_SetupSound::deinit();
-}
-
-struct sound_is_finished
-{
-  bool operator()(CL_SoundBuffer_Session& sess) {
-    return !sess.is_playing();
-  }
-};
-
-void
-PingusSoundReal::real_play_sound(const std::string& name, float volume, float panning)
-{
-  if (!sound_enabled)
-    return;
-
-  SoundHandle buffer;
-  CL_SoundBuffer_Session sess;
-
-  try {
-    buffer = SoundResMgr::load(name);
-    sess   = buffer->prepare();
-  } catch (const CL_Error & e) {
-    std::cout << "Can't open sound '" << name << "' -- skipping\n"
-              << "  CL_Error: " << e.message << std::endl;
-    return;
-  }
-
-  sess.set_volume(volume);
-  sess.set_pan(panning);
-  sess.set_looping(false);
-  sess.play();
-}
-
-void
-PingusSoundReal::real_stop_music ()
-{
-  if (music_session)
-    {
-      music_session->stop();
-      delete music_session;
-      music_session = 0;
-
-      if (music_sample)
-        {
-          delete music_sample;
-          music_sample = NULL;
-        }
-    }
-}
-
-void
-PingusSoundReal::real_play_music (const std::string & arg_filename, float volume)
-{
-  std::string filename;
-
-  filename = arg_filename;
-
-  if (!music_enabled)
-    return;
-
-  std::cout << "PingusSoundReal: Playing music: " << filename << std::endl;
-
-  real_stop_music();
-
-  music_sample = 0;
-
-  if (filename.substr(filename.size()-4, 4) == ".ogg")
-    {
-#ifdef HAVE_LIBCLANVORBIS
-      music_sample = new CL_SoundBuffer (new CL_SoundProvider_Vorbis(filename.c_str()), true);
-#else
-      music_sample = 0;
-#endif
-    }
-  else if (filename.substr(filename.size()-4, 4) == ".wav")
-    {
-      music_sample = new CL_SoundBuffer (new CL_SoundProvider_Wave(filename.c_str(), NULL), true);
-    }
-  else
-    {  // MikMod should support the rest...
-#ifdef HAVE_LIBCLANMIKMOD
-      music_sample = new CL_SoundBuffer (new CL_SoundProvider_MikMod(filename.c_str()), true);
-#else
-      music_sample = 0;
-#endif
-    }
-
-  if (music_sample)
-    {
-      music_session = new CL_SoundBuffer_Session(music_sample->prepare());
-      music_session->set_volume(volume * 0.5f); // FIXME: music_volume
-      music_session->set_looping(false);
-      music_session->play();
-    }
-}
-
-} // namespace Sound
-
-/* EOF */
-

Copied: trunk/src/sound/sound_res_mgr.cpp (from rev 341, trunk/src/sound/sound_res_mgr.cxx)


Property changes on: trunk/src/sound/sound_res_mgr.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/sound/sound_res_mgr.cxx
===================================================================
--- trunk/src/sound/sound_res_mgr.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/sound/sound_res_mgr.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,51 +0,0 @@
-//  $Id: sound_res_mgr.cxx,v 1.3 2003/06/07 16:16:08 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/sound.h>
-#include <iostream>
-#include "../path_manager.hxx"
-#include "../globals.hxx"
-
-#include "sound_res_mgr.hxx"
-
-SoundResMgr::SoundMap SoundResMgr::sound_map;
-
-SoundHandle
-SoundResMgr::load(const std::string& name)
-{
-  SoundMap::iterator i = sound_map.find(name);
-
-  if (i == sound_map.end())
-    {
-      std::string filename = path_manager.complete("sounds/" + name + ".wav");
-      CL_SoundBuffer* buffer = new CL_SoundBuffer(new CL_SoundProvider_Wave(filename, NULL), true);
-      std::cout << "SoundResMgr: Loading sound from disk: "
-                                 << name << " -> " << filename << std::endl;
-
-      sound_map[name] = buffer;
-      return buffer;
-    }
-  else
-    {
-      std::cout << "SoundResMgr: Loading sound from cache: " << name << std::endl;
-      return i->second;
-    }
-}
-
-/* EOF */

Copied: trunk/src/start_screen.cpp (from rev 341, trunk/src/start_screen.cxx)


Property changes on: trunk/src/start_screen.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/start_screen.cxx
===================================================================
--- trunk/src/start_screen.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/start_screen.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,139 +0,0 @@
-//  $Id: start_screen.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Core/System/system.h>
-#include "start_screen.hxx"
-#include "resource_manager.hxx"
-
-StartScreen::StartScreen (CL_DisplayWindow* arg_display)
-  : display (arg_display),
-    logo (resources->get_sprite ("feuerkraft/logo")),
-    endlogo (resources->get_sprite ("feuerkraft/endlogo")),
-    display_time (0),
-    logo_mode (S_STARTLOGO)
-{
-}
-
-StartScreen::~StartScreen ()
-{
-}
-
-void 
-StartScreen::draw ()
-{
-  if (logo_mode == S_STARTLOGO)
-    {
-      if (display_time <= 2.0f)
-	logo.set_alpha ((display_time/2.0f));
-      else
-	logo.set_alpha (1.0f);
-  
-      //FIXME:Display2 CL_Display::clear_display ();    
-      
-      logo.draw (CL_Display::get_width ()/2,
-		 CL_Display::get_height ()/2,
-		 display->get_gc ());
-    }
-  else if (logo_mode == S_FADETOGAME)
-    {
-      if (display_time <= 1.5f)
-	{
-	  logo.set_alpha (1.0f - (display_time/1.5f));
-	  logo.draw (CL_Display::get_width ()/2,
-		     CL_Display::get_height ()/2,
-		     display->get_gc ());
-	}
-      else
-	logo_mode = S_GAME;
-    }
-  else if (logo_mode == S_GAME)
-    {
-      // do nothing
-    }
-  else if (logo_mode == S_ENDLOGO)
-    {
-      if (display_time <= 1.5f)
-	  endlogo.set_alpha ((display_time/1.5f));
-      else
-	  endlogo.set_alpha (1.0f);
-
-      endlogo.draw (CL_Display::get_width ()/2,
-		    CL_Display::get_height ()/2);
-    }
-  else if (logo_mode == S_FADETOBLACK)
-    {
-      endlogo.set_alpha (1.0f);
-      endlogo.draw (CL_Display::get_width ()/2,
-		    CL_Display::get_height ()/2);
-
-      CL_Display::fill_rect (CL_Rect(0, 0, CL_Display::get_width (), CL_Display::get_height ()),
-			     CL_Color(0, 0, 0, int(255.0f * display_time/2.0f)));
-      if (display_time >= 2.0f)
-	logo_mode = S_QUIT;
-    }
-}
-
-void 
-StartScreen::update (float delta)
-{
-  display_time += delta;
-
-  if (logo_mode == S_STARTLOGO && (display->get_ic()->get_keyboard().get_keycode (CL_KEY_ESCAPE)
-				   || display->get_ic()->get_keyboard().get_keycode (CL_KEY_SPACE)
-				   || display->get_ic()->get_keyboard().get_keycode (CL_KEY_RETURN)))
-    {
-      while (display->get_ic()->get_keyboard().get_keycode (CL_KEY_RETURN)
-	     || display->get_ic()->get_keyboard().get_keycode (CL_KEY_ESCAPE)
-	     || display->get_ic()->get_keyboard().get_keycode (CL_KEY_SPACE))
-	CL_System::keep_alive ();
-
-      logo_mode = S_FADETOGAME;
-      display_time = 0;
-    }
-  else if (logo_mode == S_GAME  && (display->get_ic()->get_keyboard().get_keycode (CL_KEY_ESCAPE)))
-    {
-      while (display->get_ic()->get_keyboard().get_keycode (CL_KEY_ESCAPE))
-	CL_System::keep_alive ();
-
-      display_time = 0;
-      logo_mode = S_ENDLOGO;
-    }
-  else if (logo_mode == S_ENDLOGO && (display->get_ic()->get_keyboard().get_keycode (CL_KEY_ESCAPE)
-				      || display->get_ic()->get_keyboard().get_keycode (CL_KEY_SPACE)
-				      || display->get_ic()->get_keyboard().get_keycode (CL_KEY_RETURN)))
-    {
-      while (display->get_ic()->get_keyboard().get_keycode (CL_KEY_RETURN)
-	     || display->get_ic()->get_keyboard().get_keycode (CL_KEY_ESCAPE)
-	     || display->get_ic()->get_keyboard().get_keycode (CL_KEY_SPACE))
-	CL_System::keep_alive ();
-
-
-      logo_mode = S_FADETOBLACK;
-      display_time = 0;
-    }
-  
-}
-
-bool 
-StartScreen::done ()
-{
-  return logo_mode == S_FADETOGAME;
-}
-
-/* EOF */

Copied: trunk/src/system.cpp (from rev 341, trunk/src/system.cxx)


Property changes on: trunk/src/system.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/system.cxx
===================================================================
--- trunk/src/system.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/system.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,351 +0,0 @@
-//  $Id: system.cxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 1999 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef WIN32
-#  include <dirent.h>
-#  include <fcntl.h>
-#  include <fnmatch.h>
-#  include <sys/stat.h>
-#  include <sys/types.h>
-#  include <unistd.h>
-#  include <errno.h>
-#else /* !WIN32 */
-#  pragma warning( disable : 4786)
-#  include <windows.h>
-#  include <fstream>
-#  include <direct.h>
-#endif
-
-#include <stdlib.h>
-#include <string.h>
-#include <cstdio>
-#include <iostream>
-#include <ClanLib/Core/System/clanstring.h>
-#include "gettext.h"
-
-//#include "PingusError.hxx" 
-#include "system.hxx"
-
-int System::verbose;
-std::string System::default_email;
-std::string System::default_username;
-std::string System::default_language;
-
-
-System::DirectoryEntry::DirectoryEntry(const std::string& n)
-{
-  name = n;
-}
-
-System::Directory
-System::opendir(const std::string& pathname, const std::string& pattern)
-{
-  std::list<System::DirectoryEntry> dir_list;
-
-#ifndef WIN32 
-  DIR* dp;
-  dirent* de; 
-  
-  dp = ::opendir(pathname.c_str());
-
-  if (dp == 0)
-    {
-      std::cout << _("System: Couldn't open: ") << pathname << std::endl;
-    }
-  else
-    {
-      while ((de = ::readdir(dp)) != 0) 
-	{
-	  if (fnmatch(pattern.c_str(), de->d_name, FNM_PATHNAME) == 0) 
-	    {
-	      if (de->d_type == 'd')
-		{
-		  dir_list.push_back(DirectoryEntry(de->d_name));
-		}
-	      else 
-		{
-		  dir_list.push_back(DirectoryEntry(de->d_name));
-		}
-	    }
-	}
-      
-      closedir(dp);
-    }
-#else /* !WIN32 */
-  WIN32_FIND_DATA coFindData;
-  std::string FindFileDir = pathname + "\\" + pattern;
-  std::string FileLocation;
-  HANDLE hFind = FindFirstFile(TEXT(FindFileDir.c_str()),&coFindData);
-
-  if (hFind == INVALID_HANDLE_VALUE)
-    {
-      std::cout << "System: Couldn't open: " << pathname << std::endl;
-    }
-  
-  do
-    {     
-      dir_list.push_back(DirectoryEntry(coFindData.cFileName));
-    }
-  while (FindNextFile(hFind,&coFindData));
-
-  FindClose(hFind);  
-#endif
-
-  return dir_list;
-}
-
-// Returns the basic filename without the path
-std::string
-System::basename(std::string filename)
-{
-  // Should be replaced with STL
-  
-  const char* str = filename.c_str();
-  int i;
-
-  for(i = filename.size() - 1; i >= 0; --i) 
-    {
-      if (*(str + i) == '/') {
-	break;
-      }
-    }
-  
-  return (str+i + 1);
-}
-
-bool
-System::exist(std::string filename)
-{
-#ifndef WIN32
-  return !access(filename.c_str(), F_OK);
-#else
-  //don't know a better solution
-  std::ifstream check(filename.c_str());
-  if(!check) return false;
-  return true;
-#endif
-}
-
-void
-System::create_dir(std::string directory)
-{
-#ifndef WIN32
-  if (!exist(directory))
-    {
-      if (mkdir(directory.c_str(), S_IRUSR | S_IWUSR | S_IXUSR | S_IRGRP | S_IXGRP) != 0)
-	{
-	  throw Error(directory + ": " + strerror(errno));
-	}
-      else
-	{
-	  std::cout << _("Successfully created: ") << directory << std::endl;
-	}
-    }  
-  else
-    {
-      if (verbose) std::cout << _("Found: ") << directory << std::endl;
-    }
-#else
-  CreateDirectory(directory.c_str(), 0);
-#endif
-}
-
-/** Change into the directory named dir, on error throw an PingusError */
-void
-System::change_dir (std::string dir)
-{
-#ifdef WIN32
-  _chdir (dir.c_str ());
-#else
-  chdir (dir.c_str ());
-#endif
-}
-
-void
-System::init_directories()
-{
-  std::string statdir  = get_statdir();
-  std::string vardir   = get_vardir();
-  
-  create_dir(statdir);
-  create_dir(statdir + "levels/");
-  create_dir(statdir + "levels/dist");
-  create_dir(statdir + "stat/");
-  create_dir(statdir + "cache/");
-  create_dir(statdir + "demos/");
-  create_dir(statdir + "screenshots/");
-  create_dir(statdir + "themes/");
-
-  // create_dir(vardir);
-}
- 
-std::string
-System::get_statdir()
-{
-#ifdef WIN32
-  return "stat\\";
-#else /* !WIN32 */
-  char* homedir = getenv("HOME");
-
-  if (homedir) 
-    {
-      return std::string(homedir) + "/.feuerkraft/";
-    }
-  else
-    {
-      throw Error(_("Enviroment variable $HOME not set, fix that and start again."));
-    }
-#endif
-}
-
-std::string 
-System::get_cachedir()
-{
-  return get_statdir() + "cache/";
-}
-
-std::string
-System::get_vardir()
-{
-#ifdef WIN32   
-  return "var\\";
-#else
-  return "/var/games/pingus/";
-#endif
-}
-
-std::string
-System::get_tmpdir()
-{
-#ifdef WIN32   
-  // FIXME: Warrning this hardcoded values are mostlikly wrong!
-  return "c:\\windows\\temp\\";
-#else
-  return "/tmp/";
-#endif
-}
-
-/** Returns the Username how the current user or an empty string */
-std::string
-System::get_username()
-{
-  if (default_username.empty())
-    {
-      char* username = getenv("USERNAME");
-
-      if (username)
-	return std::string(username);
-      else
-	return "";
-    }
-  else
-    {
-      return default_username;
-    }
-}
-
-/** Returns the EMail of the user or an empty string */
-std::string 
-System::get_email()
-{
-  if (default_email.empty())
-    {
-      char* email = getenv("EMAIL");
-
-      if (email)
-	// FIXME: $EMAIL contains the complete from header, not only
-	// the email address
-	return std::string(email);
-      else
-	return "";
-    }
-  else
-    {
-      return default_email;
-    }
-}
-
-std::string
-System::get_language()
-{
-  char* lang = getenv("LANG");
-
-  if (lang && strcmp(lang, "C") != 0)
-    {
-      if (strcmp(lang, "de_DE") == 0)
-	return "de";
-      else
-	return lang; 
-    }
-  else
-    return default_language;
-}
-
-std::string
-System::translate(std::map<std::string, std::string> strs)
-{
-  std::string str = strs[System::get_language()];
-  
-  if (str.empty())
-    {
-      return strs[default_language];
-    }
-  else 
-    {
-      return str;
-    }
-}
-
-/** Read file and create a checksum and return it */
-std::string
-System::checksum (std::string filename)
-{
-  FILE* in;
-  int bytes_read;
-  char buffer[4096];
-  int checksum = 0;
-
-  in = fopen(filename.c_str(), "r");
-
-  if (!in)
-    {
-      std::cout << _("System::checksum: Couldn't open file: ") << filename << std::endl;
-      return "";
-    }
-
-  do 
-    {
-      bytes_read = fread (buffer, sizeof (char), 4096, in);
-      
-      if (bytes_read == -1)
-	{
-	  throw Error (_("System:checksum: file read error"));
-	}
-
-      for (int i=0; i < bytes_read; i++)
-	checksum = checksum * 17 + buffer[i];
-    } 
-  while (bytes_read != 0);
-
-  fclose (in);
-
-  return CL_String::to(checksum);
-}
-
-/* EOF */

Copied: trunk/src/tree.cpp (from rev 341, trunk/src/tree.cxx)


Property changes on: trunk/src/tree.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/tree.cxx
===================================================================
--- trunk/src/tree.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/tree.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,74 +0,0 @@
-//  $Id: tree.cxx,v 1.12 2003/06/20 20:54:23 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "assert.hxx"
-#include "view.hxx"
-#include "property_set.hxx"
-#include "resource_manager.hxx"
-#include "alist.hxx"
-#include "tree.hxx"
-
-Tree::Tree (const AList& lst)
-{
-  // Get the init values
-  AList def;
-
-  def.set_float("x-pos", 0.0f);
-  def.set_float("y-pos", 0.0f);
-  def.set_float("z-pos", 10.0f);
-  def.set_string("sprite", "feuerkraft/tree");
-  
-  def.merge(lst);
-
-  // Load stuff
-  sprite_name = def.get_string("sprite");
-  sur = resources->get_sprite(sprite_name);
-  AssertMsg(!sur.is_null(), "Tree: surface not loaded correctly: '" << sprite_name << "'");
-    
-  pos.x = def.get_float("x-pos");
-  pos.y = def.get_float("y-pos");
-  z_pos = def.get_float("z-pos");
-
-  // Register Variables
-  properties->register_string("sprite", &sprite_name);
-  properties->register_float ("x-pos", &pos.x);
-  properties->register_float ("y-pos", &pos.y);
-  properties->register_float ("z-pos", &z_pos);
-}
-
-Tree::~Tree ()
-{
-}
-
-void
-Tree::properties_updated()
-{
-  std::cout << "Loading Tree Sprites" << std::endl;
-  sur = resources->get_sprite(sprite_name);
-  sur.set_alignment(origin_center);
-}
-  
-void 
-Tree::draw (View& view)
-{
-  view.get_sc().color().draw(sur, pos.x, pos.y);
-}
-
-/* EOF */

Copied: trunk/src/trigger_manager.cpp (from rev 341, trunk/src/trigger_manager.cxx)


Property changes on: trunk/src/trigger_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/trigger_manager.cxx
===================================================================
--- trunk/src/trigger_manager.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/trigger_manager.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,52 +0,0 @@
-//  $Id: trigger_manager.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <algorithm>
-#include "trigger_manager.hxx"
-
-TriggerManager* TriggerManager::current_ = 0;
-
-TriggerManager::TriggerManager()
-{
-  current_ = this;
-}
-
-struct TriggerIsRemovable
-{
-  bool operator()(TriggerManager::Trigger* trigger) {
-    return trigger->removable;
-  }
-};
-
-void
-TriggerManager::update(float delta)
-{
-  // Keep iterators intact
-  Triggers tmp_triggers = triggers;
-  for (Triggers::iterator i = tmp_triggers.begin(); i != tmp_triggers.end(); ++i)
-    {
-      (*i)->update(delta);
-    }
-
-  triggers.erase(std::remove_if(triggers.begin(), triggers.end (), TriggerIsRemovable()),
-                 triggers.end ());
-}
-
-/* EOF */

Copied: trunk/src/unit.cpp (from rev 341, trunk/src/unit.cxx)


Property changes on: trunk/src/unit.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/unit.cxx
===================================================================
--- trunk/src/unit.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/unit.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,60 +0,0 @@
-//  $Id: unit.cxx,v 1.5 2003/08/20 00:02:46 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "property_set.hxx"
-#include "player.hxx"
-#include "radar.hxx"
-#include "unit.hxx"
-
-extern Player* player;
-
-Unit::Unit()
-{
-  pos = FloatVector2d(0,0);
-  orientation = 0;
-
-  properties->register_float("x-pos", &pos.x);
-  properties->register_float("y-pos", &pos.y);
-  properties->register_float("orientation", &orientation);
-}
-
-Unit::~Unit()
-{
-}
-
-void
-Unit::draw_radar(Radar& radar)
-{
-  if (player->get_current_unit() != this)
-    radar.draw_blip(pos, 2, 1.0f, 0, 0);
-}
-
-void
-Unit::set_position(const FloatVector2d& new_pos)
-{
-  pos = new_pos;
-}
-
-void
-Unit::set_orientation(float new_orientation)
-{
-  orientation = new_orientation;
-}
-
-/* EOF */

Copied: trunk/src/vector2d.cpp (from rev 341, trunk/src/vector2d.cxx)


Property changes on: trunk/src/vector2d.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vector2d.cxx
===================================================================
--- trunk/src/vector2d.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/vector2d.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,132 +0,0 @@
-//  $Id: vector2d.cxx,v 1.6 2003/06/09 20:27:31 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <math.h>
-#include <iostream>
-#include "vector2d.hxx"
-
-FloatVector2d::FloatVector2d()
-  : x(0.0f), y(0.0f)
-{
-}
-
-FloatVector2d::FloatVector2d(float arg_x, float arg_y)
-  : x(arg_x), y(arg_y)
-{
-}
-
-FloatVector2d
-FloatVector2d::make_polar(float length, float orientation)
-{
-  return FloatVector2d(cos(orientation) * length,
-                       sin(orientation) * length);
-}
-
-void
-FloatVector2d::set_orientation(float angle)
-{
-  x = sin(angle) * get_length();
-  y = cos(angle) * get_length();
-}
-
-FloatVector2d&
-FloatVector2d::rotate(float angle)
-{
-  float length = get_length();
-  float orientation = get_orientation();
-
-  x = cos(orientation + angle) * length;
-  y = sin(orientation + angle) * length;
-  return *this;
-}
-
-float
-FloatVector2d::get_length() const
-{
-  return sqrt(x*x + y*y);
-}
-
-float
-FloatVector2d::get_manhatten_length() const
-{
-  return fabsf(x) + fabsf(y);
-}
-
-float
-FloatVector2d::get_orientation() const
-{
-  return atan2(y, x);
-}
-
-FloatVector2d
-FloatVector2d::operator- () const
-{
-  return FloatVector2d(-x, -y);
-}
-
-FloatVector2d
-FloatVector2d::operator+ (const FloatVector2d& add) const
-{
-  return FloatVector2d(x + add.x, 
-                       y + add.y);
-}
-
-FloatVector2d
-FloatVector2d::operator- (const FloatVector2d& sub) const
-{
-  return FloatVector2d(x - sub.x,
-                       y - sub.y);
-}
-
-FloatVector2d
-FloatVector2d::operator* (float  mul) const
-{
-  return FloatVector2d(x * mul, y * mul);
-}
-
-FloatVector2d&
-FloatVector2d::operator+= (const FloatVector2d& add)
-{
-  x += add.x;
-  y += add.y;
-  return *this;
-}
-
-FloatVector2d&
-FloatVector2d::operator-= (const FloatVector2d& sub)
-{
-  x -= sub.x;
-  y -= sub.y;
-  return *this;
-}
-
-FloatVector2d&
-FloatVector2d::operator*= (float   mul)
-{
-  x *= mul;
-  y *= mul;
-  return *this;
-}
-
-std::ostream& operator<< (std::ostream& os, const FloatVector2d& v)
-{
-  return os << "(" << v.x << ", " << v.y << ")";
-}
-
-/* EOF */

Copied: trunk/src/vehicle_ai.cpp (from rev 341, trunk/src/vehicle_ai.cxx)


Property changes on: trunk/src/vehicle_ai.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicle_ai.cxx
===================================================================
--- trunk/src/vehicle_ai.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/vehicle_ai.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,106 +0,0 @@
-//  $Id: vehicle_ai.cxx,v 1.2 2003/06/22 17:22:47 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "math.hxx"
-#include "vehicles/vehicle.hxx"
-#include "vehicle_ai.hxx"
-
-VehicleAI::VehicleAI(Vehicle* arg_vehicle)
-  : vehicle(arg_vehicle)
-{
-}
-
-VehicleRoboAI::VehicleRoboAI(Vehicle* vehicle)
-  : VehicleAI(vehicle)
-{
-  ai_count = 0;
-}
-
-void
-VehicleRoboAI::update(float delta)
-{
-  ai_count += delta;
-  
-  if (ai_count > 2)
-    {
-      ai_count = 0;
-      
-      switch (rand() % 5)
-        {
-        case 0:
-        case 1:
-        case 2:
-          controller.set_axis_state(ACCELERATE_AXIS, 1.0f);
-          break;
-        case 3:
-          controller.set_axis_state(ACCELERATE_AXIS, -1.0f);
-          break;
-        case 4:
-          controller.set_axis_state(ACCELERATE_AXIS, 0.0f);
-          break;
-        }
-
-      controller.set_axis_state(ORIENTATION_AXIS, Math::frand() * 2.0f - 1.0f);
-    }
-  
-  if (rand() % 30 == 0)
-    {
-      controller.set_button_state(PRIMARY_FIRE_BUTTON, true);
-    }
-  else
-    {
-      controller.set_button_state(PRIMARY_FIRE_BUTTON, false);
-    }
-  
-  vehicle->update_controlls(controller);
-}
-
-VehiclePathAI::VehiclePathAI(Vehicle* vehicle)
-  : VehicleAI(vehicle),
-    driving(false),
-    length(0.0f),
-    line_segments(vehicle->get_pos().x, 
-                  vehicle->get_pos().y,
-                  vehicle->get_orientation())
-{
-}
-
-void
-VehiclePathAI::update(float delta)
-{
-  if (driving)
-    {
-      length += 100.0f * delta;
-
-      vehicle->set_position(line_segments.get_pos(length));
-      vehicle->set_orientation(line_segments.get_orientation(length));
-
-      if (line_segments.get_length() < length)
-        driving = false;
-    }
-}
-
-void
-VehiclePathAI::drive_to(const FloatVector2d& pos)
-{
-  driving = true;
-  line_segments.add_controll_point(pos.x, pos.y, 50.0f);  
-}
-
-/* EOF */

Copied: trunk/src/vehicle_status.cpp (from rev 341, trunk/src/vehicle_status.cxx)


Property changes on: trunk/src/vehicle_status.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicle_status.cxx
===================================================================
--- trunk/src/vehicle_status.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/vehicle_status.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,72 +0,0 @@
-//  $Id: vehicle_status.cxx,v 1.9 2003/06/08 15:31:27 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/display.h>
-#include "resource_manager.hxx"
-#include "player.hxx"
-#include "vehicles/vehicle.hxx"
-#include "vehicle_status.hxx"
-
-extern Player* player;
-
-VehicleStatus::VehicleStatus()
-  : ammo (resources->get_sprite("feuerkraft/ammo")),
-    fuel (resources->get_sprite("feuerkraft/fuel"))
-{
-  fuel.set_alignment(origin_top_left);
-  ammo.set_alignment(origin_top_left);
-}
-
-VehicleStatus::~VehicleStatus ()
-{
-}
-
-void 
-VehicleStatus::update (float delta)
-{
-}
-
-void 
-VehicleStatus::draw (CL_GraphicContext& gc)
-{
-  Vehicle* vehicle = dynamic_cast<Vehicle*>(player->get_current_unit());
-  if (vehicle)
-    {
-      fuel.draw ( 8, CL_Display::get_height() - 8 - 30);
-      draw_rect (38, CL_Display::get_height() - 8 - 24, vehicle->get_fuel ());
-
-      ammo.draw ( 8, CL_Display::get_height() - 40 - 30);
-      draw_rect (38, CL_Display::get_height() - 40 - 24, vehicle->get_ammo ());
-    }
-}
-
-void
-VehicleStatus::draw_rect (int x_pos, int y_pos, float fill)
-{
-  CL_Display::fill_rect (CL_Rect(x_pos, y_pos, x_pos + 100, y_pos + 14),
-			 CL_Color(0, 0, 0,200));
-  if (fill > 0.0)
-    CL_Display::fill_rect (CL_Rect(x_pos + 2, y_pos + 2, int(x_pos + (98 * fill)), y_pos + 12),
-			   CL_Color(int((1.0 - fill)*255), 
-                                    int(255*fill),
-                                    0,
-                                    200));
-}
-
-/* EOF */

Copied: trunk/src/vehicle_view.cpp (from rev 341, trunk/src/vehicle_view.cxx)


Property changes on: trunk/src/vehicle_view.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicle_view.cxx
===================================================================
--- trunk/src/vehicle_view.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/vehicle_view.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,74 +0,0 @@
-//  $Id: vehicle_view.cxx,v 1.11 2003/06/06 14:25:47 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <math.h>
-#include "vehicle_view.hxx"
-
-VehicleViewUpdater::VehicleViewUpdater (Unit* arg_unit)
-  : unit(arg_unit)
-{
-  pos = unit->get_pos();
-  speed = 0.1f;
-  zoom_follower = 1.0f;
-}
-
-VehicleViewUpdater::~VehicleViewUpdater ()
-{
-}
-
-void 
-VehicleViewUpdater::update (float delta, ViewState& state)
-{
-  delta *= 50.0f;
-  FloatVector2d target = unit->get_pos ();
-
-#if 0  // FIXME:
-  float zoom = (-fabs(unit->get_velocity ()/10.0f) + 1.0) * 1.5f;
-
-  if (zoom_follower > zoom) zoom_follower -= 0.01 * delta;
-  if (zoom_follower < zoom) zoom_follower += 0.01 * delta;
-
-  state.zoom = zoom_follower;
-#endif 
-
-  if ((pos - target).get_length() > 1.0f)
-    {
-      FloatVector2d direction = (target - pos);
-      pos += direction * speed;
-   }
-  
-  state.x_offset = int(pos.x);
-  state.y_offset = int(pos.y);
-
-  float my_rotation = -(unit->get_orientation()/3.1415927*180.0) + 90;
-
-  if (state.rotation > my_rotation) 
-    state.rotation -= 2 * delta;
-  
-  if (state.rotation < my_rotation) 
-    state.rotation += 2 * delta;
-}
-
-void
-VehicleViewUpdater::set_unit(Unit* arg_unit)
-{
-  unit = arg_unit;
-}
-
-/* EOF */

Copied: trunk/src/vehicles/helicopter.cpp (from rev 341, trunk/src/vehicles/helicopter.cxx)


Property changes on: trunk/src/vehicles/helicopter.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/helicopter.cxx
===================================================================
--- trunk/src/vehicles/helicopter.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/vehicles/helicopter.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,256 +0,0 @@
-//  $Id: helicopter.cxx,v 1.11 2003/06/22 17:22:47 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../alist.hxx"
-#include "../projectile.hxx"
-#include "../explosion.hxx"
-#include "../vehicle_ai.hxx"
-#include "../ai_manager.hxx"
-#include "../rocket.hxx"
-#include "../resource_manager.hxx"
-#include "../math.hxx"
-#include "helicopter.hxx"
-
-Helicopter::Helicopter(const AList& lst)
-  : strafe (0.0),
-    reloading (0),
-    secondary_reload(0),
-    energie (100),
-    destroyed (false),
-    ai(0)
-{
-  if (lst.get_int("type") == 0)
-    {
-      heli          = resources->get_sprite("feuerkraft/huey");
-      heli_shadow   = resources->get_sprite("feuerkraft/huey_shadow");
-      helidestroyed = resources->get_sprite("feuerkraft/helidestroyed");
-      
-      RotorDescription rotor;
-      rotor.direction = RotorDescription::LEFT;
-      rotor.slow_sprite ="feuerkraft/huey_rotor";
-      rotor.fast_sprite = "feuerkraft/huey_rotor2";
-      rotors.push_back(Rotor(rotor));
-    }
-  else if (lst.get_int("type") == 1)
-    {
-      heli          = resources->get_sprite("feuerkraft/helicopter");
-      heli_shadow   = resources->get_sprite("feuerkraft/helicopter_shadow");
-      helidestroyed = resources->get_sprite("feuerkraft/helidestroyed");
-      
-      RotorDescription rotor;
-      rotor.direction = RotorDescription::LEFT;
-      rotor.slow_sprite ="feuerkraft/huey_rotor";
-      rotor.fast_sprite = "feuerkraft/huey_rotor2";
-      rotors.push_back(Rotor(rotor));      
-    }
-  else // if (lst.get_int("type") == 2)
-    {
-      heli          = resources->get_sprite("feuerkraft/chinook");
-      heli_shadow   = resources->get_sprite("feuerkraft/chinook_shadow");
-      helidestroyed = resources->get_sprite("feuerkraft/helidestroyed");
-        
-      RotorDescription rotor1;
-      rotor1.offset = FloatVector2d(40.0f, 0);
-      rotor1.slow_sprite = "feuerkraft/chinook_rotor";
-      rotor1.fast_sprite = "feuerkraft/chinook_rotor2";
-      rotor1.direction = RotorDescription::LEFT;
-      rotors.push_back(Rotor(rotor1));
-  
-      RotorDescription rotor2;
-      rotor2.offset = FloatVector2d(-40.0f, 0);
-      rotor2.slow_sprite = "feuerkraft/chinook_rotor";
-      rotor2.fast_sprite = "feuerkraft/chinook_rotor2";
-      rotor2.direction = RotorDescription::RIGHT;
-      rotors.push_back(Rotor(rotor2));
-    }
-
-  pos.x = lst.get_float("x-pos");
-  pos.y = lst.get_float("y-pos");
-
-  velocity = 0;
-  orientation = 0;
-
-  height = 0;
-  state = LANDED;
-}
-
-Helicopter::~Helicopter ()
-{
-}
-
-void 
-Helicopter::draw (View& view)
-{
-  if (!destroyed)
-    {
-      heli_shadow.set_angle(Math::rad2deg(orientation));
-      view.get_sc().color().draw(heli_shadow, pos.x + height/2.0f, pos.y + height);
-
-      heli.set_angle(Math::rad2deg(orientation));
-      view.get_sc().color().draw(heli, pos.x, pos.y);
-
-      for (Rotors::iterator i = rotors.begin(); i != rotors.end(); ++i)
-        {
-          (*i).draw(view, pos, orientation);
-        }
-
-      energie.draw(view, int(pos.x), int(pos.y - 40));
-    }
-  else
-    {
-      helidestroyed.set_angle(Math::rad2deg(orientation));
-      view.get_sc().color().draw(helidestroyed, pos.x, pos.y);
-    }
-}
-
-void 
-Helicopter::update (float delta)
-{
-  for (Rotors::iterator i = rotors.begin(); i != rotors.end(); ++i)
-    (*i).update(delta);
-
-  if (state == LANDING)
-    {
-      height -= 20.0f * delta;
-      if (height < 0.0f)
-        {
-          height = 0;
-          state = LANDED;
-
-          for (Rotors::iterator i = rotors.begin(); i != rotors.end(); ++i)
-            (*i).stop();
-        }
-    }
-  else if (state == STARTING)
-    {
-      bool running = true;
-      for (Rotors::iterator i = rotors.begin(); i != rotors.end(); ++i)
-        if (!(*i).is_running())
-          running = false;          
-
-      if (running)
-        {
-          height += 20.0f * delta;
-          if (height > 50.0f)
-            {
-              height = 50;
-              state = FLYING;
-            }
-        }
-    }
-    
-  // Apply controlls
-  if (state != LANDED && height > 0)
-    {
-      orientation += 3.0f  * steering * delta;
-      velocity    -= 15.0f * acceleration * delta;
-      strafe      -= 5.0f  * strafe_steering * delta;
-    }
-
-  strafe_steering = steering = acceleration = 0;
-
-  if (secondary_firing && secondary_reload > .1)
-    {
-      secondary_reload = 0;
-      GameWorld::current()->add (new Projectile (this, get_pos(),
-                                                 FloatVector2d::make_polar(20 + Math::frand()*2.0f,
-                                                                           orientation + 3.1415927f
-                                                                           + Math::frand()*0.06f - 0.03f)));
-    }
-  secondary_reload += delta;
- 
-  delta *= 50;
-
-  if (energie <= 0 && !destroyed)
-    {
-      GameWorld::current()->add(new Explosion (pos, Explosion::MEDIUM));
-      destroyed = true;
-    }
-
-  FloatVector2d vel(velocity, 0.0);
- 
-  pos += vel.rotate(orientation);
-
-  // Let the heli strafe
-  pos += FloatVector2d(0.0, strafe).rotate(orientation) * delta;
-
-  velocity /= 1.03f;
-  strafe   /= 1.03f;
-
-  if (firing && !reloading)
-    {
-      GameWorld::current()->add(new Rocket(get_pos(), orientation + 3.1415927f));
-      reloading = 10;
-    }
-
-  if (reloading)
-    --reloading;
-}
-
-void
-Helicopter::land_or_start()
-{
-  if (state == FLYING || state == STARTING)
-    {
-      state = LANDING;
-    }
-  else if (state == LANDED || state == LANDING)
-    {
-      state = STARTING;
-      for (Rotors::iterator i = rotors.begin(); i != rotors.end(); ++i)
-        (*i).start();
-    }
-}
-
-bool 
-Helicopter::is_colliding (FloatVector2d obj_pos)
-{
-  float range = 20.0; 
-
-  return  (obj_pos.x > pos.x - range && obj_pos.x < pos.x + range
-	   && obj_pos.y > pos.y - range && obj_pos.y < pos.y + range);
-}
-
-void
-Helicopter::collide (Projectile*) 
-{
-  energie -= 15;
-}
-
-void
-Helicopter::attach_ai()
-{
-  ai = new VehicleRoboAI(this);
-  AIManager::instance()->add(ai);
-}
-
-void
-Helicopter::dettach_ai()
-{
-  if (ai)
-    {
-      AIManager::instance()->remove(ai);
-      delete ai;
-      ai = 0;
-    }
-
-}
-
-/* EOF */

Copied: trunk/src/vehicles/jeep.cpp (from rev 341, trunk/src/vehicles/jeep.cxx)


Property changes on: trunk/src/vehicles/jeep.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/jeep.cxx
===================================================================
--- trunk/src/vehicles/jeep.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/vehicles/jeep.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,149 +0,0 @@
-//  $Id: jeep.cxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/gl.h>
-#include <iostream>
-#include "../buildings/building_map.hxx"
-#include "../resource_manager.hxx"
-#include "jeep.hxx"
-
-const float circle = 6.2831854f;
-
-Jeep::Jeep(FloatVector2d arg_pos) 
-  : energie (50),
-    velocity (0.0),
-    angle (0.0)
-{
-  pos.x = arg_pos.x;
-  pos.y = arg_pos.y;
-  jeep = resources->get_sprite ("feuerkraft/jeep");
-}
-
-void 
-Jeep::update (float delta)
-{
-  delta *= 50;
-
-  FloatVector2d tmp_pos = pos + FloatVector2d(-velocity, 0.0).rotate(angle) * delta;
-
-  if (!(GameWorld::current()->get_buildingmap ()->get_building (FloatVector2d(pos.x, tmp_pos.y))))
-    {
-      pos.y = tmp_pos.y;
-    }
-  else
-    {
-      //velocity /= delta;
-    }
-
-  if (!(GameWorld::current()->get_buildingmap ()->get_building (FloatVector2d(tmp_pos.x, pos.y))))
-    {
-      pos.x = tmp_pos.x;
-    }
-  else
-    {
-      //velocity /= delta;
-    }
-
-
-  velocity /= 1.03f;
-}
-
-void 
-Jeep::draw (View& view)
-{
-  const float circle = 6.2831854f;
-  
-  jeep.set_angle(angle/(circle/2.0)*180);
-  view.get_sc().color().draw(jeep, pos.x, pos.y);
-  energie.draw (view, int(pos.x), int(pos.y - 30));
-}
-
-void 
-Jeep::turn_left (float delta)
-{
-  angle += 0.06f * (velocity/5) * delta;
-}
-
-void 
-Jeep::turn_right (float delta)
-{
-  angle -= 0.06f * (velocity/5) * delta;
-}
-
-void 
-Jeep::turn_left2 (float delta) 
-{
-}
-
-void
-Jeep::turn_right2 (float delta) 
-{
-}
-
-void
-Jeep::increase_velocity (float delta)
-{
-  velocity += 0.25f * delta;
-}
-
-void
-Jeep::decrease_velocity (float delta)
-{
-  velocity -= 0.25f * delta;
-}
-
-void
-Jeep::start_fire () 
-{
-}
-
-void
-Jeep::stop_fire () 
-{
-}
-
-void
-Jeep::drop_mine () 
-{
-}
-
-void 
-Jeep::collide (Projectile*)
-{
-  energie -= 5;
-}
-
-void 
-Jeep::collide (FloatVector2d force) 
-{
-  energie -= int(force.get_length());
-  
-  std::cout << "Jeep: Got force: " << force.get_length() << std::endl;
-}
-
-bool 
-Jeep::is_colliding (FloatVector2d obj_pos)
-{
-  float range = 6.0; 
-
-  return  (obj_pos.x > pos.x - range && obj_pos.x < pos.x + range
-	   && obj_pos.y > pos.y - range && obj_pos.y < pos.y + range);
-}
-
-/* EOF */

Copied: trunk/src/vehicles/rotor.cpp (from rev 341, trunk/src/vehicles/rotor.cxx)


Property changes on: trunk/src/vehicles/rotor.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/rotor.cxx
===================================================================
--- trunk/src/vehicles/rotor.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/vehicles/rotor.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,113 +0,0 @@
-//  $Id$
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2003 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "../math.hxx"
-#include "rotor.hxx"
-
-Rotor::Rotor(const RotorDescription& desc)
-{
-  // Rotor::Description
-  direction = desc.direction;
-  slow = CL_Sprite(resources->get_sprite(desc.slow_sprite));
-  fast = CL_Sprite(resources->get_sprite(desc.fast_sprite));
-  offset = desc.offset;
-
-  running      = false;
-  orientation  = 0;
-  velocity     = 0;
-  max_velocity = 10.0f;
-  acceleration = 1.5f;
-}
-
-void
-Rotor::draw(View& view, const FloatVector2d& pos, float parent_orientation)
-{
-  FloatVector2d off = offset;
-  FloatVector2d p = pos + off.rotate(parent_orientation);
-
-  if (velocity > 8.0f)
-    {
-      if (direction == RotorDescription::LEFT)
-        {
-          fast.set_angle(Math::rad2deg(orientation));
-          view.get_sc().color().draw(fast, p.x, p.y);
-        }
-      else
-        {
-          fast.set_angle(Math::rad2deg(-orientation));
-          view.get_sc().color().draw(fast, p.x, p.y);
-        }
-    }
-  else
-    {
-      if (direction == RotorDescription::LEFT)
-        {
-          slow.set_angle(Math::rad2deg(orientation));
-          view.get_sc().color().draw(slow, p.x, p.y);
-        }
-      else
-        {
-          slow.set_angle(Math::rad2deg(-orientation));
-          view.get_sc().color().draw(slow, p.x, p.y);
-        }
-    }
-}
-
-void
-Rotor::update(float delta)
-{
-  fast.update(delta);
-  fast.set_angle(orientation);
-
-  slow.update(delta);
-  slow.set_angle(orientation);
-
-  orientation += velocity * delta;
-
-  if (running)
-    {
-      velocity += acceleration * delta;
-
-      if (velocity > max_velocity)
-        velocity = max_velocity;
-    }
-  else
-    {
-      velocity -= acceleration * delta;
-
-      if (velocity < 0)
-        velocity = 0;
-    }
-}
-
-void
-Rotor::start()
-{
-  running = true;
-}
-
-void
-Rotor::stop()
-{
-  running = false;
-}
-
-/* EOF */

Copied: trunk/src/vehicles/tank.cpp (from rev 341, trunk/src/vehicles/tank.cxx)


Property changes on: trunk/src/vehicles/tank.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/tank.cxx
===================================================================
--- trunk/src/vehicles/tank.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/vehicles/tank.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,431 +0,0 @@
-//  $Id: tank.cxx,v 1.26 2003/06/22 17:22:47 grumbel Exp $
-// 
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/display.h>
-#include <iostream>
-#include <string>
-
-#include "../assert.hxx"
-#include "../mine.hxx"
-#include "../alist.hxx"
-#include "../property_set.hxx"
-#include "../groundmap/ground_map.hxx"
-#include "../buildings/building_map.hxx"
-#include "../particles/smoke_particle.hxx"
-#include "../particles/sand_particle.hxx"
-#include "../particles/grass_particle.hxx"
-#include "../particles/smoke_emitter.hxx"
-#include "../resource_manager.hxx"
-#include "../property_set.hxx"
-#include "../alist.hxx"
-#include "../vehicle_ai.hxx"
-#include "../ai_manager.hxx"
-#include "../collision_manager.hxx"
-
-#include "turret.hxx"
-#include "tank.hxx"
-
-const float circle = 6.2831854f;
-
-Tank::Tank(const AList& lst)
-  : energie(100)
-{
-  // FIME: This needs cleanup
-  AList def;
-
-  def.set_float ("x-pos", 0);
-  def.set_float ("y-pos", 0);
-  def.set_int   ("reloading_speed", 5);
-  
-  // Surfaces
-  def.set_string("tank",   "feuerkraft/tank");
-  def.set_string("turret", "feuerkraft/turret");
-  def.set_string("fire",   "feuerkraft/fire");    
-
-  def.merge(lst);
-
-  // Load
-  smod   = resources->get_sprite(def.get_string("tank"));
-  sur    = resources->get_sprite(def.get_string("tank"));
-  sur_light     = resources->get_sprite("feuerkraft/tank_light");
-  sur_highlight = resources->get_sprite("feuerkraft/tank_highlight");
-
-  turret = new Turret(this, 
-                      def.get_int("reloading_speed"),
-                      def.get_string("turret"), 
-                      def.get_string("fire"));
-
-  pos.x = def.get_float("x-pos");
-  pos.y = def.get_float("y-pos");
-  
-  // Init local variables
-  speed = 0.0f;
-  increment = 2.0f;
-  burning = false;
-  
-  sur_destroyed = resources->get_sprite ("feuerkraft/tank2destroyed");
-  shadow        = resources->get_sprite ("feuerkraft/tank2_shadow");
-  smod_step = 0;
-  mine_reload_time = 0;
-  destroyed = false;
-  velocity = 0.0f;
-
-  orientation = Math::south;
-  tmp_angle = orientation;
-
-  sur.set_alignment(origin_center);
-  sur_destroyed.set_alignment(origin_center);
-
-  particle_release = 0.0f;
-  
-  properties->register_float("ammo",  &ammo);
-  properties->register_float("fuel",  &fuel);
-  
-  smoke_emitter = new SmokeEmitter(pos);
-  ai = 0;
-}
-
-Tank::Tank (const FloatVector2d &arg_pos,
-	    int reloading_speed, std::string tank, std::string str_turret, std::string fire) 
-  : speed (0.0f),
-    increment (2.0f),
-    burning(false),
-    smod (resources->get_sprite (tank.c_str ())),
-    sur_destroyed (resources->get_sprite ("feuerkraft/tank2destroyed")),
-    sur (resources->get_sprite (tank.c_str ())),
-    sur_light(resources->get_sprite("feuerkraft/tank_light")),
-    sur_highlight(resources->get_sprite("feuerkraft/tank_highlight")),
-    shadow (resources->get_sprite ("feuerkraft/tank2_shadow")),
-    turret (NULL),
-    smod_step (0),
-    mine_reload_time (0),
-    energie (100),
-    destroyed (false)
-{
-  ai = 0;
-  velocity = 0.0f;
-
-  orientation = Math::south;
-  tmp_angle = orientation;
-
-  sur.set_alignment(origin_center);
-  sur_destroyed.set_alignment(origin_center);
-
-  turret = new Turret(this, reloading_speed, str_turret, fire);
-  pos = arg_pos;
-
-  particle_release = 0.0f;
-  
-  properties->register_float("ammo",  &ammo);
-  properties->register_float("fuel",  &fuel);
-  
-  smoke_emitter = new SmokeEmitter(pos);
-}
-
-Tank::~Tank ()
-{
-  delete smoke_emitter;
-  delete turret;
-}
-
-void
-Tank::draw_energie (View& view)
-{
-  energie.draw (view, 
-		int(pos.x), int(pos.y - 40));
-}
-  
-void
-Tank::draw_levelmap (LevelMap& levelmap)
-{
-  CL_Display::fill_rect (CL_Rect(int(pos.x / 40), int(pos.y / 40),
-				 int(pos.x / 40) + 4, int(pos.y / 40) + 4),
-			 CL_Color(255, 0, 0, 255));
-}
-
-void
-Tank::draw (View& view)
-{
-  if (destroyed)
-    {
-      view.get_sc().color().draw(sur_destroyed, pos.x, pos.y);
-    }
-  else
-    {
-      for (std::deque<FloatVector2d>::iterator i = smodpos.begin ();
-	   i != smodpos.end (); ++i)
-	{
-	  /*view.draw (smod, 
-            int(i->x - (smod.get_width ()/2)),
-            int(i->y - (smod.get_height ()/2)),
-            int(fmod (i->z, circle) / circle * 16.0));*/
-	  //view.draw (smod, 
-	}
-
-#ifdef UGLY_SHADOWS_ENABLED
-      view.draw(shadow, pos + FloatVector2d (0,0), orientation);
-      view.draw(shadow, pos + FloatVector2d (5,5), orientation);
-      view.draw(shadow, pos + FloatVector2d (10,10), orientation);
-      view.draw(shadow, pos + FloatVector2d (15,15), orientation);
-#endif /* UGLY_SHADOWS_ENABLED */
-
-      // Draw the tank
-      sur_light.set_scale(2.5, 2.5);
-      sur_highlight.set_scale(2.5, 2.5);
-      sur.set_angle(Math::rad2deg(orientation + Math::pi));
-      sur_light.set_angle(Math::rad2deg(orientation + Math::pi));
-      sur_highlight.set_angle(Math::rad2deg(orientation + Math::pi));
-
-      view.get_sc().color().draw(sur, pos.x, pos.y);
-
-      if (sur_light)
-        view.get_sc().light().draw(sur_light, pos.x, pos.y);
-      if (sur_highlight)
-        view.get_sc().highlight().draw(sur_highlight, pos.x, pos.y);
-
-      turret->draw(view);
-
-      // Draw Collision rect
-      FloatVector2d x1 (-30, -15);
-      FloatVector2d y1 (-30, 15);
-      FloatVector2d x2 (30, -15);
-      FloatVector2d y2 (30, 15);
-
-      x1.rotate(orientation);
-      y1.rotate(orientation);
-      x2.rotate(orientation);
-      y2.rotate(orientation);
-
-      x1 += pos;
-      y1 += pos;
-      x2 += pos;
-      y2 += pos;
-
-      /*view.draw_line (x1.x, x1.y, x2.x, x2.y, 1.0, 1.0, 1.0);
-        view.draw_line (y1.x, y1.y, y2.x, y2.y, 1.0, 1.0, 1.0);
-        view.draw_line (y2.x, y2.y, x2.x, x2.y, 1.0, 1.0, 1.0);
-        view.draw_line (y1.x, y1.y, x1.x, x1.y, 1.0, 1.0, 1.0);*/
-    }
-}
-
-void 
-Tank::explode ()
-{
-  GameWorld::current()->add (new Explosion (pos, Explosion::MEDIUM));
-  destroyed = true;
-  destroy_time = CL_System::get_time ();
-}
-
-void
-Tank::respawn ()
-{
-  /* FIXME: This respawn code is extremly ugly... 
-     Tank* tank = new Tank(FloatVector2d (560, 1245), 5,
-     "feuerkraft/tank2", "feuerkraft/turret2", "feuerkraft/fire2");
-     GameWorld::current()->add (tank);
-     if (get_controller ())
-     {
-     get_controller ()->set_controllable (tank);
-     tank->set_controller (get_controller ());
-     vehicle_view.set_vehicle (tank);
-     }
-     destroy_time = -1;
-  */
-}
-
-void 
-Tank::update (float delta)
-{
-  if (burning)
-    {
-      smoke_emitter->set_pos(pos + (FloatVector2d(-5.0f, 0.0f).rotate(orientation)));
-      smoke_emitter->update(delta);
-    }
-
-  // Apply controlls
-  orientation += 3.0f * steering * delta;
-  velocity    += 15.0f * acceleration * delta;
-
-  turret->increase_angle(strafe_steering * delta);
-
-  steering = acceleration = 0;
-
-  if (firing)
-    turret->start_fire();
-  else
-    turret->stop_fire();
-
-  // FIXME: Ugly
-  if (destroyed && destroy_time != -1 && destroy_time + 2000 < (int) CL_System::get_time ())
-    {
-      respawn ();
-    }
-
-  particle_release += fabs(velocity);
-
-  if (particle_release > 20.0f && !destroyed)
-    {
-      GroundType type = GameWorld::current()->get_groundmap ()->get_groundtype (pos.x, pos.y);
-
-      if (type == GT_SAND)
-	GameWorld::current()->add (new SandParticle(pos));
-      else if (type == GT_GRASS)
-	GameWorld::current()->add (new GrassParticle(pos));
-
-      particle_release = 0;
-    }
-  
-  delta = delta * 50.0f;
-
-  if (destroyed)
-    return;
-
-  if (energie <= 25)
-    burning = true;
-
-  if (energie <= 0)
-    explode ();
-  
-  turret->update (delta);
-
-  if (mine_reload_time)
-    --mine_reload_time;
-
-  if (velocity > 0.06f)
-    velocity -= 0.05f;
-  else if (velocity < -0.06f)
-    velocity += 0.05f;
-  else
-    velocity = 0;
-
-  // Terminal velocity
-  if (velocity > 5)
-    velocity = 5.0f;
-  else if (velocity < -2)
-    velocity = -2.0f;
-
-  FloatVector2d vel = FloatVector2d::make_polar(velocity, orientation);
-
-  if (velocity != 0.0 || tmp_angle != orientation)
-    {
-      if (smod_step++ > 5)
-	{
-	  smod_step = 0;
-	  tmp_angle = orientation;
-	  smodpos.push_back(pos);
-	  if (smodpos.size () > 200)
-	    smodpos.pop_front ();
-	}
-    }
-
-  tmp_pos = pos;
-  pos += vel * delta;
-
-  CollisionManager::current()->add_rect(get_id(), pos.x, pos.y, 30, 68, orientation);
-}
-
-void
-Tank::set_angle (float arg_orientation)
-{
-  orientation = arg_orientation;
-}
-
-void
-Tank::drop_mine ()
-{
-  if (mine_reload_time <= 0)
-    {
-      FloatVector2d vel = FloatVector2d(25.0f, 0.0f).rotate (orientation);
-
-      Mine* mine = new Mine(AList());
-      mine->get_properties()->set_float("x-pos", pos.x + vel.x);
-      mine->get_properties()->set_float("y-pos", pos.y + vel.y);
-
-      GameWorld::current()->add(mine);
-      mine_reload_time = 50;
-    }
-}
-
-bool 
-Tank::is_colliding (FloatVector2d obj_pos)
-{
-  float range = 10.0; 
-
-  return  (obj_pos.x > pos.x - range && obj_pos.x < pos.x + range
-	   && obj_pos.y > pos.y - range && obj_pos.y < pos.y + range);
-}
-
-void 
-Tank::collide (Projectile*)
-{
-  energie -= 5;
-}
-
-void 
-Tank::collide (Mine*)
-{
-  energie -= 25;
-}
-
-void 
-Tank::collide (FloatVector2d force)
-{
-  energie -= int(force.get_length());
-  
-  std::cout << "Tank: Got force: " << force.get_length() << std::endl;
-}
-
-void
-Tank::on_collision_with_building(Building* building)
-{
-  //std::cout << "Tank: collision with building " << get_id() << std::endl;
-  pos = tmp_pos;
-  velocity = 0;
-}
-
-void
-Tank::on_collision(GameObj* obj)
-{
-  if (dynamic_cast<Unit*>(obj))
-    {
-      //std::cout << "Tank: collision from " << get_id() << " with: " << obj->get_id() << std::endl;
-      pos = tmp_pos;
-      velocity = 0;
-    }
-}
-
-void
-Tank::attach_ai()
-{
-  ai = new VehicleRoboAI(this);
-  AIManager::instance()->add(ai);
-}
-
-void
-Tank::dettach_ai()
-{
-  if (ai)
-    {
-      AIManager::instance()->remove(ai);
-      delete ai;
-      ai = 0;
-    }
-}
-
-// EOF //

Copied: trunk/src/vehicles/turret.cpp (from rev 341, trunk/src/vehicles/turret.cxx)


Property changes on: trunk/src/vehicles/turret.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/turret.cxx
===================================================================
--- trunk/src/vehicles/turret.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/vehicles/turret.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,116 +0,0 @@
-#include <iostream>
-#include "../projectile.hxx"
-#include "../math.hxx"
-#include "../resource_manager.hxx"
-#include "../rocket.hxx"
-#include "../math.hxx"
-#include "tank.hxx"
-#include "turret.hxx"
-
-const float circle = 6.2831854f;
-
-Turret::Turret (Tank* arg_tank, int r_speed, std::string surface, std::string fire) 
-  : fire_sur (resources->get_sprite (fire.c_str ())),
-    sur (resources->get_sprite (surface.c_str ())),
-    shadow (resources->get_sprite ("feuerkraft/turret2_shadow")),
-    orientation (0),
-    fireing (false),
-    reloading (0),
-    reloading_speed (r_speed)
-{
-  tank = arg_tank;
-}
-
-Turret::~Turret ()
-{
-}
-
-void 
-Turret::draw (View& view)
-{
-  float absolute_orientation = tank->get_orientation () + orientation;
-
-#ifdef UGLY_SHADOWS_ENABLED  
-  view.draw(shadow, tank->get_pos () + FloatVector2d (10,10), absolute_orientation);
-  view.draw(shadow, tank->get_pos () + FloatVector2d (15,15), absolute_orientation);
-  view.draw(shadow, tank->get_pos () + FloatVector2d (20,20), absolute_orientation);
-  view.draw(shadow, tank->get_pos () + FloatVector2d (25,25), absolute_orientation);
-#endif 
-
-  sur.set_angle((absolute_orientation + Math::pi) / Math::pi * 180.0f);
-  view.get_sc().color().draw(sur, tank->get_pos().x, tank->get_pos().y);
-
-  if (fireing && reloading == 0 && tank->ammo > 0.0)
-    {
-      fire_sur.set_angle(Math::rad2deg(absolute_orientation + Math::pi));
-      view.get_sc().color().draw(fire_sur, tank->get_pos().x, tank->get_pos().y);
-      fireing = false;
-      reloading = reloading_speed;
-    }
-}
-
-void
-Turret::update (float delta)
-{
-
-  static bool floppy;
-
-  if (reloading)
-    reloading--;
-
-  if (fireing && reloading == 0 && tank->ammo > 0.0)
-    {
-      tank->ammo -=  0.003 * delta;
-
-      float rot_angle = tank->get_orientation() + orientation;
-      
-      FloatVector2d dir = FloatVector2d::make_polar(10.0 + tank->get_velocity(), rot_angle);
-
-      if (floppy)
-	{
-	  GameWorld::current()->add (new Projectile (tank, tank->get_pos ()
-                                                     + FloatVector2d::make_polar(-5.0f, rot_angle),
-                                                     dir));
-	}
-      else
-	{
-	  GameWorld::current()->add (new Projectile (tank, tank->get_pos ()
-                                                     + FloatVector2d::make_polar(5.0, rot_angle),
-                                                     dir));
-	}
-      floppy = !floppy;
-    }
-}
-
-void 
-Turret::increase_angle (float delta)
-{
-  orientation += tank->get_increment () * delta;
-  //angle = fmod (angle + circle, circle);
-}
-
-void
-Turret::start_fire ()
-{
-  fireing = true;
-}
-
-void
-Turret::stop_fire ()
-{
-  fireing = false;
-}
-
-void 
-Turret::set_relative_orientation (float arg_orientation)
-{
-  orientation = arg_orientation;
-}
-
-void
-Turret::set_absolute_orientation (float arg_orientation)
-{
-  orientation = orientation - tank->get_orientation();
-}
-
-// EOF 

Copied: trunk/src/vehicles/vehicle.cpp (from rev 341, trunk/src/vehicles/vehicle.cxx)


Property changes on: trunk/src/vehicles/vehicle.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/vehicles/vehicle.cxx
===================================================================
--- trunk/src/vehicles/vehicle.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/vehicles/vehicle.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,75 +0,0 @@
-//  $Id: vehicle.cxx,v 1.11 2003/10/31 23:24:41 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "../input/controller.hxx"
-#include "vehicle.hxx"
-
-Vehicle::Vehicle ()
-  : ammo (1.0f), 
-    fuel (1.0f)
-{
-  acceleration = 0;
-  steering = 0;
-  strafe_steering = 0;
-  firing = false;
-  secondary_firing = false;
-}
-
-float 
-Vehicle::get_ammo ()
-{
-  return ammo;
-}
-
-float 
-Vehicle::get_fuel ()
-{
-  return fuel;
-}
-
-void 
-Vehicle::refuel (float delta)
-{
-  fuel += 0.003 * delta;
-
-  if (fuel > 1.0f)
-    fuel = 1.0f;
-}
-
-void 
-Vehicle::reload_ammo (float delta)
-{
-  ammo += 0.003 * delta;
-
-  if (ammo > 1.0f)
-    ammo = 1.0f;
-}
-
-void
-Vehicle::update_controlls(const Controller& controller)
-{
-  acceleration = -controller.get_axis_state(ACCELERATE_AXIS);
-  steering     = controller.get_axis_state(ORIENTATION_AXIS);
-  strafe_steering = controller.get_axis_state(STRAFE_AXIS);
-  firing       = controller.get_button_state(PRIMARY_FIRE_BUTTON);
-  secondary_firing       = controller.get_button_state(SECONDARY_FIRE_BUTTON);
-}
-
-/* EOF */

Copied: trunk/src/view.cpp (from rev 341, trunk/src/view.cxx)


Property changes on: trunk/src/view.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Deleted: trunk/src/view.cxx
===================================================================
--- trunk/src/view.cxx	2009-01-27 11:12:17 UTC (rev 343)
+++ trunk/src/view.cxx	2009-01-27 11:16:10 UTC (rev 344)
@@ -1,237 +0,0 @@
-//  $Id: view.cxx,v 1.19 2003/10/20 21:30:09 grumbel Exp $
-//
-//  Feuerkraft - A Tank Battle Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/sprite.h>
-#include <ClanLib/Display/surface.h>
-
-#include "assert.hxx"
-#include "color.hxx"
-#include "math.hxx"
-#include "view.hxx"
-
-View* View::current_ = 0;
-
-View::View (int arg_x1, int arg_y1, 
-	    int arg_x2, int arg_y2,
-	    ViewUpdater* arg_updater)
-  : x1 (arg_x1), y1 (arg_y1),
-    x2 (arg_x2), y2 (arg_y2),
-    view_updater(arg_updater)
-{
-  //std::cout << "View: " << x1 << " " << y1 << " " << x2 << " " << y2 
-    //<< " " << state.x_offset << " " << state.y_offset << std::endl;
-  
-  state.x_offset = -x1;
-  state.y_offset = -y1;
-
-  state.zoom = 1.0;
-  state.rotation = 0;
-  
-  scene_context = new SceneContext();
-
-  current_ = this;
-}
-
-View::~View ()
-{
-  delete view_updater;
-}
-
-float
-View::get_x_offset () 
-{
-  return x1 - state.x_offset + (x2 - x1)/2; 
-}
-
-float
-View::get_y_offset ()
-{
-  return y1 - state.y_offset + (y2 - y1)/2; 
-}
-
-/*
-void
-View::draw (CL_Sprite& sprite, const FloatVector2d& pos, float angle)
-{
-  sprite.set_angle(Math::rad2deg(angle));
-  sprite.draw(int(pos.x + get_x_offset ()), 
-              int(pos.y + get_y_offset ()));
-}
-
-void 
-View::draw_line (float x1, float y1, float x2, float y2, 
-                 const Color& color)
-{
-  CL_Display::draw_line(int((x1 + get_x_offset ())),
-                        int((y1 + get_y_offset ())),
-                        int((x2 + get_x_offset ())),
-                        int((y2 + get_y_offset ())),
-                        color.get_cl_color());
-}
-
-void 
-View::draw_fillrect (float x1, float y1, float x2, float y2, 
-                     const Color& color)
-{
-  CL_Display::fill_rect (CL_Rect(int((x1 + get_x_offset ())),
-                                 int((y1 + get_y_offset ())), 
-                                 int((x2 + get_x_offset ())),
-                                 int((y2 + get_y_offset ()))),
-			 color.get_cl_color());
-}
-
-void
-View::draw_rect (float x1, float y1, float x2, float y2, 
-		 const Color& arg_color)
-{
-  const CL_Color& color = arg_color.get_cl_color();
-
-  CL_Display::draw_line (int(x1 + get_x_offset ()), int(y1 + get_y_offset ()), 
-			 int(x1 + get_x_offset ()), int(y2 + get_y_offset ()),
-			 color);
-  CL_Display::draw_line (int(x2 + get_x_offset ()), int(y1 + get_y_offset ()), 
-			 int(x2 + get_x_offset ()), int(y2 + get_y_offset ()),
-			 color);
-  CL_Display::draw_line (int(x1 + get_x_offset ()), int(y1 + get_y_offset ()), 
-			 int(x2 + get_x_offset ()), int(y1 + get_y_offset ()),
-			 color);
-  CL_Display::draw_line (int(x1 + get_x_offset ()), int(y2 + get_y_offset ()), 
-			 int(x2 + get_x_offset ()), int(y2 + get_y_offset ()),
-			 color);
-}
-
-void 
-View::draw_pixel (float x_pos, float y_pos, 
-                  const Color& color)
-{
-  //CL_Display::put_pixel (x1 + get_x_offset (),
-  //			 y1 + get_y_offset (), r, g, b, a);
-  AssertMsg(0, "View::draw_pixel () not implemented");
-}
-
-void 
-View::draw_circle (float x_pos, float y_pos, float radius,
-		   const Color& color)
-{
-  // FIXME: Probally not the fast circle draw algo on this world...
-  const float pi = 3.1415927f * 2.0f;
-  const float steps = 16;
-  FloatVector2d next    = FloatVector2d::make_polar(radius, 0 * pi/float(steps));
-
-  for (int i = 1; i <= steps; ++i)
-    {
-      FloatVector2d current = next;
-      next = FloatVector2d::make_polar(radius, i * pi/float(steps));
-      
-     .get_sc().color().draw_line(x_pos + current.x, y_pos + current.y,
-                         x_pos + next.x,    y_pos + next.y,
-                         color);
-    }
-}
-
-void
-View::draw_arc (float x_pos, float y_pos, float radius, float angle_start, float angle_stop,
-                const Color& color)
-{
-  angle_start = Math::normalize_angle(angle_start);
-  angle_stop  = Math::normalize_angle(angle_stop);
-
-  const float steps = 16;
-
-  float enclosed_angle = Math::normalize_angle(angle_stop - angle_start);
-  
-  float x, y;
-
-  float last_x = x_pos + radius * cos(angle_start);
-  float last_y = y_pos + radius * sin(angle_start);
-  
-  for(int i = 1; i <= steps; ++i)
-    {
-      x = x_pos + radius * cos(angle_start + i*enclosed_angle/steps);
-      y = y_pos + radius * sin(angle_start + i*enclosed_angle/steps);
-
-     .get_sc().color().draw_line(last_x, last_y, x, y, color);
-
-      last_x = x;
-      last_y = y;
-    }
-}
-*/
-void
-View::set_updater(ViewUpdater* arg_updater)
-{
-  delete view_updater;
-  view_updater = arg_updater;
-}
-
-void
-View::update(float delta)
-{
-  //std::cout << "View:update: " << x1 << " " << y1 << " " << x2 << " " << y2 
-    //<< " " << state.x_offset << " " << state.y_offset << std::endl;
-
-  if (view_updater)
-    view_updater->update(delta, state);
-
-  scene_context->reset_modelview();
-  scene_context->translate(get_x_offset(), get_y_offset());
-  //drawing_context.translate(state.x_offset, state.y_offset);
-}
-
-bool
-View::get_property (ViewProperty p)
-{
-  return properties & p;
-}
-
-void
-View::set_property (ViewProperty p)
-{
-  properties |= p;
-}
-
-int
-View::get_width ()
-{
-  return x2 - x1; // FIXME: Off by one?!
-}
-
-int
-View::get_height ()
-{
-  return y2 - y1;// FIXME: Off by one?!
-}
-
-FloatVector2d
-View::screen_to_world (const FloatVector2d& pos)
-{
-  return FloatVector2d (pos.x - get_x_offset (),
-                        pos.y - get_y_offset ());
-}
-
-FloatVector2d
-View::world_to_screen (const FloatVector2d& pos)
-{
-  return FloatVector2d (pos.x + get_x_offset (),
-                        pos.y + get_y_offset ());
-}
-
-/* EOF */



From grumbel at mail.berlios.de  Tue Jan 27 12:27:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 27 Jan 2009 12:27:24 +0100
Subject: [Feuerkraft-commit] r346 - in trunk: . src src/buildings
	src/display src/editor src/generic src/groundmap src/input
	src/particles src/scripting src/sound src/vehicles
Message-ID: <200901271127.n0RBROXj007869@sheep.berlios.de>

Author: grumbel
Date: 2009-01-27 12:27:04 +0100 (Tue, 27 Jan 2009)
New Revision: 346

Modified:
   trunk/configure.ac
   trunk/src/ai.hpp
   trunk/src/ai_manager.cpp
   trunk/src/ai_manager.hpp
   trunk/src/ai_vehicle.cpp
   trunk/src/ai_vehicle.hpp
   trunk/src/alist.cpp
   trunk/src/alist.hpp
   trunk/src/ambulance.cpp
   trunk/src/ambulance.hpp
   trunk/src/assert.hpp
   trunk/src/astar_pathfinder.cpp
   trunk/src/astar_pathfinder.hpp
   trunk/src/background.cpp
   trunk/src/background.hpp
   trunk/src/bfirst_pathfinder.cpp
   trunk/src/bfirst_pathfinder.hpp
   trunk/src/buildings/ammotent.cpp
   trunk/src/buildings/ammotent.hpp
   trunk/src/buildings/building.cpp
   trunk/src/buildings/building.hpp
   trunk/src/buildings/building_manager.cpp
   trunk/src/buildings/building_manager.hpp
   trunk/src/buildings/building_map.cpp
   trunk/src/buildings/building_map.hpp
   trunk/src/buildings/building_map_data.cpp
   trunk/src/buildings/building_map_data.hpp
   trunk/src/buildings/building_type_manager.cpp
   trunk/src/buildings/building_type_manager.hpp
   trunk/src/buildings/custom_building.cpp
   trunk/src/buildings/custom_building.hpp
   trunk/src/buildings/fuelstation.cpp
   trunk/src/buildings/fuelstation.hpp
   trunk/src/buildings/headquarter.cpp
   trunk/src/buildings/headquarter.hpp
   trunk/src/buildings/tower.cpp
   trunk/src/buildings/tower.hpp
   trunk/src/buildings/tower_ai.cpp
   trunk/src/buildings/tower_ai.hpp
   trunk/src/buildings/wall.cpp
   trunk/src/buildings/wall.hpp
   trunk/src/buildings/wall_door.cpp
   trunk/src/buildings/wall_door.hpp
   trunk/src/collision_manager.cpp
   trunk/src/collision_manager.hpp
   trunk/src/color.cpp
   trunk/src/color.hpp
   trunk/src/command_line_arguments.cpp
   trunk/src/command_line_arguments.hpp
   trunk/src/communication_dialog.cpp
   trunk/src/communication_dialog.hpp
   trunk/src/controller_def.cpp
   trunk/src/dijkstra_pathfinder.cpp
   trunk/src/dijkstra_pathfinder.hpp
   trunk/src/display/drawing_context.cpp
   trunk/src/display/drawing_context.hpp
   trunk/src/display/scene_context.cpp
   trunk/src/display/scene_context.hpp
   trunk/src/display_manager.cpp
   trunk/src/display_manager.hpp
   trunk/src/draw_circle.cpp
   trunk/src/draw_circle.hpp
   trunk/src/editor/editor.cpp
   trunk/src/editor/editor.hpp
   trunk/src/energie.cpp
   trunk/src/energie.hpp
   trunk/src/explosion.cpp
   trunk/src/explosion.hpp
   trunk/src/feuerkraft.cpp
   trunk/src/feuerkraft.hpp
   trunk/src/field.hpp
   trunk/src/fonts.cpp
   trunk/src/fonts.hpp
   trunk/src/game_delta.cpp
   trunk/src/game_delta.hpp
   trunk/src/game_mission.cpp
   trunk/src/game_mission.hpp
   trunk/src/game_obj.cpp
   trunk/src/game_obj.hpp
   trunk/src/game_obj_data.hpp
   trunk/src/game_obj_data_factory.cpp
   trunk/src/game_obj_data_factory.hpp
   trunk/src/game_obj_factory.cpp
   trunk/src/game_obj_factory.hpp
   trunk/src/game_obj_manager.cpp
   trunk/src/game_obj_manager.hpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/game_session_manager.cpp
   trunk/src/game_session_manager.hpp
   trunk/src/game_world.cpp
   trunk/src/game_world.hpp
   trunk/src/game_world_builder.cpp
   trunk/src/game_world_builder.hpp
   trunk/src/game_world_data.cpp
   trunk/src/game_world_data.hpp
   trunk/src/generic/random.cpp
   trunk/src/generic/random.hpp
   trunk/src/geometry.cpp
   trunk/src/geometry.hpp
   trunk/src/globals.cpp
   trunk/src/globals.hpp
   trunk/src/goal_manager.cpp
   trunk/src/goal_manager.hpp
   trunk/src/groundmap/grid_map.cpp
   trunk/src/groundmap/grid_map.hpp
   trunk/src/groundmap/grid_map_data.cpp
   trunk/src/groundmap/grid_map_data.hpp
   trunk/src/groundmap/grid_tile.cpp
   trunk/src/groundmap/grid_tile.hpp
   trunk/src/groundmap/grid_tile_data.cpp
   trunk/src/groundmap/grid_tile_data.hpp
   trunk/src/groundmap/grid_tile_generator.cpp
   trunk/src/groundmap/grid_tile_generator.hpp
   trunk/src/groundmap/ground_map.hpp
   trunk/src/groundmap/ground_map_data.cpp
   trunk/src/groundmap/ground_map_data.hpp
   trunk/src/groundmap/ground_map_data_factory.cpp
   trunk/src/groundmap/ground_map_data_factory.hpp
   trunk/src/groundmap/ground_type.cpp
   trunk/src/groundmap/ground_type.hpp
   trunk/src/groundmap/multi_ground_map.cpp
   trunk/src/groundmap/multi_ground_map.hpp
   trunk/src/groundmap/multi_ground_map_data.cpp
   trunk/src/groundmap/multi_ground_map_data.hpp
   trunk/src/groundmap/sprite_tile.cpp
   trunk/src/groundmap/sprite_tile.hpp
   trunk/src/groundmap/sprite_tile_data.cpp
   trunk/src/groundmap/sprite_tile_data.hpp
   trunk/src/groundmap/tile.hpp
   trunk/src/groundmap/tile_data.hpp
   trunk/src/groundmap/tile_data_factory.cpp
   trunk/src/groundmap/tile_data_factory.hpp
   trunk/src/groundmap/tile_map.cpp
   trunk/src/groundmap/tile_map.hpp
   trunk/src/groundmap/tile_map_data.cpp
   trunk/src/groundmap/tile_map_data.hpp
   trunk/src/gui_obj.hpp
   trunk/src/guile.cpp
   trunk/src/guile.hpp
   trunk/src/handle_manager.hpp
   trunk/src/help.cpp
   trunk/src/help.hpp
   trunk/src/input/axis_button.cpp
   trunk/src/input/axis_button.hpp
   trunk/src/input/axis_factory.cpp
   trunk/src/input/axis_factory.hpp
   trunk/src/input/button_axis.cpp
   trunk/src/input/button_axis.hpp
   trunk/src/input/button_factory.cpp
   trunk/src/input/controller.cpp
   trunk/src/input/controller.hpp
   trunk/src/input/input_axis_input_device.cpp
   trunk/src/input/input_axis_input_device.hpp
   trunk/src/input/input_button_input_device.cpp
   trunk/src/input/input_button_input_device.hpp
   trunk/src/input/input_event.hpp
   trunk/src/input/input_manager.cpp
   trunk/src/input/input_manager.hpp
   trunk/src/input/input_manager_custom.cpp
   trunk/src/input/input_manager_custom.hpp
   trunk/src/input/input_manager_impl.cpp
   trunk/src/input/input_manager_impl.hpp
   trunk/src/input/input_manager_player.cpp
   trunk/src/input/input_manager_player.hpp
   trunk/src/input/input_recorder.cpp
   trunk/src/input/input_recorder.hpp
   trunk/src/input/multi_button.cpp
   trunk/src/input/multi_button.hpp
   trunk/src/ipc.cpp
   trunk/src/ipc.hpp
   trunk/src/keyboard_manager.cpp
   trunk/src/keyboard_manager.hpp
   trunk/src/keys.cpp
   trunk/src/keys.hpp
   trunk/src/level_map.cpp
   trunk/src/level_map.hpp
   trunk/src/line_segments.cpp
   trunk/src/line_segments.hpp
   trunk/src/marker.cpp
   trunk/src/marker.hpp
   trunk/src/math.cpp
   trunk/src/math.hpp
   trunk/src/menu.cpp
   trunk/src/menu.hpp
   trunk/src/menu_handle_mgr.cpp
   trunk/src/menu_handle_mgr.hpp
   trunk/src/menu_item.cpp
   trunk/src/menu_item.hpp
   trunk/src/message_buffer.cpp
   trunk/src/message_buffer.hpp
   trunk/src/mine.cpp
   trunk/src/mine.hpp
   trunk/src/output_world_builder.cpp
   trunk/src/output_world_builder.hpp
   trunk/src/particles/explosion_particle.hpp
   trunk/src/particles/fire_emitter.cpp
   trunk/src/particles/fire_emitter.hpp
   trunk/src/particles/fire_particle.cpp
   trunk/src/particles/fire_particle.hpp
   trunk/src/particles/grass_particle.hpp
   trunk/src/particles/particle.hpp
   trunk/src/particles/particle_system.hpp
   trunk/src/particles/rocket_smoke_particle.cpp
   trunk/src/particles/rocket_smoke_particle.hpp
   trunk/src/particles/sand_particle.hpp
   trunk/src/particles/smoke_emitter.cpp
   trunk/src/particles/smoke_emitter.hpp
   trunk/src/particles/smoke_particle.hpp
   trunk/src/path_manager.cpp
   trunk/src/path_manager.hpp
   trunk/src/pathfinder.hpp
   trunk/src/player.cpp
   trunk/src/player.hpp
   trunk/src/player_view.cpp
   trunk/src/player_view.hpp
   trunk/src/projectile.cpp
   trunk/src/projectile.hpp
   trunk/src/property.cpp
   trunk/src/property.hpp
   trunk/src/property_set.cpp
   trunk/src/property_set.hpp
   trunk/src/radar.cpp
   trunk/src/radar.hpp
   trunk/src/resource_manager.cpp
   trunk/src/resource_manager.hpp
   trunk/src/robot_tank.cpp
   trunk/src/robot_tank.hpp
   trunk/src/rocket.cpp
   trunk/src/rocket.hpp
   trunk/src/satchel_charge.cpp
   trunk/src/satchel_charge.hpp
   trunk/src/scm_functor.cpp
   trunk/src/scm_functor.hpp
   trunk/src/scm_sequence_hook.cpp
   trunk/src/scm_sequence_hook.hpp
   trunk/src/screen.cpp
   trunk/src/screen.hpp
   trunk/src/screenshot.cpp
   trunk/src/scripting/ai_commands.cpp
   trunk/src/scripting/ai_commands.hpp
   trunk/src/scripting/ai_vehicle_commands.cpp
   trunk/src/scripting/ai_vehicle_commands.hpp
   trunk/src/scripting/building_commands.cpp
   trunk/src/scripting/building_commands.hpp
   trunk/src/scripting/clanlib_commands.cpp
   trunk/src/scripting/comm_commands.cpp
   trunk/src/scripting/comm_commands.hpp
   trunk/src/scripting/debug_commands.cpp
   trunk/src/scripting/debug_commands.hpp
   trunk/src/scripting/dialog_commands.hpp
   trunk/src/scripting/display_commands.cpp
   trunk/src/scripting/display_commands.hpp
   trunk/src/scripting/effect_commands.cpp
   trunk/src/scripting/effect_commands.hpp
   trunk/src/scripting/feuerkraft.i
   trunk/src/scripting/game_commands.cpp
   trunk/src/scripting/game_commands.hpp
   trunk/src/scripting/gameobj_commands.cpp
   trunk/src/scripting/gameobj_commands.hpp
   trunk/src/scripting/input_commands.cpp
   trunk/src/scripting/input_commands.hpp
   trunk/src/scripting/menu_commands.cpp
   trunk/src/scripting/menu_commands.hpp
   trunk/src/scripting/object_commands.cpp
   trunk/src/scripting/object_commands.hpp
   trunk/src/scripting/player_commands.cpp
   trunk/src/scripting/player_commands.hpp
   trunk/src/scripting/script_helper.cpp
   trunk/src/scripting/script_helper.hpp
   trunk/src/scripting/scripting.hpp
   trunk/src/scripting/sequence_commands.cpp
   trunk/src/scripting/sequence_commands.hpp
   trunk/src/scripting/sound_commands.cpp
   trunk/src/scripting/sound_commands.hpp
   trunk/src/scripting/trigger_commands.cpp
   trunk/src/scripting/trigger_commands.hpp
   trunk/src/scripting/vehicle_commands.cpp
   trunk/src/scripting/vehicle_commands.hpp
   trunk/src/scripting/weapon_commands.hpp
   trunk/src/sequence_manager.cpp
   trunk/src/sequence_manager.hpp
   trunk/src/sexpr_world_reader.cpp
   trunk/src/sexpr_world_reader.hpp
   trunk/src/shockwave.cpp
   trunk/src/shockwave.hpp
   trunk/src/shortcut_pathfinder.cpp
   trunk/src/shortcut_pathfinder.hpp
   trunk/src/soldier.cpp
   trunk/src/soldier.hpp
   trunk/src/soldier_ai.cpp
   trunk/src/soldier_ai.hpp
   trunk/src/sound/sound.cpp
   trunk/src/sound/sound.hpp
   trunk/src/sound/sound_dummy.cpp
   trunk/src/sound/sound_dummy.hpp
   trunk/src/sound/sound_real.cpp
   trunk/src/sound/sound_real.hpp
   trunk/src/sound/sound_res_mgr.cpp
   trunk/src/sound/sound_res_mgr.hpp
   trunk/src/sound/sounds.hpp
   trunk/src/start_screen.cpp
   trunk/src/start_screen.hpp
   trunk/src/system.cpp
   trunk/src/system.hpp
   trunk/src/tree.cpp
   trunk/src/tree.hpp
   trunk/src/trigger_manager.cpp
   trunk/src/trigger_manager.hpp
   trunk/src/unit.cpp
   trunk/src/unit.hpp
   trunk/src/vector2d.cpp
   trunk/src/vector2d.hpp
   trunk/src/vehicle_ai.cpp
   trunk/src/vehicle_ai.hpp
   trunk/src/vehicle_status.cpp
   trunk/src/vehicle_status.hpp
   trunk/src/vehicle_view.cpp
   trunk/src/vehicle_view.hpp
   trunk/src/vehicles/helicopter.cpp
   trunk/src/vehicles/helicopter.hpp
   trunk/src/vehicles/jeep.cpp
   trunk/src/vehicles/jeep.hpp
   trunk/src/vehicles/rotor.cpp
   trunk/src/vehicles/rotor.hpp
   trunk/src/vehicles/tank.cpp
   trunk/src/vehicles/tank.hpp
   trunk/src/vehicles/turret.cpp
   trunk/src/vehicles/turret.hpp
   trunk/src/vehicles/vehicle.cpp
   trunk/src/vehicles/vehicle.hpp
   trunk/src/view.cpp
   trunk/src/view.hpp
   trunk/src/view_plugin.hpp
   trunk/src/view_properties.hpp
   trunk/src/world_builder.hpp
   trunk/src/z_pos_layers.hpp
Log:
Finished up renames

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/configure.ac	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,6 +1,6 @@
 AC_INIT(Feuerkraft, 0.1.1)
 AC_CONFIG_HEADERS([config.h])
-AC_CONFIG_SRCDIR(src/feuerkraft.hxx)
+AC_CONFIG_SRCDIR(src/feuerkraft.hpp)
 AM_INIT_AUTOMAKE(dist-bzip2)
 
 AC_PROG_CXX

Modified: trunk/src/ai.hpp
===================================================================
--- trunk/src/ai.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/ai.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ai.hxx,v 1.2 2003/06/18 13:03:13 grumbel Exp $
+//  $Id: ai.hpp,v 1.2 2003/06/18 13:03:13 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/ai_manager.cpp
===================================================================
--- trunk/src/ai_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/ai_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ai_manager.cxx,v 1.3 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: ai_manager.cpp,v 1.3 2003/06/20 20:54:23 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <algorithm>
-#include "ai.hxx"
-#include "ai_manager.hxx"
+#include "ai.hpp"
+#include "ai_manager.hpp"
 
 AIManager* AIManager::instance_ = 0;
 

Modified: trunk/src/ai_manager.hpp
===================================================================
--- trunk/src/ai_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/ai_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ai_manager.hxx,v 1.3 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: ai_manager.hpp,v 1.3 2003/06/20 20:54:23 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/ai_vehicle.cpp
===================================================================
--- trunk/src/ai_vehicle.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/ai_vehicle.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ai_vehicle.cxx,v 1.18 2003/06/08 15:31:27 grumbel Exp $
+//  $Id: ai_vehicle.cpp,v 1.18 2003/06/08 15:31:27 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,16 +19,16 @@
 
 #include <ClanLib/Display/display.h>
 #include <math.h>
-#include "resource_manager.hxx"
-#include "game_world.hxx"
-#include "particles/smoke_particle.hxx"
-#include "collision_manager.hxx"
-#include "ai_vehicle.hxx"
-#include "projectile.hxx"
-#include "property_set.hxx"
-#include "mine.hxx"
-#include "particles/smoke_emitter.hxx"
-#include "level_map.hxx"
+#include "resource_manager.hpp"
+#include "game_world.hpp"
+#include "particles/smoke_particle.hpp"
+#include "collision_manager.hpp"
+#include "ai_vehicle.hpp"
+#include "projectile.hpp"
+#include "property_set.hpp"
+#include "mine.hpp"
+#include "particles/smoke_emitter.hpp"
+#include "level_map.hpp"
 
 AIVehicle::AIVehicle(const FloatVector2d& arg_pos)
   : destroyed(false),

Modified: trunk/src/ai_vehicle.hpp
===================================================================
--- trunk/src/ai_vehicle.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/ai_vehicle.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ai_vehicle.hxx,v 1.15 2003/06/08 15:31:27 grumbel Exp $
+//  $Id: ai_vehicle.hpp,v 1.15 2003/06/08 15:31:27 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,13 +21,13 @@
 #define HEADER_AI_VEHICLE_HXX
 
 #include <list>
-#include "vector2d.hxx"
+#include "vector2d.hpp"
 #include <ClanLib/Display/sprite.h>
 
-#include "energie.hxx"
-#include "line_segments.hxx"
-#include "sequence_manager.hxx"
-#include "vehicles/vehicle.hxx"
+#include "energie.hpp"
+#include "line_segments.hpp"
+#include "sequence_manager.hpp"
+#include "vehicles/vehicle.hpp"
 
 class SmokeEmitter;
 class LevelMap;

Modified: trunk/src/alist.cpp
===================================================================
--- trunk/src/alist.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/alist.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: alist.cxx,v 1.13 2003/06/23 08:43:32 grumbel Exp $
+//  $Id: alist.cpp,v 1.13 2003/06/23 08:43:32 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,7 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "alist.hxx"
+#include "alist.hpp"
 
 AList::AList()
 {  

Modified: trunk/src/alist.hpp
===================================================================
--- trunk/src/alist.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/alist.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: alist.hxx,v 1.10 2003/06/23 08:43:32 grumbel Exp $
+//  $Id: alist.hpp,v 1.10 2003/06/23 08:43:32 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,7 +22,7 @@
 
 #include <string>
 #include <map>
-#include "vector2d.hxx"
+#include "vector2d.hpp"
 
 /** Simple associated list like class 
 

Modified: trunk/src/ambulance.cpp
===================================================================
--- trunk/src/ambulance.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/ambulance.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ambulance.cxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: ambulance.cpp,v 1.7 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "view.hxx"
-#include "resource_manager.hxx"
-#include "ambulance.hxx"
+#include "view.hpp"
+#include "resource_manager.hpp"
+#include "ambulance.hpp"
 
 Ambulance::Ambulance()
   : sur(resources->get_sprite("feuerkraft/ambulance"))

Modified: trunk/src/ambulance.hpp
===================================================================
--- trunk/src/ambulance.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/ambulance.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ambulance.hxx,v 1.7 2003/06/04 10:59:00 grumbel Exp $
+//  $Id: ambulance.hpp,v 1.7 2003/06/04 10:59:00 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define AMBULANCE_HXX
 
 #include <ClanLib/Display/sprite.h>
-#include "game_obj.hxx"
+#include "game_obj.hpp"
 
 class Ambulance : public GameObj
 {

Modified: trunk/src/assert.hpp
===================================================================
--- trunk/src/assert.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/assert.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: assert.hxx,v 1.4 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: assert.hpp,v 1.4 2003/06/20 20:54:23 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/astar_pathfinder.cpp
===================================================================
--- trunk/src/astar_pathfinder.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/astar_pathfinder.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: astar_pathfinder.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: astar_pathfinder.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #include <ClanLib/core.h>
 #include <iostream>
 #include <unistd.h>
-#include "astar_pathfinder.hxx"
+#include "astar_pathfinder.hpp"
 
 AStarPathfinder::AStarPathfinder(Field<int>* arg_field)
   : field(*arg_field),
@@ -329,7 +329,7 @@
 #endif
 
 // Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 astar_pathfinder.cxx  -o astar_pathfinder -lclanCore"
+// compile-command: "g++-3.2 -DTESTME -Wall -O2 astar_pathfinder.cpp  -o astar_pathfinder -lclanCore"
 // End:
 
 /* EOF */

Modified: trunk/src/astar_pathfinder.hpp
===================================================================
--- trunk/src/astar_pathfinder.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/astar_pathfinder.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: astar_pathfinder.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: astar_pathfinder.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,8 +22,8 @@
 
 #include <queue>
 #include <vector>
-#include "field.hxx"
-#include "pathfinder.hxx"
+#include "field.hpp"
+#include "pathfinder.hpp"
 
 /** AStar Pathfinder */
 class AStarPathfinder
@@ -85,7 +85,7 @@
 #endif
 
 // Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 astar_pathfinder.cxx  -o astar_pathfinder -lclanCore"
+// compile-command: "g++-3.2 -DTESTME -Wall -O2 astar_pathfinder.cpp  -o astar_pathfinder -lclanCore"
 // End:
 
 /* EOF */

Modified: trunk/src/background.cpp
===================================================================
--- trunk/src/background.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/background.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: background.cxx,v 1.14 2003/10/20 21:30:09 grumbel Exp $
+//  $Id: background.cpp,v 1.14 2003/10/20 21:30:09 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/display.h>
-#include "view.hxx"
-#include "background.hxx"
+#include "view.hpp"
+#include "background.hpp"
 
 Background::Background (const CL_Sprite& arg_sprite,
                         float arg_z_pos)

Modified: trunk/src/background.hpp
===================================================================
--- trunk/src/background.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/background.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: background.hxx,v 1.9 2003/10/20 21:30:09 grumbel Exp $
+//  $Id: background.hpp,v 1.9 2003/10/20 21:30:09 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -23,7 +23,7 @@
 #include <ClanLib/Display/sprite.h>
 #include <ClanLib/Display/surface.h>
 
-#include "game_obj.hxx"
+#include "game_obj.hpp"
 
 /** should be moved to groundmaps/.. and renamed to BaseGroundMap or
     something like that */

Modified: trunk/src/bfirst_pathfinder.cpp
===================================================================
--- trunk/src/bfirst_pathfinder.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/bfirst_pathfinder.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: bfirst_pathfinder.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: bfirst_pathfinder.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #include <ClanLib/core.h>
 #include <iostream>
 #include <unistd.h>
-#include "bfirst_pathfinder.hxx"
+#include "bfirst_pathfinder.hpp"
 
 BFirstPathfinder::BFirstPathfinder(Field<int>* arg_field)
   : field(*arg_field),
@@ -325,7 +325,7 @@
 #endif
 
 // Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 bfirst_pathfinder.cxx  -o bfirst_pathfinder -lclanCore"
+// compile-command: "g++-3.2 -DTESTME -Wall -O2 bfirst_pathfinder.cpp  -o bfirst_pathfinder -lclanCore"
 // End:
 
 /* EOF */

Modified: trunk/src/bfirst_pathfinder.hpp
===================================================================
--- trunk/src/bfirst_pathfinder.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/bfirst_pathfinder.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: bfirst_pathfinder.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: bfirst_pathfinder.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define HEADER_BFIRST_PATHFINDER_HXX
 
 #include <list>
-#include "field.hxx"
-#include "pathfinder.hxx"
+#include "field.hpp"
+#include "pathfinder.hpp"
 
 /** Breadth First Pathfinder */
 class BFirstPathfinder
@@ -72,7 +72,7 @@
 };
 
 // Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 bfirst_pathfinder.cxx  -o bfirst_pathfinder -lclanCore"
+// compile-command: "g++-3.2 -DTESTME -Wall -O2 bfirst_pathfinder.cpp  -o bfirst_pathfinder -lclanCore"
 // End:
 
 #endif

Modified: trunk/src/buildings/ammotent.cpp
===================================================================
--- trunk/src/buildings/ammotent.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/ammotent.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ammotent.cxx,v 1.12 2003/06/22 18:34:52 grumbel Exp $
+//  $Id: ammotent.cpp,v 1.12 2003/06/22 18:34:52 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,13 +18,13 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <math.h>
-#include "../color.hxx"
-#include "../game_obj_manager.hxx"
-#include "../radar.hxx"
-#include "../resource_manager.hxx"
-#include "../vehicles/vehicle.hxx"
-#include "../display/drawing_context.hxx"
-#include "ammotent.hxx"
+#include "../color.hpp"
+#include "../game_obj_manager.hpp"
+#include "../radar.hpp"
+#include "../resource_manager.hpp"
+#include "../vehicles/vehicle.hpp"
+#include "../display/drawing_context.hpp"
+#include "ammotent.hpp"
 
 Ammotent::Ammotent (const AList& lst)
   : Building (lst),

Modified: trunk/src/buildings/ammotent.hpp
===================================================================
--- trunk/src/buildings/ammotent.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/ammotent.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ammotent.hxx,v 1.11 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: ammotent.hpp,v 1.11 2003/06/22 19:22:56 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,8 +22,8 @@
 
 #include <ClanLib/Display/sprite.h>
 
-#include "../view.hxx"
-#include "building.hxx"
+#include "../view.hpp"
+#include "building.hpp"
 
 class Ammotent : public Building
 {

Modified: trunk/src/buildings/building.cpp
===================================================================
--- trunk/src/buildings/building.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/building.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building.cxx,v 1.6 2003/08/20 00:02:46 grumbel Exp $
+//  $Id: building.cpp,v 1.6 2003/08/20 00:02:46 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../property_set.hxx"
-#include "../radar.hxx"
-#include "building.hxx"
+#include "../property_set.hpp"
+#include "../radar.hpp"
+#include "building.hpp"
 
 Building::Building (const AList& lst)
   : x_pos (lst.get_int("x-pos")),

Modified: trunk/src/buildings/building.hpp
===================================================================
--- trunk/src/buildings/building.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/building.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building.hxx,v 1.13 2003/08/20 00:02:46 grumbel Exp $
+//  $Id: building.hpp,v 1.13 2003/08/20 00:02:46 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #ifndef BUILDING_HXX
 #define BUILDING_HXX
 
-#include "../alist.hxx"
+#include "../alist.hpp"
 
 // Begin: Forward declarations
 class GameWorld;

Modified: trunk/src/buildings/building_manager.cpp
===================================================================
--- trunk/src/buildings/building_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/building_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building_manager.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: building_manager.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,10 +17,10 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../game_world.hxx"
-#include "building_map.hxx"
-#include "building.hxx"
-#include "building_manager.hxx"
+#include "../game_world.hpp"
+#include "building_map.hpp"
+#include "building.hpp"
+#include "building_manager.hpp"
 
 BuildingManager* BuildingManager::current_ = 0;
 int BuildingManager::next_id = 1;

Modified: trunk/src/buildings/building_manager.hpp
===================================================================
--- trunk/src/buildings/building_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/building_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building_manager.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: building_manager.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/buildings/building_map.cpp
===================================================================
--- trunk/src/buildings/building_map.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/building_map.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building_map.cxx,v 1.9 2003/06/22 21:51:21 grumbel Exp $
+//  $Id: building_map.cpp,v 1.9 2003/06/22 21:51:21 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,16 +18,16 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../view.hxx"
-#include "building_map.hxx"
-#include "building.hxx"
+#include "../view.hpp"
+#include "building_map.hpp"
+#include "building.hpp"
 
-#include "tower.hxx"
-#include "fuelstation.hxx"
-#include "ammotent.hxx"
-#include "headquarter.hxx"
-#include "wall.hxx"
-#include "wall_door.hxx"
+#include "tower.hpp"
+#include "fuelstation.hpp"
+#include "ammotent.hpp"
+#include "headquarter.hpp"
+#include "wall.hpp"
+#include "wall_door.hpp"
 
 BuildingMap::BuildingMap(const BuildingMapData& data)
   : BuildingMapData (data)

Modified: trunk/src/buildings/building_map.hpp
===================================================================
--- trunk/src/buildings/building_map.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/building_map.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building_map.hxx,v 1.9 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: building_map.hpp,v 1.9 2003/06/22 19:22:56 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define BUILDINGMAP_HXX
 
 #include <vector>
-#include "building_map_data.hxx"
-#include "../game_obj.hxx"
+#include "building_map_data.hpp"
+#include "../game_obj.hpp"
 
 class FloatVector2d;
 class View;

Modified: trunk/src/buildings/building_map_data.cpp
===================================================================
--- trunk/src/buildings/building_map_data.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/building_map_data.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building_map_data.cxx,v 1.7 2003/06/22 21:51:21 grumbel Exp $
+//  $Id: building_map_data.cpp,v 1.7 2003/06/22 21:51:21 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,9 +18,9 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "building_map_data.hxx"
-#include "building_map.hxx"
-#include "../guile.hxx"
+#include "building_map_data.hpp"
+#include "building_map.hpp"
+#include "../guile.hpp"
 
 BuildingMapData::BuildingMapData (SCM desc)
 {

Modified: trunk/src/buildings/building_map_data.hpp
===================================================================
--- trunk/src/buildings/building_map_data.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/building_map_data.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building_map_data.hxx,v 1.6 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: building_map_data.hpp,v 1.6 2003/06/22 19:22:56 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,8 +22,8 @@
 
 #include <vector>
 #include <guile/gh.h>
-#include "../alist.hxx"
-#include "../game_obj_data.hxx"
+#include "../alist.hpp"
+#include "../game_obj_data.hpp"
 
 class BuildingMap;
 

Modified: trunk/src/buildings/building_type_manager.cpp
===================================================================
--- trunk/src/buildings/building_type_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/building_type_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building_type_manager.cxx,v 1.5 2003/06/23 09:56:39 grumbel Exp $
+//  $Id: building_type_manager.cpp,v 1.5 2003/06/23 09:56:39 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,13 +19,13 @@
 
 #include <iostream>
 
-#include "wall_door.hxx"
-#include "wall.hxx"
-#include "tower.hxx"
-#include "fuelstation.hxx"
-#include "ammotent.hxx"
+#include "wall_door.hpp"
+#include "wall.hpp"
+#include "tower.hpp"
+#include "fuelstation.hpp"
+#include "ammotent.hpp"
 
-#include "building_type_manager.hxx"
+#include "building_type_manager.hpp"
 
 BuildingTypeManager* BuildingTypeManager::current_ = 0;
 

Modified: trunk/src/buildings/building_type_manager.hpp
===================================================================
--- trunk/src/buildings/building_type_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/building_type_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building_type_manager.hxx,v 1.5 2003/08/20 00:15:10 grumbel Exp $
+//  $Id: building_type_manager.hpp,v 1.5 2003/08/20 00:15:10 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,8 +22,8 @@
 
 #include <vector>
 #include <assert.h>
-#include "../alist.hxx"
-#include "custom_building.hxx"
+#include "../alist.hpp"
+#include "custom_building.hpp"
 
 class Building;
 

Modified: trunk/src/buildings/custom_building.cpp
===================================================================
--- trunk/src/buildings/custom_building.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/custom_building.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: custom_building.cxx,v 1.9 2003/06/23 08:43:32 grumbel Exp $
+//  $Id: custom_building.cpp,v 1.9 2003/06/23 08:43:32 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../alist.hxx"
-#include "../resource_manager.hxx"
-#include "custom_building.hxx"
+#include "../alist.hpp"
+#include "../resource_manager.hpp"
+#include "custom_building.hpp"
 
 CustomBuilding::CustomBuilding(const AList& type, const AList& lst)
   : Building(lst)

Modified: trunk/src/buildings/custom_building.hpp
===================================================================
--- trunk/src/buildings/custom_building.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/custom_building.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: custom_building.hxx,v 1.6 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: custom_building.hpp,v 1.6 2003/06/22 19:22:56 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define HEADER_CUSTOM_BUILDING_HXX
 
 #include <ClanLib/Display/sprite.h>
-#include "../energie.hxx"
-#include "building.hxx"
+#include "../energie.hpp"
+#include "building.hpp"
 
 class AList;
 

Modified: trunk/src/buildings/fuelstation.cpp
===================================================================
--- trunk/src/buildings/fuelstation.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/fuelstation.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: fuelstation.cxx,v 1.12 2003/06/22 18:34:52 grumbel Exp $
+//  $Id: fuelstation.cpp,v 1.12 2003/06/22 18:34:52 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,13 +18,13 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <cmath>
-#include "../game_obj_manager.hxx"
-#include "../color.hxx"
-#include "../radar.hxx"
-#include "../vehicles/vehicle.hxx"
-#include "../resource_manager.hxx"
-#include "../display/drawing_context.hxx"
-#include "fuelstation.hxx"
+#include "../game_obj_manager.hpp"
+#include "../color.hpp"
+#include "../radar.hpp"
+#include "../vehicles/vehicle.hpp"
+#include "../resource_manager.hpp"
+#include "../display/drawing_context.hpp"
+#include "fuelstation.hpp"
 
 Fuelstation::Fuelstation(const AList& lst)
   : Building(lst),

Modified: trunk/src/buildings/fuelstation.hpp
===================================================================
--- trunk/src/buildings/fuelstation.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/fuelstation.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: fuelstation.hxx,v 1.11 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: fuelstation.hpp,v 1.11 2003/06/22 19:22:56 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define FUELSTATION_HH
 
 #include <ClanLib/Display/sprite.h>
-#include "../view.hxx"
-#include "building.hxx"
+#include "../view.hpp"
+#include "building.hpp"
 
 class Fuelstation
   : public Building

Modified: trunk/src/buildings/headquarter.cpp
===================================================================
--- trunk/src/buildings/headquarter.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/headquarter.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: headquarter.cxx,v 1.9 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: headquarter.cpp,v 1.9 2003/06/22 19:22:56 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,10 +17,10 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../radar.hxx"
-#include "../explosion.hxx"
-#include "../resource_manager.hxx"
-#include "headquarter.hxx"
+#include "../radar.hpp"
+#include "../explosion.hpp"
+#include "../resource_manager.hpp"
+#include "headquarter.hpp"
 
 Headquarter::Headquarter (const AList& lst)
   : Building (lst),

Modified: trunk/src/buildings/headquarter.hpp
===================================================================
--- trunk/src/buildings/headquarter.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/headquarter.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: headquarter.hxx,v 1.10 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: headquarter.hpp,v 1.10 2003/06/22 19:22:56 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef HEADQUARTER_HH
 #define HEADQUARTER_HH
 
-#include "../energie.hxx"
-#include "building.hxx"
-#include "../projectile.hxx"
+#include "../energie.hpp"
+#include "building.hpp"
+#include "../projectile.hpp"
 
 class Headquarter : public Building
 {

Modified: trunk/src/buildings/tower.cpp
===================================================================
--- trunk/src/buildings/tower.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/tower.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tower.cxx,v 1.12 2003/10/20 21:30:09 grumbel Exp $
+//  $Id: tower.cpp,v 1.12 2003/10/20 21:30:09 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,13 +18,13 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../property_set.hxx"
-#include "../radar.hxx"
-#include "../resource_manager.hxx"
-#include "../input/controller.hxx"
-#include "../math.hxx"
-#include "../explosion.hxx"
-#include "tower.hxx"
+#include "../property_set.hpp"
+#include "../radar.hpp"
+#include "../resource_manager.hpp"
+#include "../input/controller.hpp"
+#include "../math.hpp"
+#include "../explosion.hpp"
+#include "tower.hpp"
 
 Tower::Tower(const AList& lst)
   : Building(lst),

Modified: trunk/src/buildings/tower.hpp
===================================================================
--- trunk/src/buildings/tower.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/tower.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tower.hxx,v 1.11 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: tower.hpp,v 1.11 2003/06/22 19:22:56 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,9 +21,9 @@
 #define TOWER_HXX
 
 #include <ClanLib/Display/sprite.h>
-#include "../energie.hxx"
-#include "../unit.hxx"
-#include "building.hxx"
+#include "../energie.hpp"
+#include "../unit.hpp"
+#include "building.hpp"
 
 class Controller;
 class GameWorld;

Modified: trunk/src/buildings/tower_ai.cpp
===================================================================
--- trunk/src/buildings/tower_ai.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/tower_ai.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tower_ai.cxx,v 1.1 2003/06/18 13:04:21 grumbel Exp $
+//  $Id: tower_ai.cpp,v 1.1 2003/06/18 13:04:21 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,11 +17,11 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../math.hxx"
-#include "../player.hxx"
-#include "../unit.hxx"
-#include "../property_set.hxx"
-#include "tower_ai.hxx"
+#include "../math.hpp"
+#include "../player.hpp"
+#include "../unit.hpp"
+#include "../property_set.hpp"
+#include "tower_ai.hpp"
 
 extern Player*  player;
 

Modified: trunk/src/buildings/tower_ai.hpp
===================================================================
--- trunk/src/buildings/tower_ai.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/tower_ai.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tower_ai.hxx,v 1.1 2003/06/18 13:04:21 grumbel Exp $
+//  $Id: tower_ai.hpp,v 1.1 2003/06/18 13:04:21 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef HEADER_TOWER_AI_HXX
 #define HEADER_TOWER_AI_HXX
 
-#include "../input/controller.hxx"
-#include "../ai.hxx"
-#include "tower.hxx"
+#include "../input/controller.hpp"
+#include "../ai.hpp"
+#include "tower.hpp"
 
 /** */
 class TowerAI : public AI

Modified: trunk/src/buildings/wall.cpp
===================================================================
--- trunk/src/buildings/wall.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/wall.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: wall.cxx,v 1.9 2003/06/23 09:56:39 grumbel Exp $
+//  $Id: wall.cpp,v 1.9 2003/06/23 09:56:39 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,11 +17,11 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../property_set.hxx"
-#include "../radar.hxx"
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "wall.hxx"
+#include "../property_set.hpp"
+#include "../radar.hpp"
+#include "../view.hpp"
+#include "../resource_manager.hpp"
+#include "wall.hpp"
 
 Wall::Wall (const AList& lst)
   : Building(lst),

Modified: trunk/src/buildings/wall.hpp
===================================================================
--- trunk/src/buildings/wall.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/wall.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: wall.hxx,v 1.11 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: wall.hpp,v 1.11 2003/06/22 19:22:56 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,9 +21,9 @@
 #define HEADER_FEUERKRAFT_WALL_HXX
 
 #include <ClanLib/Display/sprite.h>
-#include "../vector2d.hxx"
+#include "../vector2d.hpp"
 
-#include "building.hxx"
+#include "building.hpp"
 
 class Wall : public Building
 {

Modified: trunk/src/buildings/wall_door.cpp
===================================================================
--- trunk/src/buildings/wall_door.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/wall_door.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: wall_door.cxx,v 1.10 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: wall_door.cpp,v 1.10 2003/06/22 19:22:56 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,11 +17,11 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../vehicles/vehicle.hxx"
-#include "../view.hxx"
-#include "../game_obj_manager.hxx"
-#include "../resource_manager.hxx"
-#include "wall_door.hxx"
+#include "../vehicles/vehicle.hpp"
+#include "../view.hpp"
+#include "../game_obj_manager.hpp"
+#include "../resource_manager.hpp"
+#include "wall_door.hpp"
 
 WallDoor::WallDoor(const AList& lst)
   : Building(lst)

Modified: trunk/src/buildings/wall_door.hpp
===================================================================
--- trunk/src/buildings/wall_door.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/buildings/wall_door.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: wall_door.hxx,v 1.10 2003/06/22 19:22:56 grumbel Exp $
+//  $Id: wall_door.hpp,v 1.10 2003/06/22 19:22:56 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -23,8 +23,8 @@
 #include <ClanLib/Display/sprite.h>
 #include <ClanLib/Core/Math/cl_vector.h>
 
-#include "../vector2d.hxx"
-#include "building.hxx"
+#include "../vector2d.hpp"
+#include "building.hpp"
 
 class View;
 class Radar;

Modified: trunk/src/collision_manager.cpp
===================================================================
--- trunk/src/collision_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/collision_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: collision_manager.cxx,v 1.9 2003/06/18 14:38:28 grumbel Exp $
+//  $Id: collision_manager.cpp,v 1.9 2003/06/18 14:38:28 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,15 +20,15 @@
 #include <iostream>
 #include <assert.h>
 #include <math.h>
-#include "math.hxx"
-#include "color.hxx"
-#include "view.hxx"
-#include "game_world.hxx"
-#include "buildings/building.hxx"
-#include "buildings/building_map.hxx"
-#include "collision_manager.hxx"
-#include "game_obj_manager.hxx"
-#include "display/drawing_context.hxx"
+#include "math.hpp"
+#include "color.hpp"
+#include "view.hpp"
+#include "game_world.hpp"
+#include "buildings/building.hpp"
+#include "buildings/building_map.hpp"
+#include "collision_manager.hpp"
+#include "game_obj_manager.hpp"
+#include "display/drawing_context.hpp"
 
 CollisionManager* CollisionManager::current_ = 0;
 

Modified: trunk/src/collision_manager.hpp
===================================================================
--- trunk/src/collision_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/collision_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: collision_manager.hxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: collision_manager.hpp,v 1.5 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define HEADER_FEUERKRAFT_COLLISION_MANAGER_HXX
 
 #include <vector>
-#include "math.hxx"
+#include "math.hpp"
 
 class View;
 

Modified: trunk/src/color.cpp
===================================================================
--- trunk/src/color.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/color.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: color.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: color.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "color.hxx"
+#include "color.hpp"
 
 Color::Color()
 {

Modified: trunk/src/color.hpp
===================================================================
--- trunk/src/color.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/color.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: color.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: color.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/command_line_arguments.cpp
===================================================================
--- trunk/src/command_line_arguments.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/command_line_arguments.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: command_line_arguments.cxx,v 1.7 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: command_line_arguments.cpp,v 1.7 2003/10/31 23:24:41 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #include <iostream>
 #include <stdlib.h>
 #include <ClanLib/Core/System/command_line.h>
-#include "command_line_arguments.hxx"
+#include "command_line_arguments.hpp"
 
 CommandLineArguments::CommandLineArguments()
 {

Modified: trunk/src/command_line_arguments.hpp
===================================================================
--- trunk/src/command_line_arguments.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/command_line_arguments.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: command_line_arguments.hxx,v 1.5 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: command_line_arguments.hpp,v 1.5 2003/10/31 23:24:41 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/communication_dialog.cpp
===================================================================
--- trunk/src/communication_dialog.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/communication_dialog.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -19,12 +19,12 @@
 
 #include <ClanLib/Display/display.h>
 #include <ClanLib/Core/System/system.h>
-#include "fonts.hxx"
-#include "unit.hxx"
-#include "view.hxx"
-#include "resource_manager.hxx"
-#include "game_obj_manager.hxx"
-#include "communication_dialog.hxx"
+#include "fonts.hpp"
+#include "unit.hpp"
+#include "view.hpp"
+#include "resource_manager.hpp"
+#include "game_obj_manager.hpp"
+#include "communication_dialog.hpp"
 
 CommunicationDialog* CommunicationDialog::current_ = 0;
 

Modified: trunk/src/communication_dialog.hpp
===================================================================
--- trunk/src/communication_dialog.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/communication_dialog.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -22,7 +22,7 @@
 
 #include <map>
 #include <ClanLib/Display/sprite.h>
-#include "gui_obj.hxx"
+#include "gui_obj.hpp"
 
 /** */
 class CommunicationDialog : public GuiObj

Modified: trunk/src/controller_def.cpp
===================================================================
--- trunk/src/controller_def.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/controller_def.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "controller_def.hxx"
+#include "controller_def.hpp"
 
 int
 ControllerDef::get_button_count()

Modified: trunk/src/dijkstra_pathfinder.cpp
===================================================================
--- trunk/src/dijkstra_pathfinder.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/dijkstra_pathfinder.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: dijkstra_pathfinder.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: dijkstra_pathfinder.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #include <ClanLib/core.h>
 #include <iostream>
 #include <unistd.h>
-#include "dijkstra_pathfinder.hxx"
+#include "dijkstra_pathfinder.hpp"
 
 DijkstraPathfinder::DijkstraPathfinder(Field<int>* arg_field)
   : field(*arg_field),
@@ -358,7 +358,7 @@
 #endif
 
 // Local Variables:
-// compile-command: "g++-3.2 -DTESTME -g -Wall -O2 dijkstra_pathfinder.cxx  -o dijkstra_pathfinder -lclanCore"
+// compile-command: "g++-3.2 -DTESTME -g -Wall -O2 dijkstra_pathfinder.cpp  -o dijkstra_pathfinder -lclanCore"
 // End:
 
 /* EOF */

Modified: trunk/src/dijkstra_pathfinder.hpp
===================================================================
--- trunk/src/dijkstra_pathfinder.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/dijkstra_pathfinder.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: dijkstra_pathfinder.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: dijkstra_pathfinder.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,8 +22,8 @@
 
 #include <queue>
 #include <vector>
-#include "field.hxx"
-#include "pathfinder.hxx"
+#include "field.hpp"
+#include "pathfinder.hpp"
 
 /** Dijkstra Pathfinder */
 class DijkstraPathfinder
@@ -94,7 +94,7 @@
 #endif
 
 // Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 dijkstra_pathfinder.cxx  -o dijkstra_pathfinder -lclanCore"
+// compile-command: "g++-3.2 -DTESTME -Wall -O2 dijkstra_pathfinder.cpp  -o dijkstra_pathfinder -lclanCore"
 // End:
 
 /* EOF */

Modified: trunk/src/display/drawing_context.cpp
===================================================================
--- trunk/src/display/drawing_context.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/display/drawing_context.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -21,7 +21,7 @@
 #include <ClanLib/Display/sprite.h>
 #include <ClanLib/Display/graphic_context.h>
 #include <iostream>
-#include "drawing_context.hxx"
+#include "drawing_context.hpp"
 
 struct DrawingRequestsSorter
 {

Modified: trunk/src/display/drawing_context.hpp
===================================================================
--- trunk/src/display/drawing_context.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/display/drawing_context.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -23,7 +23,7 @@
 #include <ClanLib/Core/Math/rect.h>
 #include <ClanLib/Display/color.h>
 #include <vector>
-#include "drawing_request.hxx"
+#include "drawing_request.hpp"
 
 class CL_Sprite;
 

Modified: trunk/src/display/scene_context.cpp
===================================================================
--- trunk/src/display/scene_context.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/display/scene_context.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -19,7 +19,7 @@
 
 #include <ClanLib/display.h>
 #include <ClanLib/gl.h>
-#include "scene_context.hxx"
+#include "scene_context.hpp"
 
 class SceneContextImpl
 {

Modified: trunk/src/display/scene_context.hpp
===================================================================
--- trunk/src/display/scene_context.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/display/scene_context.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -20,7 +20,7 @@
 #ifndef HEADER_SCENE_CONTEXT_HXX
 #define HEADER_SCENE_CONTEXT_HXX
 
-#include "drawing_context.hxx"
+#include "drawing_context.hpp"
 
 class SceneContextImpl;
 

Modified: trunk/src/display_manager.cpp
===================================================================
--- trunk/src/display_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/display_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: display_manager.cxx,v 1.6 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: display_manager.cpp,v 1.6 2003/10/31 23:24:41 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,15 +18,15 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/display.h>
-#include "assert.hxx"
-#include "help.hxx"
-#include "radar.hxx"
-#include "menu.hxx"
-#include "level_map.hxx"
-#include "vehicle_status.hxx"
-#include "message_buffer.hxx"
-#include "communication_dialog.hxx"
-#include "display_manager.hxx"
+#include "assert.hpp"
+#include "help.hpp"
+#include "radar.hpp"
+#include "menu.hpp"
+#include "level_map.hpp"
+#include "vehicle_status.hpp"
+#include "message_buffer.hpp"
+#include "communication_dialog.hpp"
+#include "display_manager.hpp"
 
 extern Player*  player;
 DisplayManager* DisplayManager::current_ = 0;

Modified: trunk/src/display_manager.hpp
===================================================================
--- trunk/src/display_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/display_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: display_manager.hxx,v 1.5 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: display_manager.hpp,v 1.5 2003/10/31 23:24:41 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define HEADER_DISPLAY_MANAGER_HXX
 
 #include <vector>
-#include "screen.hxx"
+#include "screen.hpp"
 
 class GuiObj;
 class Menu;

Modified: trunk/src/draw_circle.cpp
===================================================================
--- trunk/src/draw_circle.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/draw_circle.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: draw_circle.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: draw_circle.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,7 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "draw_circle.hxx"
+#include "draw_circle.hpp"
 
 int main()
 {
@@ -48,7 +48,7 @@
 }
 
 // Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 draw_circle.cxx  -o draw_circle -lclanCore"
+// compile-command: "g++-3.2 -DTESTME -Wall -O2 draw_circle.cpp  -o draw_circle -lclanCore"
 // End:
 
 /* EOF */

Modified: trunk/src/draw_circle.hpp
===================================================================
--- trunk/src/draw_circle.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/draw_circle.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: draw_circle.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: draw_circle.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define HEADER_DRAW_CIRCLE_HXX
 
 #include <stdlib.h>
-#include "math.hxx"
-#include "field.hxx"
+#include "math.hpp"
+#include "field.hpp"
 
 // FIXME: no clipping
 void draw_fill_circle(Field<int>& field, int center_x, int center_y, int radius)
@@ -98,7 +98,7 @@
 #endif
 
 // Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 draw_circle.cxx  -o draw_circle -lclanCore"
+// compile-command: "g++-3.2 -DTESTME -Wall -O2 draw_circle.cpp  -o draw_circle -lclanCore"
 // End:
 
 /* EOF */

Modified: trunk/src/editor/editor.cpp
===================================================================
--- trunk/src/editor/editor.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/editor/editor.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: editor.cxx,v 1.1 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: editor.cpp,v 1.1 2003/06/20 20:54:23 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "editor.hxx"
+#include "editor.hpp"
 
 
 

Modified: trunk/src/editor/editor.hpp
===================================================================
--- trunk/src/editor/editor.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/editor/editor.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: editor.hxx,v 1.1 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: editor.hpp,v 1.1 2003/06/20 20:54:23 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/energie.cpp
===================================================================
--- trunk/src/energie.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/energie.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: energie.cxx,v 1.8 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: energie.cpp,v 1.8 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "color.hxx"
-#include "view.hxx"
-#include "energie.hxx"
+#include "color.hpp"
+#include "view.hpp"
+#include "energie.hpp"
 
 Energie::Energie ()
 {

Modified: trunk/src/energie.hpp
===================================================================
--- trunk/src/energie.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/energie.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: energie.hxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: energie.hpp,v 1.7 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,7 +22,7 @@
 
 #include <ClanLib/Core/System/system.h>
 
-#include "view.hxx"
+#include "view.hpp"
 
 class Energie
 {

Modified: trunk/src/explosion.cpp
===================================================================
--- trunk/src/explosion.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/explosion.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: explosion.cxx,v 1.10 2003/06/06 09:49:00 grumbel Exp $
+//  $Id: explosion.cpp,v 1.10 2003/06/06 09:49:00 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,11 +17,11 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "shockwave.hxx"
-#include "explosion.hxx"
-#include "generic/random.hxx"
-#include "sound/sound.hxx"
-#include "particles/explosion_particle.hxx"
+#include "shockwave.hpp"
+#include "explosion.hpp"
+#include "generic/random.hpp"
+#include "sound/sound.hpp"
+#include "particles/explosion_particle.hpp"
 
 Explosion::Explosion (const FloatVector2d& arg_pos, Size arg_size) 
   : is_drawn (false),

Modified: trunk/src/explosion.hpp
===================================================================
--- trunk/src/explosion.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/explosion.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: explosion.hxx,v 1.8 2003/06/06 09:49:00 grumbel Exp $
+//  $Id: explosion.hpp,v 1.8 2003/06/06 09:49:00 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef EXPLOSION_HH
 #define EXPLOSION_HH
 
-#include "vector2d.hxx"
-#include "game_obj.hxx"
-#include "resource_manager.hxx"
+#include "vector2d.hpp"
+#include "game_obj.hpp"
+#include "resource_manager.hpp"
 
 /** Particle emmitter for ExplosionParticles */
 class Explosion : public GameObj

Modified: trunk/src/feuerkraft.cpp
===================================================================
--- trunk/src/feuerkraft.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/feuerkraft.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: feuerkraft.cxx,v 1.55 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: feuerkraft.cpp,v 1.55 2003/10/31 23:24:41 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -30,18 +30,18 @@
 #include <libguile.h>
 #include <time.h>
 
-#include "feuerkraft_error.hxx"
-#include "fonts.hxx"
-#include "input/input_manager.hxx"
-#include "game_session_manager.hxx"
-#include "keyboard_manager.hxx"
-#include "resource_manager.hxx"
-#include "path_manager.hxx"
-#include "globals.hxx"
-#include "sound/sound.hxx"
-#include "command_line_arguments.hxx"
-#include "guile.hxx"
-#include "feuerkraft.hxx"
+#include "feuerkraft_error.hpp"
+#include "fonts.hpp"
+#include "input/input_manager.hpp"
+#include "game_session_manager.hpp"
+#include "keyboard_manager.hpp"
+#include "resource_manager.hpp"
+#include "path_manager.hpp"
+#include "globals.hpp"
+#include "sound/sound.hpp"
+#include "command_line_arguments.hpp"
+#include "guile.hpp"
+#include "feuerkraft.hpp"
 
 //#define WITH_STATIC_READLINE 1
 

Modified: trunk/src/feuerkraft.hpp
===================================================================
--- trunk/src/feuerkraft.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/feuerkraft.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: feuerkraft.hxx,v 1.8 2003/06/09 20:27:31 grumbel Exp $
+//  $Id: feuerkraft.hpp,v 1.8 2003/06/09 20:27:31 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -75,7 +75,7 @@
    deleted by \c delete are named SomeObject*, while pointers which
    only hold references to objects managed and allocated elsewhere are
    named SomeObjectPtr. typedef for SomeObjectPtr should be in the
-   some_object.hxx file.
+   some_object.hpp file.
 */
 
 /** Command Line arguments in a parsed and easily accessible form,

Modified: trunk/src/field.hpp
===================================================================
--- trunk/src/field.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/field.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: field.hxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: field.hpp,v 1.5 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/fonts.cpp
===================================================================
--- trunk/src/fonts.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/fonts.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: fonts.cxx,v 1.3 2003/06/05 21:17:11 grumbel Exp $
+//  $Id: fonts.cpp,v 1.3 2003/06/05 21:17:11 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,8 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "resource_manager.hxx"
-#include "fonts.hxx"
+#include "resource_manager.hpp"
+#include "fonts.hpp"
 
 namespace Fonts {
 

Modified: trunk/src/fonts.hpp
===================================================================
--- trunk/src/fonts.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/fonts.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: fonts.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: fonts.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/game_delta.cpp
===================================================================
--- trunk/src/game_delta.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_delta.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_delta.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: game_delta.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "game_delta.hxx"
+#include "game_delta.hpp"
 
 float 
 GameDelta::get_time ()

Modified: trunk/src/game_delta.hpp
===================================================================
--- trunk/src/game_delta.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_delta.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_delta.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: game_delta.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/game_mission.cpp
===================================================================
--- trunk/src/game_mission.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_mission.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_mission.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: game_mission.cpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,9 +19,9 @@
 
 #include <guile/gh.h>
 #include <iostream>
-#include "guile.hxx"
-#include "game_mission.hxx"
-#include "game_world.hxx"
+#include "guile.hpp"
+#include "game_mission.hpp"
+#include "game_world.hpp"
 
 GameMission::GameMission (SCM desc)
   : creation_time (0),

Modified: trunk/src/game_mission.hpp
===================================================================
--- trunk/src/game_mission.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_mission.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_mission.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: game_mission.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/game_obj.cpp
===================================================================
--- trunk/src/game_obj.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_obj.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_obj.cxx,v 1.6 2003/06/18 13:03:13 grumbel Exp $
+//  $Id: game_obj.cpp,v 1.6 2003/06/18 13:03:13 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "property_set.hxx"
-#include "game_obj.hxx"
+#include "property_set.hpp"
+#include "game_obj.hpp"
 
 GameObj::GameObj()
   : id(-1),

Modified: trunk/src/game_obj.hpp
===================================================================
--- trunk/src/game_obj.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_obj.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_obj.hxx,v 1.13 2003/08/20 00:15:10 grumbel Exp $
+//  $Id: game_obj.hpp,v 1.13 2003/08/20 00:15:10 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define GAMEOBJ_HH
 
 #include <assert.h>
-#include "game_world.hxx"
+#include "game_world.hpp"
 
 class Building;
 class Radar;

Modified: trunk/src/game_obj_data.hpp
===================================================================
--- trunk/src/game_obj_data.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_obj_data.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_obj_data.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: game_obj_data.hpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/game_obj_data_factory.cpp
===================================================================
--- trunk/src/game_obj_data_factory.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_obj_data_factory.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_obj_data_factory.cxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: game_obj_data_factory.cpp,v 1.6 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <guile/gh.h>
-#include "guile.hxx"
-#include "game_obj_data_factory.hxx"
+#include "guile.hpp"
+#include "game_obj_data_factory.hpp"
 
 GameObjData*
 GameObjDataFactory::create (SCM symbol, SCM data)

Modified: trunk/src/game_obj_data_factory.hpp
===================================================================
--- trunk/src/game_obj_data_factory.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_obj_data_factory.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_obj_data_factory.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: game_obj_data_factory.hpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/game_obj_factory.cpp
===================================================================
--- trunk/src/game_obj_factory.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_obj_factory.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_obj_factory.cxx,v 1.10 2003/06/22 17:22:47 grumbel Exp $
+//  $Id: game_obj_factory.cpp,v 1.10 2003/06/22 17:22:47 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,19 +18,19 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "property_set.hxx"
+#include "property_set.hpp"
 
 // GameObjs
-#include "vehicles/tank.hxx"
-#include "vehicles/helicopter.hxx"
-#include "tree.hxx"
-#include "marker.hxx"
-#include "mine.hxx"
-#include "soldier.hxx"
-#include "satchel_charge.hxx"
+#include "vehicles/tank.hpp"
+#include "vehicles/helicopter.hpp"
+#include "tree.hpp"
+#include "marker.hpp"
+#include "mine.hpp"
+#include "soldier.hpp"
+#include "satchel_charge.hpp"
 
-#include "game_obj.hxx"
-#include "game_obj_factory.hxx"
+#include "game_obj.hpp"
+#include "game_obj_factory.hpp"
 
 GameObjFactory* GameObjFactory::instance_ = 0;
 

Modified: trunk/src/game_obj_factory.hpp
===================================================================
--- trunk/src/game_obj_factory.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_obj_factory.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_obj_factory.hxx,v 1.5 2003/06/22 17:22:47 grumbel Exp $
+//  $Id: game_obj_factory.hpp,v 1.5 2003/06/22 17:22:47 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define HEADER_GAME_OBJ_FACTORY_HXX
 
 #include <vector>
-#include "alist.hxx"
+#include "alist.hpp"
 
 class GameObj;
 

Modified: trunk/src/game_obj_manager.cpp
===================================================================
--- trunk/src/game_obj_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_obj_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_obj_manager.cxx,v 1.4 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: game_obj_manager.cpp,v 1.4 2003/06/20 20:54:23 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "assert.hxx"
-#include "game_obj.hxx"
-#include "game_obj_manager.hxx"
+#include "assert.hpp"
+#include "game_obj.hpp"
+#include "game_obj_manager.hpp"
 
 GameObjManager* GameObjManager::current_manager = 0;
 

Modified: trunk/src/game_obj_manager.hpp
===================================================================
--- trunk/src/game_obj_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_obj_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_obj_manager.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: game_obj_manager.hpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_session.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_session.cxx,v 1.6 2003/06/23 09:04:10 grumbel Exp $
+//  $Id: game_session.cpp,v 1.6 2003/06/23 09:04:10 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -27,39 +27,39 @@
 #include <iostream>
 #include <assert.h>
 
-#include "globals.hxx"
-#include "particles/explosion_particle.hxx"
-#include "menu.hxx"
-#include "groundmap/ground_map.hxx"
-#include "player_view.hxx"
-#include "input/input_manager.hxx"
-#include "soldier.hxx"
-#include "game_obj_factory.hxx"
+#include "globals.hpp"
+#include "particles/explosion_particle.hpp"
+#include "menu.hpp"
+#include "groundmap/ground_map.hpp"
+#include "player_view.hpp"
+#include "input/input_manager.hpp"
+#include "soldier.hpp"
+#include "game_obj_factory.hpp"
 
-#include "vehicles/tank.hxx"
-#include "vehicles/helicopter.hxx"
+#include "vehicles/tank.hpp"
+#include "vehicles/helicopter.hpp"
 
-#include "background.hxx"
-#include "robot_tank.hxx"
-#include "view.hxx"
-#include "display_manager.hxx"
-#include "buildings/building_type_manager.hxx"
-#include "scripting/clanlib_commands.hxx"
-#include "scripting/menu_commands.hxx"
-#include "collision_manager.hxx"
-#include "sexpr_world_reader.hxx"
-#include "guile.hxx"
-#include "soldier_ai.hxx"
-#include "ai_manager.hxx"
-#include "ai_vehicle.hxx"
-#include "vehicle_ai.hxx"
-#include "output_world_builder.hxx"
-#include "game_world.hxx"
-#include "player.hxx"
-#include "path_manager.hxx"
-#include "command_line_arguments.hxx"
-#include "screenshot.hxx"
-#include "game_session.hxx"
+#include "background.hpp"
+#include "robot_tank.hpp"
+#include "view.hpp"
+#include "display_manager.hpp"
+#include "buildings/building_type_manager.hpp"
+#include "scripting/clanlib_commands.hpp"
+#include "scripting/menu_commands.hpp"
+#include "collision_manager.hpp"
+#include "sexpr_world_reader.hpp"
+#include "guile.hpp"
+#include "soldier_ai.hpp"
+#include "ai_manager.hpp"
+#include "ai_vehicle.hpp"
+#include "vehicle_ai.hpp"
+#include "output_world_builder.hpp"
+#include "game_world.hpp"
+#include "player.hpp"
+#include "path_manager.hpp"
+#include "command_line_arguments.hpp"
+#include "screenshot.hpp"
+#include "game_session.hpp"
 
 // FIXME: Replace this with a PlayerManager class or something similar
 Player*  player;

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_session.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_session.hxx,v 1.1 2003/06/18 13:04:21 grumbel Exp $
+//  $Id: game_session.hpp,v 1.1 2003/06/18 13:04:21 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/game_session_manager.cpp
===================================================================
--- trunk/src/game_session_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_session_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_session_manager.cxx,v 1.1 2003/06/10 00:38:50 grumbel Exp $
+//  $Id: game_session_manager.cpp,v 1.1 2003/06/10 00:38:50 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,9 +18,9 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "path_manager.hxx"
-#include "game_session.hxx"
-#include "game_session_manager.hxx"
+#include "path_manager.hpp"
+#include "game_session.hpp"
+#include "game_session_manager.hpp"
 
 GameSessionManager* GameSessionManager::instance_ = 0;
 

Modified: trunk/src/game_session_manager.hpp
===================================================================
--- trunk/src/game_session_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_session_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_session_manager.hxx,v 1.1 2003/06/10 00:38:50 grumbel Exp $
+//  $Id: game_session_manager.hpp,v 1.1 2003/06/10 00:38:50 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/game_world.cpp
===================================================================
--- trunk/src/game_world.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_world.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_world.cxx,v 1.20 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: game_world.cpp,v 1.20 2003/10/31 23:24:41 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,21 +21,21 @@
 #include <algorithm>
 #include <functional>
 
-#include "mine.hxx"
-#include "vehicles/tank.hxx"
-#include "projectile.hxx"
-#include "game_world.hxx"
-#include "groundmap/ground_map_data.hxx"
-#include "groundmap/ground_map.hxx"
-#include "game_obj.hxx"
-#include "math.hxx"
-#include "game_obj_data.hxx"
-#include "game_obj_manager.hxx"
-#include "view.hxx"
-#include "path_manager.hxx"
-#include "trigger_manager.hxx"
-#include "buildings/building_manager.hxx"
-#include "buildings/building_map.hxx"
+#include "mine.hpp"
+#include "vehicles/tank.hpp"
+#include "projectile.hpp"
+#include "game_world.hpp"
+#include "groundmap/ground_map_data.hpp"
+#include "groundmap/ground_map.hpp"
+#include "game_obj.hpp"
+#include "math.hpp"
+#include "game_obj_data.hpp"
+#include "game_obj_manager.hpp"
+#include "view.hpp"
+#include "path_manager.hpp"
+#include "trigger_manager.hpp"
+#include "buildings/building_manager.hpp"
+#include "buildings/building_map.hpp"
 
 GameWorld* GameWorld::current_world = 0;
 

Modified: trunk/src/game_world.hpp
===================================================================
--- trunk/src/game_world.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_world.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_world.hxx,v 1.13 2003/06/22 21:51:21 grumbel Exp $
+//  $Id: game_world.hpp,v 1.13 2003/06/22 21:51:21 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,8 +20,8 @@
 #ifndef GAMEWORLD_HH
 #define GAMEWORLD_HH
 
-#include "vector2d.hxx"
-#include "game_world_data.hxx"
+#include "vector2d.hpp"
+#include "game_world_data.hpp"
 
 class View;
 class LevelMap;

Modified: trunk/src/game_world_builder.cpp
===================================================================
--- trunk/src/game_world_builder.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_world_builder.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_world_builder.cxx,v 1.3 2003/06/22 21:51:21 grumbel Exp $
+//  $Id: game_world_builder.cpp,v 1.3 2003/06/22 21:51:21 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "game_world.hxx"
-#include "game_world_builder.hxx"
+#include "game_world.hpp"
+#include "game_world_builder.hpp"
 
 GameWorldBuilder::GameWorldBuilder()
 {

Modified: trunk/src/game_world_builder.hpp
===================================================================
--- trunk/src/game_world_builder.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_world_builder.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_world_builder.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: game_world_builder.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #ifndef HEADER_GAME_WORLD_BUILDER_HXX
 #define HEADER_GAME_WORLD_BUILDER_HXX
 
-#include "world_builder.hxx"
+#include "world_builder.hpp"
 
 class GameWorld;
 

Modified: trunk/src/game_world_data.cpp
===================================================================
--- trunk/src/game_world_data.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_world_data.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_world_data.cxx,v 1.7 2003/08/20 00:15:10 grumbel Exp $
+//  $Id: game_world_data.cpp,v 1.7 2003/08/20 00:15:10 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,14 +20,14 @@
 #include <typeinfo>
 #include <assert.h>
 #include <iostream>
-#include "guile.hxx"
-#include "game_world.hxx"
-#include "buildings/building_map_data.hxx"
-#include "groundmap/ground_map_data.hxx"
-#include "game_obj_data.hxx"
-#include "groundmap/ground_map_data_factory.hxx"
-#include "game_obj_data_factory.hxx"
-#include "game_world_data.hxx"
+#include "guile.hpp"
+#include "game_world.hpp"
+#include "buildings/building_map_data.hpp"
+#include "groundmap/ground_map_data.hpp"
+#include "game_obj_data.hpp"
+#include "groundmap/ground_map_data_factory.hpp"
+#include "game_obj_data_factory.hpp"
+#include "game_world_data.hpp"
 
 GameWorldData::GameWorldData (SCM desc)
   : needs_delete (true)

Modified: trunk/src/game_world_data.hpp
===================================================================
--- trunk/src/game_world_data.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/game_world_data.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_world_data.hxx,v 1.5 2003/06/22 21:51:21 grumbel Exp $
+//  $Id: game_world_data.hpp,v 1.5 2003/06/22 21:51:21 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/generic/random.cpp
===================================================================
--- trunk/src/generic/random.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/generic/random.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: random.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: random.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,7 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <stdlib.h>
-#include "random.hxx"
+#include "random.hpp"
 
 float
 Random::frand (float max)

Modified: trunk/src/generic/random.hpp
===================================================================
--- trunk/src/generic/random.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/generic/random.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: random.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: random.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/geometry.cpp
===================================================================
--- trunk/src/geometry.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/geometry.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: geometry.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: geometry.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "geometry.hxx"
+#include "geometry.hpp"
 
 bool 
 Circle::do_not_intersec (const Circle& c)

Modified: trunk/src/geometry.hpp
===================================================================
--- trunk/src/geometry.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/geometry.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: geometry.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: geometry.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/globals.cpp
===================================================================
--- trunk/src/globals.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/globals.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: globals.cxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: globals.cpp,v 1.3 2003/06/17 22:06:13 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "globals.hxx"
+#include "globals.hpp"
 
 bool music_enabled = true;
 bool sound_enabled = true;

Modified: trunk/src/globals.hpp
===================================================================
--- trunk/src/globals.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/globals.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: globals.hxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: globals.hpp,v 1.3 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/goal_manager.cpp
===================================================================
--- trunk/src/goal_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/goal_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: goal_manager.cxx,v 1.1 2003/06/18 13:05:35 grumbel Exp $
+//  $Id: goal_manager.cpp,v 1.1 2003/06/18 13:05:35 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "goal_manager.hxx"
+#include "goal_manager.hpp"
 
 
 

Modified: trunk/src/goal_manager.hpp
===================================================================
--- trunk/src/goal_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/goal_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: goal_manager.hxx,v 1.1 2003/06/18 13:05:35 grumbel Exp $
+//  $Id: goal_manager.hpp,v 1.1 2003/06/18 13:05:35 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/groundmap/grid_map.cpp
===================================================================
--- trunk/src/groundmap/grid_map.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/grid_map.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grid_map.cxx,v 1.11 2003/10/20 20:58:40 grumbel Exp $
+//  $Id: grid_map.cpp,v 1.11 2003/10/20 20:58:40 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "grid_tile.hxx"
-#include "../path_manager.hxx"
-#include "grid_map.hxx"
+#include "grid_tile.hpp"
+#include "../path_manager.hpp"
+#include "grid_map.hpp"
 
 GridMap::GridMap (const GridMapData& data)
   : GridMapData (data),

Modified: trunk/src/groundmap/grid_map.hpp
===================================================================
--- trunk/src/groundmap/grid_map.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/grid_map.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grid_map.hxx,v 1.7 2003/06/22 19:22:57 grumbel Exp $
+//  $Id: grid_map.hpp,v 1.7 2003/06/22 19:22:57 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -24,11 +24,11 @@
 #include <map>
 #include <ClanLib/Display/surface.h>
 
-#include "../view.hxx"
-#include "ground_map.hxx"
-#include "grid_tile_data.hxx"
-#include "grid_map_data.hxx"
-#include "grid_tile_generator.hxx"
+#include "../view.hpp"
+#include "ground_map.hpp"
+#include "grid_tile_data.hpp"
+#include "grid_map_data.hpp"
+#include "grid_tile_generator.hpp"
 
 class GridTile;
 

Modified: trunk/src/groundmap/grid_map_data.cpp
===================================================================
--- trunk/src/groundmap/grid_map_data.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/grid_map_data.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grid_map_data.cxx,v 1.5 2003/10/20 20:58:40 grumbel Exp $
+//  $Id: grid_map_data.cpp,v 1.5 2003/10/20 20:58:40 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #include <iostream>
 #include <ClanLib/Display/Providers/png_provider.h>
 
-#include "../path_manager.hxx"
-#include "grid_map.hxx"
-#include "grid_map_data.hxx"
+#include "../path_manager.hpp"
+#include "grid_map.hpp"
+#include "grid_map_data.hpp"
 
 GridMapData::GridMapData (SCM desc)
 {

Modified: trunk/src/groundmap/grid_map_data.hpp
===================================================================
--- trunk/src/groundmap/grid_map_data.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/grid_map_data.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grid_map_data.hxx,v 1.5 2003/06/22 19:22:57 grumbel Exp $
+//  $Id: grid_map_data.hpp,v 1.5 2003/06/22 19:22:57 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -24,8 +24,8 @@
 
 #include <guile/gh.h>
 #include <ClanLib/Display/pixel_buffer.h>
-#include "ground_type.hxx"
-#include "ground_map_data.hxx"
+#include "ground_type.hpp"
+#include "ground_map_data.hpp"
 
 class CL_PixelBuffer;
 

Modified: trunk/src/groundmap/grid_tile.cpp
===================================================================
--- trunk/src/groundmap/grid_tile.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/grid_tile.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grid_tile.cxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: grid_tile.cpp,v 1.7 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,9 +18,9 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/core.h>
-#include "../view.hxx"
-#include "grid_tile.hxx"
-#include "../resource_manager.hxx"
+#include "../view.hpp"
+#include "grid_tile.hpp"
+#include "../resource_manager.hpp"
 
 GridTile::GridTile (std::string filename)
 {  

Modified: trunk/src/groundmap/grid_tile.hpp
===================================================================
--- trunk/src/groundmap/grid_tile.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/grid_tile.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grid_tile.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: grid_tile.hpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,7 +22,7 @@
 
 #include <string>
 #include <ClanLib/display.h>
-#include "grid_tile_data.hxx"
+#include "grid_tile_data.hpp"
 
 class View;
 

Modified: trunk/src/groundmap/grid_tile_data.cpp
===================================================================
--- trunk/src/groundmap/grid_tile_data.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/grid_tile_data.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grid_tile_data.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: grid_tile_data.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,8 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "grid_tile.hxx"
-#include "grid_tile_data.hxx"
+#include "grid_tile.hpp"
+#include "grid_tile_data.hpp"
 
 GridTile*
 GridTileData::create ()

Modified: trunk/src/groundmap/grid_tile_data.hpp
===================================================================
--- trunk/src/groundmap/grid_tile_data.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/grid_tile_data.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grid_tile_data.hxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: grid_tile_data.hpp,v 1.4 2003/10/31 23:24:41 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define GRIDTILEDATA_HXX
 
 #include <iostream>
-#include "ground_type.hxx"
+#include "ground_type.hpp"
 
 class GridTile;
 

Modified: trunk/src/groundmap/grid_tile_generator.cpp
===================================================================
--- trunk/src/groundmap/grid_tile_generator.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/grid_tile_generator.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grid_tile_generator.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: grid_tile_generator.cpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,9 +18,9 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../command_line_arguments.hxx"
-#include "grid_tile.hxx"
-#include "grid_tile_generator.hxx"
+#include "../command_line_arguments.hpp"
+#include "grid_tile.hpp"
+#include "grid_tile_generator.hpp"
 
 GridTileGenerator::GridTileGenerator (std::string filename)
   : emptytile (new GridTile ("feuerkraft/emptytile"))

Modified: trunk/src/groundmap/grid_tile_generator.hpp
===================================================================
--- trunk/src/groundmap/grid_tile_generator.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/grid_tile_generator.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grid_tile_generator.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: grid_tile_generator.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -24,8 +24,8 @@
 #include <map>
 #include <string>
 #include <guile/gh.h>
-#include "ground_type.hxx"
-#include "grid_tile_data.hxx"
+#include "ground_type.hpp"
+#include "grid_tile_data.hpp"
 
 class GridTile;
 

Modified: trunk/src/groundmap/ground_map.hpp
===================================================================
--- trunk/src/groundmap/ground_map.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/ground_map.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ground_map.hxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: ground_map.hpp,v 1.5 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef GROUNDMAP_HXX
 #define GROUNDMAP_HXX
 
-#include "../view.hxx"
-#include "../game_obj.hxx"
-#include "ground_type.hxx"
+#include "../view.hpp"
+#include "../game_obj.hpp"
+#include "ground_type.hpp"
 
 /** The GroundMap interface defines the basic interaction between
     vehicles and the ground. It allows a GameObj to know what the

Modified: trunk/src/groundmap/ground_map_data.cpp
===================================================================
--- trunk/src/groundmap/ground_map_data.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/ground_map_data.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ground_map_data.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: ground_map_data.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,6 +17,6 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "ground_map_data.hxx"
+#include "ground_map_data.hpp"
 
 /* EOF */

Modified: trunk/src/groundmap/ground_map_data.hpp
===================================================================
--- trunk/src/groundmap/ground_map_data.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/ground_map_data.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ground_map_data.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: ground_map_data.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/groundmap/ground_map_data_factory.cpp
===================================================================
--- trunk/src/groundmap/ground_map_data_factory.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/ground_map_data_factory.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ground_map_data_factory.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: ground_map_data_factory.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,10 +18,10 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "tile_map_data.hxx"
-#include "multi_ground_map.hxx"
-#include "grid_map_data.hxx"
-#include "ground_map_data_factory.hxx"
+#include "tile_map_data.hpp"
+#include "multi_ground_map.hpp"
+#include "grid_map_data.hpp"
+#include "ground_map_data_factory.hpp"
 
 GroundMapData* 
 GroundMapDataFactory::create (SCM desc)

Modified: trunk/src/groundmap/ground_map_data_factory.hpp
===================================================================
--- trunk/src/groundmap/ground_map_data_factory.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/ground_map_data_factory.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ground_map_data_factory.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: ground_map_data_factory.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/groundmap/ground_type.cpp
===================================================================
--- trunk/src/groundmap/ground_type.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/ground_type.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -18,7 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "ground_type.hxx"
+#include "ground_type.hpp"
 
 std::string GroundType2string(const GroundType& a)
 {

Modified: trunk/src/groundmap/ground_type.hpp
===================================================================
--- trunk/src/groundmap/ground_type.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/ground_type.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ground_type.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: ground_type.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/groundmap/multi_ground_map.cpp
===================================================================
--- trunk/src/groundmap/multi_ground_map.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/multi_ground_map.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: multi_ground_map.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: multi_ground_map.cpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "multi_ground_map.hxx"
+#include "multi_ground_map.hpp"
 
 MultiGroundMap::MultiGroundMap (const MultiGroundMapData& data)
   : MultiGroundMapData (data)

Modified: trunk/src/groundmap/multi_ground_map.hpp
===================================================================
--- trunk/src/groundmap/multi_ground_map.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/multi_ground_map.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: multi_ground_map.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: multi_ground_map.hpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define MULTIGROUNDMAP_HXX
 
 #include <vector>
-#include "multi_ground_map_data.hxx"
-#include "ground_map.hxx"
+#include "multi_ground_map_data.hpp"
+#include "ground_map.hpp"
 
 class MultiGroundMap : public GroundMap,
 		       public MultiGroundMapData

Modified: trunk/src/groundmap/multi_ground_map_data.cpp
===================================================================
--- trunk/src/groundmap/multi_ground_map_data.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/multi_ground_map_data.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: multi_ground_map_data.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: multi_ground_map_data.cpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,8 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "multi_ground_map.hxx"
-#include "multi_ground_map_data.hxx"
+#include "multi_ground_map.hpp"
+#include "multi_ground_map_data.hpp"
 
 MultiGroundMapData::MultiGroundMapData ()
 {

Modified: trunk/src/groundmap/multi_ground_map_data.hpp
===================================================================
--- trunk/src/groundmap/multi_ground_map_data.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/multi_ground_map_data.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: multi_ground_map_data.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: multi_ground_map_data.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define MULTIGROUNDMAPDATA_HXX
 
 #include <vector>
-#include "ground_map_data.hxx"
+#include "ground_map_data.hpp"
 
 class MultiGroundMapData : public GroundMapData
 {

Modified: trunk/src/groundmap/sprite_tile.cpp
===================================================================
--- trunk/src/groundmap/sprite_tile.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/sprite_tile.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sprite_tile.cxx,v 1.4 2003/05/19 19:00:56 grumbel Exp $
+//  $Id: sprite_tile.cpp,v 1.4 2003/05/19 19:00:56 grumbel Exp $
 // 
 //  Feuerkraft
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,9 +21,9 @@
 #define SPRITETILE_CXX
 
 #include <ClanLib/display.h>
-#include "sprite_tile.hxx"
-#include "../resource_manager.hxx"
-#include "../view.hxx"
+#include "sprite_tile.hpp"
+#include "../resource_manager.hpp"
+#include "../view.hpp"
 
 SpriteTile::SpriteTile (const SpriteTileData& data)
   : SpriteTileData (data),

Modified: trunk/src/groundmap/sprite_tile.hpp
===================================================================
--- trunk/src/groundmap/sprite_tile.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/sprite_tile.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sprite_tile.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sprite_tile.hpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,9 +21,9 @@
 #define SPRITETILE_HXX
 
 #include <ClanLib/display.h>
-#include "ground_type.hxx"
-#include "tile.hxx"
-#include "sprite_tile_data.hxx"
+#include "ground_type.hpp"
+#include "tile.hpp"
+#include "sprite_tile_data.hpp"
 
 class SpriteTile : public Tile,
 		   public SpriteTileData

Modified: trunk/src/groundmap/sprite_tile_data.cpp
===================================================================
--- trunk/src/groundmap/sprite_tile_data.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/sprite_tile_data.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sprite_tile_data.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sprite_tile_data.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,8 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "sprite_tile.hxx"
-#include "sprite_tile_data.hxx"
+#include "sprite_tile.hpp"
+#include "sprite_tile_data.hpp"
 
 SpriteTileData::SpriteTileData ()
 {

Modified: trunk/src/groundmap/sprite_tile_data.hpp
===================================================================
--- trunk/src/groundmap/sprite_tile_data.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/sprite_tile_data.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sprite_tile_data.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sprite_tile_data.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define SPRITETILEDATA_HXX
 
 #include <string>
-#include "tile_data.hxx"
+#include "tile_data.hpp"
 
 class SpriteTile;
 

Modified: trunk/src/groundmap/tile.hpp
===================================================================
--- trunk/src/groundmap/tile.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/tile.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tile.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: tile.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/groundmap/tile_data.hpp
===================================================================
--- trunk/src/groundmap/tile_data.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/tile_data.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tile_data.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: tile_data.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/groundmap/tile_data_factory.cpp
===================================================================
--- trunk/src/groundmap/tile_data_factory.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/tile_data_factory.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tile_data_factory.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: tile_data_factory.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,10 +19,10 @@
 
 #include <iostream>
 
-#include "tile_data.hxx"
-#include "sprite_tile_data.hxx"
-#include "sprite_tile.hxx"
-#include "tile_data_factory.hxx"
+#include "tile_data.hpp"
+#include "sprite_tile_data.hpp"
+#include "sprite_tile.hpp"
+#include "tile_data_factory.hpp"
 
 TileData*
 TileDataFactory::create (SCM desc)

Modified: trunk/src/groundmap/tile_data_factory.hpp
===================================================================
--- trunk/src/groundmap/tile_data_factory.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/tile_data_factory.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tile_data_factory.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: tile_data_factory.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/groundmap/tile_map.cpp
===================================================================
--- trunk/src/groundmap/tile_map.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/tile_map.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tile_map.cxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: tile_map.cpp,v 1.5 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "tile.hxx"
-#include "tile_data.hxx"
-#include "tile_map.hxx"
+#include "tile.hpp"
+#include "tile_data.hpp"
+#include "tile_map.hpp"
 
 TileMap::TileMap (const TileMapData& data)
   : TileMapData (data)

Modified: trunk/src/groundmap/tile_map.hpp
===================================================================
--- trunk/src/groundmap/tile_map.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/tile_map.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tile_map.hxx,v 1.5 2003/06/22 19:22:57 grumbel Exp $
+//  $Id: tile_map.hpp,v 1.5 2003/06/22 19:22:57 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define TILEMAP_HXX
 
 #include <vector>
-#include "ground_map.hxx"
-#include "tile_map_data.hxx"
+#include "ground_map.hpp"
+#include "tile_map_data.hpp"
 
 class Tile;
 

Modified: trunk/src/groundmap/tile_map_data.cpp
===================================================================
--- trunk/src/groundmap/tile_map_data.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/tile_map_data.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tile_map_data.cxx,v 1.5 2003/10/20 20:58:40 grumbel Exp $
+//  $Id: tile_map_data.cpp,v 1.5 2003/10/20 20:58:40 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,10 +20,10 @@
 #include <iostream>
 #include <ClanLib/Display/Providers/png_provider.h>
 
-#include "../path_manager.hxx"
-#include "tile_data_factory.hxx"
-#include "tile_map_data.hxx"
-#include "tile_map.hxx"
+#include "../path_manager.hpp"
+#include "tile_data_factory.hpp"
+#include "tile_map_data.hpp"
+#include "tile_map.hpp"
 
 TileMapData::TileMapData (SCM desc)
 {

Modified: trunk/src/groundmap/tile_map_data.hpp
===================================================================
--- trunk/src/groundmap/tile_map_data.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/groundmap/tile_map_data.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tile_map_data.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: tile_map_data.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -23,7 +23,7 @@
 #include <guile/gh.h>
 #include <vector>
 
-#include "ground_map_data.hxx"
+#include "ground_map_data.hpp"
 
 class TileData;
 class TileMap;

Modified: trunk/src/gui_obj.hpp
===================================================================
--- trunk/src/gui_obj.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/gui_obj.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: gui_obj.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: gui_obj.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/guile.cpp
===================================================================
--- trunk/src/guile.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/guile.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: guile.cxx,v 1.18 2003/08/20 00:15:10 grumbel Exp $
+//  $Id: guile.cpp,v 1.18 2003/08/20 00:15:10 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,9 +21,9 @@
 #include <guile/gh.h>
 #include <ClanLib/Core/System/cl_assert.h>
 
-#include "property.hxx"
-#include "property_set.hxx"
-#include "guile.hxx"
+#include "property.hpp"
+#include "property_set.hpp"
+#include "guile.hpp"
 
 namespace Guile {
 std::string

Modified: trunk/src/guile.hpp
===================================================================
--- trunk/src/guile.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/guile.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: guile.hxx,v 1.13 2003/06/22 17:22:47 grumbel Exp $
+//  $Id: guile.hpp,v 1.13 2003/06/22 17:22:47 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -24,9 +24,9 @@
 #include <string>
 #include <iostream>
 
-#include "vector2d.hxx"
+#include "vector2d.hpp"
 
-#include "alist.hxx"
+#include "alist.hpp"
 
 class Property;
 class PropertySet;

Modified: trunk/src/handle_manager.hpp
===================================================================
--- trunk/src/handle_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/handle_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: handle_manager.hxx,v 1.3 2003/06/18 13:03:13 grumbel Exp $
+//  $Id: handle_manager.hpp,v 1.3 2003/06/18 13:03:13 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/help.cpp
===================================================================
--- trunk/src/help.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/help.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: help.cxx,v 1.2 2003/06/06 11:11:19 grumbel Exp $
+//  $Id: help.cpp,v 1.2 2003/06/06 11:11:19 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/display.h>
-#include "fonts.hxx"
-#include "help.hxx"
+#include "fonts.hpp"
+#include "help.hpp"
 
 Help::Help()
 {

Modified: trunk/src/help.hpp
===================================================================
--- trunk/src/help.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/help.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: help.hxx,v 1.1 2003/06/05 21:34:23 grumbel Exp $
+//  $Id: help.hpp,v 1.1 2003/06/05 21:34:23 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define HEADER_HELP_HXX
 
 #include <ClanLib/Display/font.h>
-#include "gui_obj.hxx"
+#include "gui_obj.hpp"
 
 /** */
 class Help : public GuiObj

Modified: trunk/src/input/axis_button.cpp
===================================================================
--- trunk/src/input/axis_button.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/axis_button.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "input_axis.hxx"
-#include "axis_button.hxx"
+#include "input_axis.hpp"
+#include "axis_button.hpp"
 
 AxisButton::AxisButton(InputAxis* axis, bool top)
   : axis(axis),

Modified: trunk/src/input/axis_button.hpp
===================================================================
--- trunk/src/input/axis_button.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/axis_button.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -20,7 +20,7 @@
 #ifndef HEADER_AXIS_BUTTON_HXX
 #define HEADER_AXIS_BUTTON_HXX
 
-#include "input_button.hxx"
+#include "input_button.hpp"
 
 class InputAxis;
 

Modified: trunk/src/input/axis_factory.cpp
===================================================================
--- trunk/src/input/axis_factory.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/axis_factory.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -18,12 +18,12 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/joystick.h>
-#include "input_axis_input_device.hxx"
-#include "../feuerkraft_error.hxx"
-#include "../guile.hxx"
-#include "button_factory.hxx"
-#include "button_axis.hxx"
-#include "axis_factory.hxx"
+#include "input_axis_input_device.hpp"
+#include "../feuerkraft_error.hpp"
+#include "../guile.hpp"
+#include "button_factory.hpp"
+#include "button_axis.hpp"
+#include "axis_factory.hpp"
 
 InputAxis* 
 AxisFactory::create(SCM lst)

Modified: trunk/src/input/axis_factory.hpp
===================================================================
--- trunk/src/input/axis_factory.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/axis_factory.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -21,7 +21,7 @@
 #define HEADER_AXIS_FACTORY_HXX
 
 #include <guile/gh.h>
-#include "input_axis.hxx"
+#include "input_axis.hpp"
 
 /** */
 class AxisFactory

Modified: trunk/src/input/button_axis.cpp
===================================================================
--- trunk/src/input/button_axis.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/button_axis.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "input_button.hxx"
-#include "button_axis.hxx"
+#include "input_button.hpp"
+#include "button_axis.hpp"
 
 ButtonAxis::ButtonAxis(InputButton* left, InputButton* right)
   : left(left), right(right)

Modified: trunk/src/input/button_axis.hpp
===================================================================
--- trunk/src/input/button_axis.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/button_axis.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -20,7 +20,7 @@
 #ifndef HEADER_BUTTON_AXIS_HXX
 #define HEADER_BUTTON_AXIS_HXX
 
-#include "input_axis.hxx"
+#include "input_axis.hpp"
 
 class InputButton;
 

Modified: trunk/src/input/button_factory.cpp
===================================================================
--- trunk/src/input/button_factory.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/button_factory.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -20,15 +20,15 @@
 #include <ClanLib/Display/joystick.h>
 #include <ClanLib/Display/keyboard.h>
 #include <ClanLib/Core/System/clanstring.h>
-#include "../guile.hxx"
-#include "../feuerkraft_error.hxx"
-#include "input_button.hxx"
-#include "input_axis.hxx"
-#include "input_button_input_device.hxx"
-#include "axis_factory.hxx"
-#include "axis_button.hxx"
-#include "multi_button.hxx"
-#include "button_factory.hxx"
+#include "../guile.hpp"
+#include "../feuerkraft_error.hpp"
+#include "input_button.hpp"
+#include "input_axis.hpp"
+#include "input_button_input_device.hpp"
+#include "axis_factory.hpp"
+#include "axis_button.hpp"
+#include "multi_button.hpp"
+#include "button_factory.hpp"
 
 InputButton* 
 ButtonFactory::create(SCM lst)

Modified: trunk/src/input/controller.cpp
===================================================================
--- trunk/src/input/controller.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/controller.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: controller.cxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: controller.cpp,v 1.4 2003/10/31 23:24:41 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,8 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../assert.hxx"
-#include "controller.hxx"
+#include "../assert.hpp"
+#include "controller.hpp"
 
 Controller::Controller()
 {

Modified: trunk/src/input/controller.hpp
===================================================================
--- trunk/src/input/controller.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/controller.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: controller.hxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: controller.hpp,v 1.4 2003/10/31 23:24:41 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define HEADER_CONTROLLER_HXX
 
 #include <vector>
-#include "../controller_def.hxx"
-#include "input_event.hxx"
+#include "../controller_def.hpp"
+#include "input_event.hpp"
 
 /** The Controller class presents the current state of the controller
     and the input events that occurred on the controller since the

Modified: trunk/src/input/input_axis_input_device.cpp
===================================================================
--- trunk/src/input/input_axis_input_device.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_axis_input_device.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -18,7 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/input_event.h>
-#include "input_axis_input_device.hxx"
+#include "input_axis_input_device.hpp"
 
 InputAxisInputDevice::InputAxisInputDevice(CL_InputDevice& dev, int num)
   : dev(dev), axis_num(num)

Modified: trunk/src/input/input_axis_input_device.hpp
===================================================================
--- trunk/src/input/input_axis_input_device.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_axis_input_device.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -21,7 +21,7 @@
 #define HEADER_INPUT_AXIS_INPUT_DEVICE_HXX
 
 #include <ClanLib/Display/input_device.h>
-#include "input_axis.hxx"
+#include "input_axis.hpp"
 
 class InputAxisInputDevice : public InputAxis
 {

Modified: trunk/src/input/input_button_input_device.cpp
===================================================================
--- trunk/src/input/input_button_input_device.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_button_input_device.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -19,7 +19,7 @@
 
 #include <iostream>
 #include <ClanLib/Display/input_event.h>
-#include "input_button_input_device.hxx"
+#include "input_button_input_device.hpp"
 
 InputButtonInputDevice::InputButtonInputDevice(CL_InputDevice& dev_, int keycode_)
   : dev(dev_), keycode(keycode_)

Modified: trunk/src/input/input_button_input_device.hpp
===================================================================
--- trunk/src/input/input_button_input_device.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_button_input_device.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -21,7 +21,7 @@
 #define HEADER_INPUT_BOTTON_INPUT_DEVICE_HXX
 
 #include <ClanLib/Display/input_device.h>
-#include "input_button.hxx"
+#include "input_button.hpp"
 
 class InputButtonInputDevice : public InputButton
 {

Modified: trunk/src/input/input_event.hpp
===================================================================
--- trunk/src/input/input_event.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_event.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: input_event.hxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: input_event.hpp,v 1.4 2003/10/31 23:24:41 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/input/input_manager.cpp
===================================================================
--- trunk/src/input/input_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: input_manager.cxx,v 1.4 2003/08/20 00:15:10 grumbel Exp $
+//  $Id: input_manager.cpp,v 1.4 2003/08/20 00:15:10 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -23,12 +23,12 @@
 #include <sstream>
 #include <ClanLib/Display/joystick.h>
 
-#include "../feuerkraft_error.hxx"
-#include "input_manager_custom.hxx"
-#include "input_manager_player.hxx"
-#include "input_manager_impl.hxx"
-#include "input_recorder.hxx"
-#include "input_manager.hxx"
+#include "../feuerkraft_error.hpp"
+#include "input_manager_custom.hpp"
+#include "input_manager_player.hpp"
+#include "input_manager_impl.hpp"
+#include "input_recorder.hpp"
+#include "input_manager.hpp"
 
 InputManagerImpl* InputManager::impl = 0;
 InputRecorder* InputManager::recorder = 0;

Modified: trunk/src/input/input_manager.hpp
===================================================================
--- trunk/src/input/input_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: input_manager.hxx,v 1.3 2003/06/06 18:36:24 grumbel Exp $
+//  $Id: input_manager.hpp,v 1.3 2003/06/06 18:36:24 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define HEADER_INPUT_MANAGER_HXX
 
 #include <vector>
-#include "controller.hxx"
-#include "input_event.hxx"
+#include "controller.hpp"
+#include "input_event.hpp"
 
 class InputRecorder;
 class InputManagerImpl;

Modified: trunk/src/input/input_manager_custom.cpp
===================================================================
--- trunk/src/input/input_manager_custom.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_manager_custom.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -23,15 +23,15 @@
 #include <ClanLib/Display/display_iostream.h>
 #include <ClanLib/Display/keys.h>
 
-#include "../guile.hxx"
-#include "../assert.hxx"
-#include "../controller_def.hxx"
-#include "input_button_input_device.hxx"
-#include "input_axis_input_device.hxx"
-#include "button_factory.hxx"
-#include "axis_factory.hxx"
+#include "../guile.hpp"
+#include "../assert.hpp"
+#include "../controller_def.hpp"
+#include "input_button_input_device.hpp"
+#include "input_axis_input_device.hpp"
+#include "button_factory.hpp"
+#include "axis_factory.hpp"
 
-#include "input_manager_custom.hxx"
+#include "input_manager_custom.hpp"
 
 InputManagerCustom::InputManagerCustom(SCM lst)
 {

Modified: trunk/src/input/input_manager_custom.hpp
===================================================================
--- trunk/src/input/input_manager_custom.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_manager_custom.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -23,10 +23,10 @@
 #include <guile/gh.h>
 #include <ClanLib/Display/input_device.h>
 #include <ClanLib/Display/input_event.h>
-#include "input_event.hxx"
-#include "input_button.hxx"
-#include "input_axis.hxx"
-#include "input_manager_impl.hxx"
+#include "input_event.hpp"
+#include "input_button.hpp"
+#include "input_axis.hpp"
+#include "input_manager_impl.hpp"
 
 /** */
 class InputManagerCustom : public InputManagerImpl

Modified: trunk/src/input/input_manager_impl.cpp
===================================================================
--- trunk/src/input/input_manager_impl.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_manager_impl.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "input_manager_impl.hxx"
+#include "input_manager_impl.hpp"
 
 InputEventLst
 InputManagerImpl::get_events()

Modified: trunk/src/input/input_manager_impl.hpp
===================================================================
--- trunk/src/input/input_manager_impl.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_manager_impl.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: input_manager_impl.hxx,v 1.3 2003/06/06 18:36:24 grumbel Exp $
+//  $Id: input_manager_impl.hpp,v 1.3 2003/06/06 18:36:24 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,8 +20,8 @@
 #ifndef HEADER_INPUT_MANAGER_IMPL_HXX
 #define HEADER_INPUT_MANAGER_IMPL_HXX
 
-#include "controller.hxx"
-#include "input_event.hxx"
+#include "controller.hpp"
+#include "input_event.hpp"
 
 /** */
 class InputManagerImpl

Modified: trunk/src/input/input_manager_player.cpp
===================================================================
--- trunk/src/input/input_manager_player.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_manager_player.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../guile.hxx"
-#include "input_manager_player.hxx"
+#include "../guile.hpp"
+#include "input_manager_player.hpp"
 
 InputManagerPlayer::InputManagerPlayer(const std::string& filename)
 {

Modified: trunk/src/input/input_manager_player.hpp
===================================================================
--- trunk/src/input/input_manager_player.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_manager_player.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -23,7 +23,7 @@
 #include <queue>
 #include <string>
 #include <guile/gh.h>
-#include "input_manager_impl.hxx"
+#include "input_manager_impl.hpp"
 
 /** Playback class for events recorded my the InputRecorder */
 class InputManagerPlayer : public InputManagerImpl

Modified: trunk/src/input/input_recorder.cpp
===================================================================
--- trunk/src/input/input_recorder.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_recorder.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "input_recorder.hxx"
+#include "input_recorder.hpp"
 
 InputRecorder::InputRecorder(const std::string& filename)
   : out(filename.c_str())

Modified: trunk/src/input/input_recorder.hpp
===================================================================
--- trunk/src/input/input_recorder.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/input_recorder.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -21,7 +21,7 @@
 #define HEADER_INPUT_RECORDER_HXX
 
 #include <fstream>
-#include "controller.hxx"
+#include "controller.hpp"
 
 /** The InputRecorder hooks into the InputManager and records all
     input events to a file, thus allowing the later playback of the

Modified: trunk/src/input/multi_button.cpp
===================================================================
--- trunk/src/input/multi_button.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/multi_button.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -18,7 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "multi_button.hxx"
+#include "multi_button.hpp"
 
 MultiButton::MultiButton()
 {

Modified: trunk/src/input/multi_button.hpp
===================================================================
--- trunk/src/input/multi_button.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/input/multi_button.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -21,7 +21,7 @@
 #define HEADER_MULTI_BUTTON_HXX
 
 #include <vector>
-#include "input_button.hxx"
+#include "input_button.hpp"
 
 /** */
 class MultiButton : public InputButton

Modified: trunk/src/ipc.cpp
===================================================================
--- trunk/src/ipc.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/ipc.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ipc.cxx,v 1.1 2003/06/04 13:16:17 grumbel Exp $
+//  $Id: ipc.cpp,v 1.1 2003/06/04 13:16:17 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -27,7 +27,7 @@
 #include <string.h>
 #include <sys/stat.h>
 
-#include "ipc.hxx"
+#include "ipc.hpp"
 
 IPC::IPC(const std::string& arg_filename)
   : filename(arg_filename)

Modified: trunk/src/ipc.hpp
===================================================================
--- trunk/src/ipc.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/ipc.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ipc.hxx,v 1.1 2003/06/04 13:16:17 grumbel Exp $
+//  $Id: ipc.hpp,v 1.1 2003/06/04 13:16:17 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/keyboard_manager.cpp
===================================================================
--- trunk/src/keyboard_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/keyboard_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: keyboard_manager.cxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: keyboard_manager.cpp,v 1.4 2003/10/31 23:24:41 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #include <ClanLib/Display/keyboard.h>
 #include <ClanLib/Display/joystick.h>
 #include <ClanLib/Display/mouse.h>
-#include "command_line_arguments.hxx"
-#include "keyboard_manager.hxx"
+#include "command_line_arguments.hpp"
+#include "keyboard_manager.hpp"
 
 KeyboardManager* KeyboardManager::instance_ = 0;
 

Modified: trunk/src/keyboard_manager.hpp
===================================================================
--- trunk/src/keyboard_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/keyboard_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: keyboard_manager.hxx,v 1.6 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: keyboard_manager.hpp,v 1.6 2003/10/31 23:24:41 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/keys.cpp
===================================================================
--- trunk/src/keys.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/keys.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: keys.cxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: keys.cpp,v 1.4 2003/10/31 23:24:41 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,7 +19,7 @@
 
 #include <string.h>
 #include <ClanLib/display.h>
-#include "keys.hxx"
+#include "keys.hpp"
 
 #ifdef WIN32
 #  define strcasecmp _stricmp

Modified: trunk/src/keys.hpp
===================================================================
--- trunk/src/keys.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/keys.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: keys.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: keys.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/level_map.cpp
===================================================================
--- trunk/src/level_map.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/level_map.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: level_map.cxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: level_map.cpp,v 1.6 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,8 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "game_world.hxx"
-#include "level_map.hxx"
+#include "game_world.hpp"
+#include "level_map.hpp"
 
 LevelMap::LevelMap ()
 {

Modified: trunk/src/level_map.hpp
===================================================================
--- trunk/src/level_map.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/level_map.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: level_map.hxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: level_map.hpp,v 1.6 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #ifndef LEVELMAP_HXX
 #define LEVELMAP_HXX
 
-#include "gui_obj.hxx"
+#include "gui_obj.hpp"
 
 class GameWorld;
 

Modified: trunk/src/line_segments.cpp
===================================================================
--- trunk/src/line_segments.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/line_segments.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: line_segments.cxx,v 1.14 2003/06/18 14:38:28 grumbel Exp $
+//  $Id: line_segments.cpp,v 1.14 2003/06/18 14:38:28 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,10 +20,10 @@
 #include <math.h>
 #include <assert.h>
 #include <iostream>
-#include "math.hxx"
-#include "color.hxx"
-#include "view.hxx"
-#include "line_segments.hxx"
+#include "math.hpp"
+#include "color.hpp"
+#include "view.hpp"
+#include "line_segments.hpp"
 
 LineSegments::LineSegments(float arg_init_x, float arg_init_y, float arg_init_orientation)
   : init_x(arg_init_x),

Modified: trunk/src/line_segments.hpp
===================================================================
--- trunk/src/line_segments.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/line_segments.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: line_segments.hxx,v 1.9 2003/06/06 20:55:24 grumbel Exp $
+//  $Id: line_segments.hpp,v 1.9 2003/06/06 20:55:24 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #ifndef HEADER_LINE_SEGMENTS_HXX
 #define HEADER_LINE_SEGMENTS_HXX
 
-#include "vector2d.hxx"
+#include "vector2d.hpp"
 #include <vector>
 
 class View;

Modified: trunk/src/marker.cpp
===================================================================
--- trunk/src/marker.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/marker.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: marker.cxx,v 1.3 2003/06/23 09:56:39 grumbel Exp $
+//  $Id: marker.cpp,v 1.3 2003/06/23 09:56:39 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,12 +17,12 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "property_set.hxx"
-#include "resource_manager.hxx"
-#include "marker.hxx"
-#include "alist.hxx"
-#include "radar.hxx"
-#include "view.hxx"
+#include "property_set.hpp"
+#include "resource_manager.hpp"
+#include "marker.hpp"
+#include "alist.hpp"
+#include "radar.hpp"
+#include "view.hpp"
 
 Marker::Marker(const AList& lst)
 {

Modified: trunk/src/marker.hpp
===================================================================
--- trunk/src/marker.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/marker.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: marker.hxx,v 1.3 2003/06/23 09:56:39 grumbel Exp $
+//  $Id: marker.hpp,v 1.3 2003/06/23 09:56:39 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define HEADER_MARKER_HXX
 
 #include <ClanLib/Display/sprite.h>
-#include "game_obj.hxx"
-#include "vector2d.hxx"
+#include "game_obj.hpp"
+#include "vector2d.hpp"
 
 class AList;
 class View;

Modified: trunk/src/math.cpp
===================================================================
--- trunk/src/math.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/math.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: math.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: math.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "math.hxx"
+#include "math.hpp"
 
 namespace Math {
 

Modified: trunk/src/math.hpp
===================================================================
--- trunk/src/math.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/math.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: math.hxx,v 1.7 2003/06/18 13:03:13 grumbel Exp $
+//  $Id: math.hpp,v 1.7 2003/06/18 13:03:13 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/menu.cpp
===================================================================
--- trunk/src/menu.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/menu.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: menu.cxx,v 1.7 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: menu.cpp,v 1.7 2003/10/31 23:24:41 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,12 +18,12 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/display.h>
-#include "assert.hxx"
-#include "display_manager.hxx"
-#include "fonts.hxx"
-#include "input/input_manager.hxx"
-#include "menu_item.hxx"
-#include "menu.hxx"
+#include "assert.hpp"
+#include "display_manager.hpp"
+#include "fonts.hpp"
+#include "input/input_manager.hpp"
+#include "menu_item.hpp"
+#include "menu.hpp"
 
 Menu::Menu()
 {

Modified: trunk/src/menu.hpp
===================================================================
--- trunk/src/menu.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/menu.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: menu.hxx,v 1.5 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: menu.hpp,v 1.5 2003/10/31 23:24:41 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define HEADER_MENU_HXX
 
 #include <vector>
-#include "input/input_event.hxx"
-#include "gui_obj.hxx"
+#include "input/input_event.hpp"
+#include "gui_obj.hpp"
 
 class MenuItem;
 

Modified: trunk/src/menu_handle_mgr.cpp
===================================================================
--- trunk/src/menu_handle_mgr.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/menu_handle_mgr.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: menu_handle_mgr.cxx,v 1.1 2003/06/06 09:49:35 grumbel Exp $
+//  $Id: menu_handle_mgr.cpp,v 1.1 2003/06/06 09:49:35 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "menu_handle_mgr.hxx"
+#include "menu_handle_mgr.hpp"
 
 HandleManager<Menu>     menu_handle_mgr;
 HandleManager<MenuItem> menu_item_handle_mgr;

Modified: trunk/src/menu_handle_mgr.hpp
===================================================================
--- trunk/src/menu_handle_mgr.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/menu_handle_mgr.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: menu_handle_mgr.hxx,v 1.1 2003/06/06 09:49:35 grumbel Exp $
+//  $Id: menu_handle_mgr.hpp,v 1.1 2003/06/06 09:49:35 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef HEADER_MENU_HANDLE_MGR_HXX
 #define HEADER_MENU_HANDLE_MGR_HXX
 
-#include "menu.hxx"
-#include "menu_item.hxx"
-#include "handle_manager.hxx"
+#include "menu.hpp"
+#include "menu_item.hpp"
+#include "handle_manager.hpp"
 
 extern HandleManager<Menu>     menu_handle_mgr;
 extern HandleManager<MenuItem> menu_item_handle_mgr;

Modified: trunk/src/menu_item.cpp
===================================================================
--- trunk/src/menu_item.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/menu_item.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: menu_item.cxx,v 1.4 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: menu_item.cpp,v 1.4 2003/10/31 23:24:41 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,9 +18,9 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/display.h>
-#include "fonts.hxx"
-#include "display_manager.hxx"
-#include "menu_item.hxx"
+#include "fonts.hpp"
+#include "display_manager.hpp"
+#include "menu_item.hpp"
 
 MenuItemSubMenuFunctor::MenuItemSubMenuFunctor(Menu* arg_submenu)
   : submenu(arg_submenu)

Modified: trunk/src/menu_item.hpp
===================================================================
--- trunk/src/menu_item.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/menu_item.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: menu_item.hxx,v 1.4 2003/06/18 13:03:13 grumbel Exp $
+//  $Id: menu_item.hpp,v 1.4 2003/06/18 13:03:13 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/message_buffer.cpp
===================================================================
--- trunk/src/message_buffer.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/message_buffer.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: message_buffer.cxx,v 1.3 2003/06/08 15:49:00 grumbel Exp $
+//  $Id: message_buffer.cpp,v 1.3 2003/06/08 15:49:00 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "assert.hxx"
-#include "fonts.hxx"
-#include "message_buffer.hxx"
+#include "assert.hpp"
+#include "fonts.hpp"
+#include "message_buffer.hpp"
 
 MessageBuffer* MessageBuffer::current_ = 0;
 

Modified: trunk/src/message_buffer.hpp
===================================================================
--- trunk/src/message_buffer.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/message_buffer.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: message_buffer.hxx,v 1.2 2003/06/08 15:49:00 grumbel Exp $
+//  $Id: message_buffer.hpp,v 1.2 2003/06/08 15:49:00 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define HEADER_MESSAGE_BUFFER_HXX
 
 #include <vector>
-#include "gui_obj.hxx"
+#include "gui_obj.hpp"
 
 struct MessageBufferEntry {
   std::string message;

Modified: trunk/src/mine.cpp
===================================================================
--- trunk/src/mine.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/mine.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: mine.cxx,v 1.11 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: mine.cpp,v 1.11 2003/06/20 20:54:23 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,15 +17,15 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "alist.hxx"
-#include "vehicles/tank.hxx"
-#include "mine.hxx"
-#include "game_obj_manager.hxx"
-#include "game_world.hxx"
-#include "groundmap/ground_map.hxx"
-#include "collision_manager.hxx"
-#include "property_set.hxx"
-#include "resource_manager.hxx"
+#include "alist.hpp"
+#include "vehicles/tank.hpp"
+#include "mine.hpp"
+#include "game_obj_manager.hpp"
+#include "game_world.hpp"
+#include "groundmap/ground_map.hpp"
+#include "collision_manager.hpp"
+#include "property_set.hpp"
+#include "resource_manager.hpp"
 
 Mine::Mine (const AList& lst)
   : pos (0, 0),

Modified: trunk/src/mine.hpp
===================================================================
--- trunk/src/mine.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/mine.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: mine.hxx,v 1.10 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: mine.hpp,v 1.10 2003/06/20 20:54:23 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,8 +20,8 @@
 #ifndef MINE_HH
 #define MINE_HH
 
-#include "game_obj.hxx"
-#include "explosion.hxx"
+#include "game_obj.hpp"
+#include "explosion.hpp"
 
 class AList;
 

Modified: trunk/src/output_world_builder.cpp
===================================================================
--- trunk/src/output_world_builder.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/output_world_builder.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: output_world_builder.cxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: output_world_builder.cpp,v 1.5 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "output_world_builder.hxx"
+#include "output_world_builder.hpp"
 
 OutputWorldBuilder::OutputWorldBuilder()
 {

Modified: trunk/src/output_world_builder.hpp
===================================================================
--- trunk/src/output_world_builder.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/output_world_builder.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: output_world_builder.hxx,v 1.4 2003/06/22 21:51:21 grumbel Exp $
+//  $Id: output_world_builder.hpp,v 1.4 2003/06/22 21:51:21 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define HEADER_OUTPUT_WORLD_BUILDER_HXX
 
 #include <iostream>
-#include "world_builder.hxx"
+#include "world_builder.hpp"
 
 /** Class for converting or serializing a GameWorld */
 class OutputWorldBuilder

Modified: trunk/src/particles/explosion_particle.hpp
===================================================================
--- trunk/src/particles/explosion_particle.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/explosion_particle.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: explosion_particle.hxx,v 1.9 2003/06/06 09:49:00 grumbel Exp $
+//  $Id: explosion_particle.hpp,v 1.9 2003/06/06 09:49:00 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,10 +21,10 @@
 #define EXPLOSIONPARTICLE_HXX
 
 #include <ClanLib/display.h>
-#include "view.hxx"
-#include "particle.hxx"
-#include "../math.hxx"
-#include "../resource_manager.hxx"
+#include "view.hpp"
+#include "particle.hpp"
+#include "../math.hpp"
+#include "../resource_manager.hpp"
 
 class ExplosionParticle : public Particle
 {

Modified: trunk/src/particles/fire_emitter.cpp
===================================================================
--- trunk/src/particles/fire_emitter.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/fire_emitter.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: fire_emitter.cxx,v 1.1 2003/06/07 17:18:34 grumbel Exp $
+//  $Id: fire_emitter.cpp,v 1.1 2003/06/07 17:18:34 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "fire_emitter.hxx"
+#include "fire_emitter.hpp"
 
 
 

Modified: trunk/src/particles/fire_emitter.hpp
===================================================================
--- trunk/src/particles/fire_emitter.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/fire_emitter.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: fire_emitter.hxx,v 1.2 2003/06/18 13:03:13 grumbel Exp $
+//  $Id: fire_emitter.hpp,v 1.2 2003/06/18 13:03:13 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/particles/fire_particle.cpp
===================================================================
--- trunk/src/particles/fire_particle.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/fire_particle.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: fire_particle.cxx,v 1.2 2003/06/08 15:31:27 grumbel Exp $
+//  $Id: fire_particle.cpp,v 1.2 2003/06/08 15:31:27 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,10 +18,10 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/color.h>
-#include "../math.hxx"
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "fire_particle.hxx"
+#include "../math.hpp"
+#include "../view.hpp"
+#include "../resource_manager.hpp"
+#include "fire_particle.hpp"
 
 FireParticle::FireParticle(const FloatVector2d& arg_pos)
   : sprite(resources->get_sprite("feuerkraft/firep")),

Modified: trunk/src/particles/fire_particle.hpp
===================================================================
--- trunk/src/particles/fire_particle.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/fire_particle.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: fire_particle.hxx,v 1.1 2003/06/07 17:18:34 grumbel Exp $
+//  $Id: fire_particle.hpp,v 1.1 2003/06/07 17:18:34 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define HEADER_FIRE_PARTICLE_HXX
 
 #include <ClanLib/Display/sprite.h>
-#include "../vector2d.hxx"
-#include "../game_obj.hxx"
+#include "../vector2d.hpp"
+#include "../game_obj.hpp"
 
 /** */
 class FireParticle : public GameObj

Modified: trunk/src/particles/grass_particle.hpp
===================================================================
--- trunk/src/particles/grass_particle.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/grass_particle.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: grass_particle.hxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: grass_particle.hpp,v 1.7 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,8 +20,8 @@
 #ifndef GRASSPARTICLE_HXX
 #define GRASSPARTICLE_HXX
 
-#include "particle.hxx"
-#include "../resource_manager.hxx"
+#include "particle.hpp"
+#include "../resource_manager.hpp"
 
 class GrassParticle : public Particle
 {

Modified: trunk/src/particles/particle.hpp
===================================================================
--- trunk/src/particles/particle.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/particle.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: particle.hxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: particle.hpp,v 1.6 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define PARTICLE_HXX
 
 #include <ClanLib/core.h>
-#include "../game_obj.hxx"
+#include "../game_obj.hpp"
 
 class Particle : public GameObj
 {

Modified: trunk/src/particles/particle_system.hpp
===================================================================
--- trunk/src/particles/particle_system.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/particle_system.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: particle_system.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: particle_system.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/particles/rocket_smoke_particle.cpp
===================================================================
--- trunk/src/particles/rocket_smoke_particle.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/rocket_smoke_particle.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "rocket_smoke_particle.hxx"
+#include "../view.hpp"
+#include "../resource_manager.hpp"
+#include "rocket_smoke_particle.hpp"
 
 RocketSmokeParticle::RocketSmokeParticle(const FloatVector2d& arg_pos)
 {

Modified: trunk/src/particles/rocket_smoke_particle.hpp
===================================================================
--- trunk/src/particles/rocket_smoke_particle.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/rocket_smoke_particle.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -20,7 +20,7 @@
 #ifndef HEADER_ROCKET_SMOKE_PARTICLE_HXX
 #define HEADER_ROCKET_SMOKE_PARTICLE_HXX
 
-#include "particle.hxx"
+#include "particle.hpp"
 
 /** */
 class RocketSmokeParticle : public Particle

Modified: trunk/src/particles/sand_particle.hpp
===================================================================
--- trunk/src/particles/sand_particle.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/sand_particle.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sand_particle.hxx,v 1.1 2003/06/18 13:05:35 grumbel Exp $
+//  $Id: sand_particle.hpp,v 1.1 2003/06/18 13:05:35 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef SANDPARTICLE_HXX
 #define SANDPARTICLE_HXX
 
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "particle.hxx"
+#include "../view.hpp"
+#include "../resource_manager.hpp"
+#include "particle.hpp"
 
 class SandParticle : public Particle
 {

Modified: trunk/src/particles/smoke_emitter.cpp
===================================================================
--- trunk/src/particles/smoke_emitter.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/smoke_emitter.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: smoke_emitter.cxx,v 1.2 2003/06/09 20:27:31 grumbel Exp $
+//  $Id: smoke_emitter.cpp,v 1.2 2003/06/09 20:27:31 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,11 +17,11 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../game_world.hxx"
-#include "../math.hxx"
-#include "fire_particle.hxx"
-#include "smoke_particle.hxx"
-#include "smoke_emitter.hxx"
+#include "../game_world.hpp"
+#include "../math.hpp"
+#include "fire_particle.hpp"
+#include "smoke_particle.hpp"
+#include "smoke_emitter.hpp"
 
 SmokeEmitter::SmokeEmitter(const FloatVector2d& arg_pos)
   : pos(arg_pos)

Modified: trunk/src/particles/smoke_emitter.hpp
===================================================================
--- trunk/src/particles/smoke_emitter.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/smoke_emitter.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: smoke_emitter.hxx,v 1.1 2003/06/07 17:19:19 grumbel Exp $
+//  $Id: smoke_emitter.hpp,v 1.1 2003/06/07 17:19:19 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #ifndef HEADER_SMOKE_EMITTER_HXX
 #define HEADER_SMOKE_EMITTER_HXX
 
-#include "../vector2d.hxx"
+#include "../vector2d.hpp"
 
 /** */
 class SmokeEmitter

Modified: trunk/src/particles/smoke_particle.hpp
===================================================================
--- trunk/src/particles/smoke_particle.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/particles/smoke_particle.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: smoke_particle.hxx,v 1.9 2003/06/07 16:16:08 grumbel Exp $
+//  $Id: smoke_particle.hpp,v 1.9 2003/06/07 16:16:08 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef SMOKEPARTICLE_HXX
 #define SMOKEPARTICLE_HXX
 
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "particle.hxx"
+#include "../view.hpp"
+#include "../resource_manager.hpp"
+#include "particle.hpp"
 
 class SmokeParticle : public Particle
 {

Modified: trunk/src/path_manager.cpp
===================================================================
--- trunk/src/path_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/path_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: path_manager.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: path_manager.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "system.hxx"
-#include "path_manager.hxx"
+#include "system.hpp"
+#include "path_manager.hpp"
 
 PathManager path_manager;
 

Modified: trunk/src/path_manager.hpp
===================================================================
--- trunk/src/path_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/path_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: path_manager.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: path_manager.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/pathfinder.hpp
===================================================================
--- trunk/src/pathfinder.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/pathfinder.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: pathfinder.hxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: pathfinder.hpp,v 1.7 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/player.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: player.cxx,v 1.5 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: player.cpp,v 1.5 2003/06/17 22:06:13 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,7 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <assert.h>
-#include "player.hxx"
+#include "player.hpp"
 
 Player::Player(Unit* arg_unit)
 {

Modified: trunk/src/player.hpp
===================================================================
--- trunk/src/player.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/player.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: player.hxx,v 1.6 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: player.hpp,v 1.6 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/player_view.cpp
===================================================================
--- trunk/src/player_view.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/player_view.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: player_view.cxx,v 1.4 2003/06/04 13:10:09 grumbel Exp $
+//  $Id: player_view.cpp,v 1.4 2003/06/04 13:10:09 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,8 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "player.hxx"
-#include "player_view.hxx"
+#include "player.hpp"
+#include "player_view.hpp"
 
 PlayerViewUpdater::PlayerViewUpdater(Player* arg_player)
   : VehicleViewUpdater(arg_player->get_current_unit()),

Modified: trunk/src/player_view.hpp
===================================================================
--- trunk/src/player_view.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/player_view.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: player_view.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: player_view.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #ifndef HEADER_PLAYER_VIEW_HXX
 #define HEADER_PLAYER_VIEW_HXX
 
-#include "vehicle_view.hxx"
+#include "vehicle_view.hpp"
 
 class Player;
 

Modified: trunk/src/projectile.cpp
===================================================================
--- trunk/src/projectile.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/projectile.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: projectile.cxx,v 1.14 2003/06/22 21:51:21 grumbel Exp $
+//  $Id: projectile.cpp,v 1.14 2003/06/22 21:51:21 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,16 +18,16 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "property_set.hxx"
-#include "view.hxx"
-#include "collision_manager.hxx"
-#include "explosion.hxx"
-#include "buildings/building.hxx"
-#include "buildings/building_map.hxx"
-#include "game_obj_manager.hxx"
-#include "projectile.hxx"
-#include "vehicles/vehicle.hxx"
-#include "resource_manager.hxx"
+#include "property_set.hpp"
+#include "view.hpp"
+#include "collision_manager.hpp"
+#include "explosion.hpp"
+#include "buildings/building.hpp"
+#include "buildings/building_map.hpp"
+#include "game_obj_manager.hpp"
+#include "projectile.hpp"
+#include "vehicles/vehicle.hpp"
+#include "resource_manager.hpp"
 
 Projectile::Projectile (GameObj* p,
 			const FloatVector2d& arg_pos, const FloatVector2d& arg_velocity)

Modified: trunk/src/projectile.hpp
===================================================================
--- trunk/src/projectile.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/projectile.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: projectile.hxx,v 1.11 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: projectile.hpp,v 1.11 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef PROJECTILE_HH
 #define PROJECTILE_HH
 
-#include "vector2d.hxx"
-#include "game_obj.hxx"
-#include "resource_manager.hxx"
+#include "vector2d.hpp"
+#include "game_obj.hpp"
+#include "resource_manager.hpp"
 
 class Projectile : public GameObj
 {

Modified: trunk/src/property.cpp
===================================================================
--- trunk/src/property.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/property.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: property.cxx,v 1.7 2003/06/09 20:27:31 grumbel Exp $
+//  $Id: property.cpp,v 1.7 2003/06/09 20:27:31 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #include <iostream>
 #include <assert.h>
 #include <ClanLib/Core/System/clanstring.h>
-#include "property.hxx"
+#include "property.hpp"
 
 Property::Property(const std::string& arg_name)
   : name(arg_name), type(T_EMPTY)

Modified: trunk/src/property.hpp
===================================================================
--- trunk/src/property.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/property.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: property.hxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: property.hpp,v 1.5 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/property_set.cpp
===================================================================
--- trunk/src/property_set.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/property_set.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: property_set.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: property_set.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <assert.h>
-#include "property.hxx"
-#include "property_set.hxx"
+#include "property.hpp"
+#include "property_set.hpp"
 
 PropertySet::PropertySet()
 {

Modified: trunk/src/property_set.hpp
===================================================================
--- trunk/src/property_set.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/property_set.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: property_set.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: property_set.hpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/radar.cpp
===================================================================
--- trunk/src/radar.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/radar.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: radar.cxx,v 1.15 2003/06/23 10:01:41 grumbel Exp $
+//  $Id: radar.cpp,v 1.15 2003/06/23 10:01:41 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright(C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,13 +18,13 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/display.h>
-#include "buildings/building_map.hxx"
-#include "game_obj_manager.hxx"
-#include "radar.hxx"
-#include "math.hxx"
-#include "player.hxx"
-#include "vehicles/vehicle.hxx"
-#include "resource_manager.hxx"
+#include "buildings/building_map.hpp"
+#include "game_obj_manager.hpp"
+#include "radar.hpp"
+#include "math.hpp"
+#include "player.hpp"
+#include "vehicles/vehicle.hpp"
+#include "resource_manager.hpp"
 
 Radar::Radar(const FloatVector2d& arg_pos, 
              PlayerPtr p)

Modified: trunk/src/radar.hpp
===================================================================
--- trunk/src/radar.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/radar.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: radar.hxx,v 1.12 2003/06/23 10:01:41 grumbel Exp $
+//  $Id: radar.hpp,v 1.12 2003/06/23 10:01:41 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright(C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,10 +20,10 @@
 #ifndef RADAR_HH
 #define RADAR_HH
 
-#include "vector2d.hxx"
-#include "game_world.hxx"
-#include "gui_obj.hxx"
-#include "resource_manager.hxx"
+#include "vector2d.hpp"
+#include "game_world.hpp"
+#include "gui_obj.hpp"
+#include "resource_manager.hpp"
 
 class Building;
 class Player;

Modified: trunk/src/resource_manager.cpp
===================================================================
--- trunk/src/resource_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/resource_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: resource_manager.cxx,v 1.12 2003/09/15 20:23:53 grumbel Exp $
+//  $Id: resource_manager.cpp,v 1.12 2003/09/15 20:23:53 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -25,8 +25,8 @@
 #include <ClanLib/Core/System/error.h>
 #include <ClanLib/Core/System/cl_assert.h>
 
-#include "path_manager.hxx"
-#include "resource_manager.hxx"
+#include "path_manager.hpp"
+#include "resource_manager.hpp"
 
 ResourceManager* resources;
 

Modified: trunk/src/resource_manager.hpp
===================================================================
--- trunk/src/resource_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/resource_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: resource_manager.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: resource_manager.hpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/robot_tank.cpp
===================================================================
--- trunk/src/robot_tank.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/robot_tank.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: robot_tank.cxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: robot_tank.cpp,v 1.6 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,11 +17,11 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "vector2d.hxx"
-#include "view.hxx"
-#include "math.hxx"
-#include "resource_manager.hxx"
-#include "robot_tank.hxx"
+#include "vector2d.hpp"
+#include "view.hpp"
+#include "math.hpp"
+#include "resource_manager.hpp"
+#include "robot_tank.hpp"
 
 RobotTank::RobotTank(float x_, float y_, float orientation_, float velocity_)
 {

Modified: trunk/src/robot_tank.hpp
===================================================================
--- trunk/src/robot_tank.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/robot_tank.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: robot_tank.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: robot_tank.hpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,8 +20,8 @@
 #ifndef HEADER_ROBOT_TANK_HXX
 #define HEADER_ROBOT_TANK_HXX
 
-#include "vector2d.hxx"
-#include "vehicles/vehicle.hxx"
+#include "vector2d.hpp"
+#include "vehicles/vehicle.hpp"
 
 /** */
 class RobotTank : public Vehicle

Modified: trunk/src/rocket.cpp
===================================================================
--- trunk/src/rocket.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/rocket.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -17,13 +17,13 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "resource_manager.hxx"
-#include "collision_manager.hxx"
-#include "explosion.hxx"
-#include "particles/rocket_smoke_particle.hxx"
-#include "view.hxx"
-#include "buildings/building.hxx"
-#include "rocket.hxx"
+#include "resource_manager.hpp"
+#include "collision_manager.hpp"
+#include "explosion.hpp"
+#include "particles/rocket_smoke_particle.hpp"
+#include "view.hpp"
+#include "buildings/building.hpp"
+#include "rocket.hpp"
 
 Rocket::Rocket(const FloatVector2d& pos, float orientation)
   : pos(pos),

Modified: trunk/src/rocket.hpp
===================================================================
--- trunk/src/rocket.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/rocket.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -20,8 +20,8 @@
 #ifndef HEADER_ROCKET_HXX
 #define HEADER_ROCKET_HXX
 
-#include "vector2d.hxx"
-#include "game_obj.hxx"
+#include "vector2d.hpp"
+#include "game_obj.hpp"
 
 /** */
 class Rocket : public GameObj

Modified: trunk/src/satchel_charge.cpp
===================================================================
--- trunk/src/satchel_charge.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/satchel_charge.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: satchel_charge.cxx,v 1.2 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: satchel_charge.cpp,v 1.2 2003/06/20 20:54:23 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,12 +17,12 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "view.hxx"
-#include "alist.hxx"
-#include "explosion.hxx"
-#include "property_set.hxx"
-#include "resource_manager.hxx"
-#include "satchel_charge.hxx"
+#include "view.hpp"
+#include "alist.hpp"
+#include "explosion.hpp"
+#include "property_set.hpp"
+#include "resource_manager.hpp"
+#include "satchel_charge.hpp"
 
 SatchelCharge::SatchelCharge(const AList& lst)
 {

Modified: trunk/src/satchel_charge.hpp
===================================================================
--- trunk/src/satchel_charge.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/satchel_charge.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: satchel_charge.hxx,v 1.2 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: satchel_charge.hpp,v 1.2 2003/06/20 20:54:23 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define HEADER_SATCHEL_CHARGE_HXX
 
 #include <ClanLib/Display/sprite.h>
-#include "game_obj.hxx"
+#include "game_obj.hpp"
 
 class AList;
 

Modified: trunk/src/scm_functor.cpp
===================================================================
--- trunk/src/scm_functor.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scm_functor.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: scm_functor.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: scm_functor.cpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,7 +19,7 @@
 
 #include <iostream>
 #include <libguile.h>
-#include "scm_functor.hxx"
+#include "scm_functor.hpp"
 
 SCMFunctor::SCMFunctor(SCM arg_func)
 {

Modified: trunk/src/scm_functor.hpp
===================================================================
--- trunk/src/scm_functor.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scm_functor.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: scm_functor.hxx,v 1.5 2003/09/15 20:23:53 grumbel Exp $
+//  $Id: scm_functor.hpp,v 1.5 2003/09/15 20:23:53 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scm_sequence_hook.cpp
===================================================================
--- trunk/src/scm_sequence_hook.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scm_sequence_hook.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: scm_sequence_hook.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: scm_sequence_hook.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,7 +19,7 @@
 
 #include <iostream>
 #include <libguile.h>
-#include "scm_sequence_hook.hxx"
+#include "scm_sequence_hook.hpp"
 
 SCMSequenceHook::SCMSequenceHook(SCM arg_func)
 {

Modified: trunk/src/scm_sequence_hook.hpp
===================================================================
--- trunk/src/scm_sequence_hook.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scm_sequence_hook.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: scm_sequence_hook.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: scm_sequence_hook.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define HEADER_SCM_SEQUENCE_HOOK_HXX
 
 #include <libguile.h>
-#include "sequence_manager.hxx"
+#include "sequence_manager.hpp"
 
 /** */
 class SCMSequenceHook : public SequenceHook

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/screen.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: screen.cxx,v 1.7 2003/06/06 09:49:00 grumbel Exp $
+//  $Id: screen.cpp,v 1.7 2003/06/06 09:49:00 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "screen.hxx"
+#include "screen.hpp"
 
 Screen::Screen ()
 {

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/screen.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: screen.hxx,v 1.8 2003/06/06 09:49:00 grumbel Exp $
+//  $Id: screen.hpp,v 1.8 2003/06/06 09:49:00 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define SCREEN_HH
 
 #include <vector>
-#include "gui_obj.hxx"
+#include "gui_obj.hpp"
 
 /** A screen is a collection of gui objects, it basically represents a
     complete screen. */

Modified: trunk/src/screenshot.cpp
===================================================================
--- trunk/src/screenshot.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/screenshot.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -23,7 +23,7 @@
 #include <ClanLib/Display/display_window.h>
 #include <ClanLib/Display/pixel_buffer.h>
 #include <ClanLib/Display/pixel_format.h>
-#include "screenshot.hxx"
+#include "screenshot.hpp"
 
 void
 Screenshot::write_screenshot_pnm(const std::string& filename)

Modified: trunk/src/scripting/ai_commands.cpp
===================================================================
--- trunk/src/scripting/ai_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/ai_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ai_commands.cxx,v 1.3 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: ai_commands.cpp,v 1.3 2003/06/20 20:54:23 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,10 +17,10 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../soldier.hxx"
-#include "../ai_manager.hxx"
-#include "script_helper.hxx"
-#include "ai_commands.hxx"
+#include "../soldier.hpp"
+#include "../ai_manager.hpp"
+#include "script_helper.hpp"
+#include "ai_commands.hpp"
 
 void
 ai_goto(int handle, float x, float y)

Modified: trunk/src/scripting/ai_commands.hpp
===================================================================
--- trunk/src/scripting/ai_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/ai_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ai_commands.hxx,v 1.2 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: ai_commands.hpp,v 1.2 2003/06/20 20:54:23 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/ai_vehicle_commands.cpp
===================================================================
--- trunk/src/scripting/ai_vehicle_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/ai_vehicle_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ai_vehicle_commands.cxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: ai_vehicle_commands.cpp,v 1.5 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,9 +18,9 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../game_obj_manager.hxx"
-#include "../ai_vehicle.hxx"
-#include "ai_vehicle_commands.hxx"
+#include "../game_obj_manager.hpp"
+#include "../ai_vehicle.hpp"
+#include "ai_vehicle_commands.hpp"
 
 static AIVehicle*
 get_AIVehicle(int object_id)

Modified: trunk/src/scripting/ai_vehicle_commands.hpp
===================================================================
--- trunk/src/scripting/ai_vehicle_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/ai_vehicle_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: ai_vehicle_commands.hxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: ai_vehicle_commands.hpp,v 1.5 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/building_commands.cpp
===================================================================
--- trunk/src/scripting/building_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/building_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building_commands.cxx,v 1.13 2003/06/23 09:04:10 grumbel Exp $
+//  $Id: building_commands.cpp,v 1.13 2003/06/23 09:04:10 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,15 +19,15 @@
 
 #include <iostream>
 #include <guile/gh.h>
-#include "../guile.hxx"
-#include "../game_world.hxx"
-#include "../property.hxx"
-#include "../property_set.hxx"
-#include "../buildings/building.hxx"
-#include "../buildings/custom_building.hxx"
-#include "../buildings/building_type_manager.hxx"
-#include "../buildings/building_manager.hxx"
-#include "building_commands.hxx"
+#include "../guile.hpp"
+#include "../game_world.hpp"
+#include "../property.hpp"
+#include "../property_set.hpp"
+#include "../buildings/building.hpp"
+#include "../buildings/custom_building.hpp"
+#include "../buildings/building_type_manager.hpp"
+#include "../buildings/building_manager.hpp"
+#include "building_commands.hpp"
 
 int
 building_create(int type, int x, int y)

Modified: trunk/src/scripting/building_commands.hpp
===================================================================
--- trunk/src/scripting/building_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/building_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: building_commands.hxx,v 1.7 2003/06/23 09:04:10 grumbel Exp $
+//  $Id: building_commands.hpp,v 1.7 2003/06/23 09:04:10 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/clanlib_commands.cpp
===================================================================
--- trunk/src/scripting/clanlib_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/clanlib_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "clanlib_commands.hxx"
+#include "clanlib_commands.hpp"
 
 SCM post_keep_alive_func = SCM_BOOL_F;
 

Modified: trunk/src/scripting/comm_commands.cpp
===================================================================
--- trunk/src/scripting/comm_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/comm_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: comm_commands.cxx,v 1.3 2003/06/05 21:17:11 grumbel Exp $
+//  $Id: comm_commands.cpp,v 1.3 2003/06/05 21:17:11 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,9 +19,9 @@
 
 #include <iostream>
 #include <sstream>
-#include "../message_buffer.hxx"
-#include "../communication_dialog.hxx"
-#include "comm_commands.hxx"
+#include "../message_buffer.hpp"
+#include "../communication_dialog.hpp"
+#include "comm_commands.hpp"
 
 void
 comm_send_message(int color, const char* str) 

Modified: trunk/src/scripting/comm_commands.hpp
===================================================================
--- trunk/src/scripting/comm_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/comm_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: comm_commands.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: comm_commands.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/debug_commands.cpp
===================================================================
--- trunk/src/scripting/debug_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/debug_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: debug_commands.cxx,v 1.1 2003/06/18 13:04:21 grumbel Exp $
+//  $Id: debug_commands.cpp,v 1.1 2003/06/18 13:04:21 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,8 +20,8 @@
 #include <string.h>
 #include <stdexcept>
 #include <iostream>
-#include "../globals.hxx"
-#include "debug_commands.hxx"
+#include "../globals.hpp"
+#include "debug_commands.hpp"
 
 static
 bool& debug_lookup_flag(const char* name)

Modified: trunk/src/scripting/debug_commands.hpp
===================================================================
--- trunk/src/scripting/debug_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/debug_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: debug_commands.hxx,v 1.1 2003/06/18 13:04:21 grumbel Exp $
+//  $Id: debug_commands.hpp,v 1.1 2003/06/18 13:04:21 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/dialog_commands.hpp
===================================================================
--- trunk/src/scripting/dialog_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/dialog_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: dialog_commands.hxx,v 1.2 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: dialog_commands.hpp,v 1.2 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/display_commands.cpp
===================================================================
--- trunk/src/scripting/display_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/display_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: display_commands.cxx,v 1.3 2003/06/08 15:31:27 grumbel Exp $
+//  $Id: display_commands.cpp,v 1.3 2003/06/08 15:31:27 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,8 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../display_manager.hxx"
-#include "display_commands.hxx"
+#include "../display_manager.hpp"
+#include "display_commands.hpp"
 
 bool
 display_levelmap_visible()

Modified: trunk/src/scripting/display_commands.hpp
===================================================================
--- trunk/src/scripting/display_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/display_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: display_commands.hxx,v 1.4 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: display_commands.hpp,v 1.4 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/effect_commands.cpp
===================================================================
--- trunk/src/scripting/effect_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/effect_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: effect_commands.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: effect_commands.cpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../explosion.hxx"
-#include "../game_obj_manager.hxx"
-#include "effect_commands.hxx"
+#include "../explosion.hpp"
+#include "../game_obj_manager.hpp"
+#include "effect_commands.hpp"
 
 void effect_add_explosion(int x, int y)
 {

Modified: trunk/src/scripting/effect_commands.hpp
===================================================================
--- trunk/src/scripting/effect_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/effect_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: effect_commands.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: effect_commands.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/feuerkraft.i
===================================================================
--- trunk/src/scripting/feuerkraft.i	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/feuerkraft.i	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,42 +1,42 @@
 %module feuerkraft
 %{
-#include "ai_vehicle_commands.hxx"
-#include "ai_commands.hxx"
-#include "building_commands.hxx"
-#include "comm_commands.hxx"
-#include "display_commands.hxx"
-#include "effect_commands.hxx"
-#include "gameobj_commands.hxx"
-#include "input_commands.hxx"
-#include "menu_commands.hxx"
-#include "object_commands.hxx"
-#include "player_commands.hxx"
-#include "sequence_commands.hxx"
-#include "sound_commands.hxx"
-#include "trigger_commands.hxx"
-#include "vehicle_commands.hxx"
-#include "game_commands.hxx"
-#include "debug_commands.hxx"
-#include "clanlib_commands.hxx"
+#include "ai_vehicle_commands.hpp"
+#include "ai_commands.hpp"
+#include "building_commands.hpp"
+#include "comm_commands.hpp"
+#include "display_commands.hpp"
+#include "effect_commands.hpp"
+#include "gameobj_commands.hpp"
+#include "input_commands.hpp"
+#include "menu_commands.hpp"
+#include "object_commands.hpp"
+#include "player_commands.hpp"
+#include "sequence_commands.hpp"
+#include "sound_commands.hpp"
+#include "trigger_commands.hpp"
+#include "vehicle_commands.hpp"
+#include "game_commands.hpp"
+#include "debug_commands.hpp"
+#include "clanlib_commands.hpp"
 %}
 
-%include "ai_vehicle_commands.hxx"
-%include "ai_commands.hxx"
-%include "building_commands.hxx"
-%include "comm_commands.hxx"
-%include "display_commands.hxx"
-%include "effect_commands.hxx"
-%include "gameobj_commands.hxx"
-%include "input_commands.hxx"
-%include "menu_commands.hxx"
-%include "object_commands.hxx"
-%include "player_commands.hxx"
-%include "sequence_commands.hxx"
-%include "sound_commands.hxx"
-%include "trigger_commands.hxx"
-%include "vehicle_commands.hxx"
-%include "game_commands.hxx"
-%include "debug_commands.hxx"
-%include "clanlib_commands.hxx"
+%include "ai_vehicle_commands.hpp"
+%include "ai_commands.hpp"
+%include "building_commands.hpp"
+%include "comm_commands.hpp"
+%include "display_commands.hpp"
+%include "effect_commands.hpp"
+%include "gameobj_commands.hpp"
+%include "input_commands.hpp"
+%include "menu_commands.hpp"
+%include "object_commands.hpp"
+%include "player_commands.hpp"
+%include "sequence_commands.hpp"
+%include "sound_commands.hpp"
+%include "trigger_commands.hpp"
+%include "vehicle_commands.hpp"
+%include "game_commands.hpp"
+%include "debug_commands.hpp"
+%include "clanlib_commands.hpp"
 
 /* EOF */
\ No newline at end of file

Modified: trunk/src/scripting/game_commands.cpp
===================================================================
--- trunk/src/scripting/game_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/game_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_commands.cxx,v 1.1 2003/06/10 00:38:50 grumbel Exp $
+//  $Id: game_commands.cpp,v 1.1 2003/06/10 00:38:50 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../game_session_manager.hxx"
-#include "game_commands.hxx"
+#include "../game_session_manager.hpp"
+#include "game_commands.hpp"
 
 void
 game_pause()

Modified: trunk/src/scripting/game_commands.hpp
===================================================================
--- trunk/src/scripting/game_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/game_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: game_commands.hxx,v 1.2 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: game_commands.hpp,v 1.2 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/gameobj_commands.cpp
===================================================================
--- trunk/src/scripting/gameobj_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/gameobj_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: gameobj_commands.cxx,v 1.9 2003/06/22 21:51:21 grumbel Exp $
+//  $Id: gameobj_commands.cpp,v 1.9 2003/06/22 21:51:21 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,20 +17,20 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../guile.hxx"
-#include "../property_set.hxx"
-#include "../property.hxx"
+#include "../guile.hpp"
+#include "../property_set.hpp"
+#include "../property.hpp"
 
-#include "../satchel_charge.hxx"
-#include "../soldier.hxx"
-#include "../vehicles/vehicle.hxx"
-#include "../vehicles/helicopter.hxx"
-#include "../unit.hxx"
+#include "../satchel_charge.hpp"
+#include "../soldier.hpp"
+#include "../vehicles/vehicle.hpp"
+#include "../vehicles/helicopter.hpp"
+#include "../unit.hpp"
 
-#include "../game_obj.hxx"
-#include "../game_obj_manager.hxx"
-#include "../game_obj_factory.hxx"
-#include "gameobj_commands.hxx"
+#include "../game_obj.hpp"
+#include "../game_obj_manager.hpp"
+#include "../game_obj_factory.hpp"
+#include "gameobj_commands.hpp"
 
 SCM
 gameobj_get_property(int handle, const char* name)

Modified: trunk/src/scripting/gameobj_commands.hpp
===================================================================
--- trunk/src/scripting/gameobj_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/gameobj_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: gameobj_commands.hxx,v 1.7 2003/06/22 21:51:21 grumbel Exp $
+//  $Id: gameobj_commands.hpp,v 1.7 2003/06/22 21:51:21 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/input_commands.cpp
===================================================================
--- trunk/src/scripting/input_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/input_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: input_commands.cxx,v 1.5 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: input_commands.cpp,v 1.5 2003/06/20 20:54:23 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,12 +18,12 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/mouse.h>
-#include "../scm_functor.hxx"
-#include "../keys.hxx"
-#include "../view.hxx"
-#include "../keyboard_manager.hxx"
-#include "../input/input_manager.hxx"
-#include "input_commands.hxx"
+#include "../scm_functor.hpp"
+#include "../keys.hpp"
+#include "../view.hpp"
+#include "../keyboard_manager.hpp"
+#include "../input/input_manager.hpp"
+#include "input_commands.hpp"
 
 void
 input_register_callback(const char* key, SCM func)

Modified: trunk/src/scripting/input_commands.hpp
===================================================================
--- trunk/src/scripting/input_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/input_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: input_commands.hxx,v 1.6 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: input_commands.hpp,v 1.6 2003/06/20 20:54:23 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -24,7 +24,7 @@
 //@{
 
 /** @brief Register a callback on a key press event 
- *  @param key   a string representing the key, see keys.hxx
+ *  @param key   a string representing the key, see keys.hpp
  *  @param func  a procedure taking zero arguments
  * 
  *  Currently this is a bit limited and buggy, mouse events and other

Modified: trunk/src/scripting/menu_commands.cpp
===================================================================
--- trunk/src/scripting/menu_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/menu_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: menu_commands.cxx,v 1.7 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: menu_commands.cpp,v 1.7 2003/10/31 23:24:41 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,10 +18,10 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../scm_functor.hxx"
-#include "../menu_handle_mgr.hxx"
-#include "../display_manager.hxx"
-#include "menu_commands.hxx"
+#include "../scm_functor.hpp"
+#include "../menu_handle_mgr.hpp"
+#include "../display_manager.hpp"
+#include "menu_commands.hpp"
 
 void
 menu_show(int menu_id)

Modified: trunk/src/scripting/menu_commands.hpp
===================================================================
--- trunk/src/scripting/menu_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/menu_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: menu_commands.hxx,v 1.4 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: menu_commands.hpp,v 1.4 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/object_commands.cpp
===================================================================
--- trunk/src/scripting/object_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/object_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: object_commands.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: object_commands.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,8 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../game_obj_manager.hxx"
-#include "object_commands.hxx"
+#include "../game_obj_manager.hpp"
+#include "object_commands.hpp"
 
 void object_remove(int id)
 {

Modified: trunk/src/scripting/object_commands.hpp
===================================================================
--- trunk/src/scripting/object_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/object_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: object_commands.hxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: object_commands.hpp,v 1.3 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/player_commands.cpp
===================================================================
--- trunk/src/scripting/player_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/player_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: player_commands.cxx,v 1.6 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: player_commands.cpp,v 1.6 2003/06/17 22:06:13 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,11 +18,11 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../game_obj.hxx"
-#include "../unit.hxx"
-#include "../player.hxx"
-#include "../game_obj_manager.hxx"
-#include "player_commands.hxx"
+#include "../game_obj.hpp"
+#include "../unit.hpp"
+#include "../player.hpp"
+#include "../game_obj_manager.hpp"
+#include "player_commands.hpp"
 
 extern Player* player;
 

Modified: trunk/src/scripting/player_commands.hpp
===================================================================
--- trunk/src/scripting/player_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/player_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: player_commands.hxx,v 1.4 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: player_commands.hpp,v 1.4 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/script_helper.cpp
===================================================================
--- trunk/src/scripting/script_helper.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/script_helper.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: script_helper.cxx,v 1.1 2003/06/18 13:03:13 grumbel Exp $
+//  $Id: script_helper.cpp,v 1.1 2003/06/18 13:03:13 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "script_helper.hxx"
+#include "script_helper.hpp"
 
 
 

Modified: trunk/src/scripting/script_helper.hpp
===================================================================
--- trunk/src/scripting/script_helper.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/script_helper.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: script_helper.hxx,v 1.3 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: script_helper.hpp,v 1.3 2003/06/20 20:54:23 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,8 +21,8 @@
 #define HEADER_SCRIPT_HELPER_HXX
 
 #include <iostream>
-#include "../ai_manager.hxx"
-#include "../game_obj_manager.hxx"
+#include "../ai_manager.hpp"
+#include "../game_obj_manager.hpp"
 
 namespace Scripting {
 

Modified: trunk/src/scripting/scripting.hpp
===================================================================
--- trunk/src/scripting/scripting.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/scripting.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: scripting.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: scripting.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/sequence_commands.cpp
===================================================================
--- trunk/src/scripting/sequence_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/sequence_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sequence_commands.cxx,v 1.4 2003/09/15 20:23:53 grumbel Exp $
+//  $Id: sequence_commands.cpp,v 1.4 2003/09/15 20:23:53 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../scm_functor.hxx"
-#include "../sequence_manager.hxx"
-#include "sequence_commands.hxx"
+#include "../scm_functor.hpp"
+#include "../sequence_manager.hpp"
+#include "sequence_commands.hpp"
 
 int  sequence_start()
 {

Modified: trunk/src/scripting/sequence_commands.hpp
===================================================================
--- trunk/src/scripting/sequence_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/sequence_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sequence_commands.hxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: sequence_commands.hpp,v 1.3 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/sound_commands.cpp
===================================================================
--- trunk/src/scripting/sound_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/sound_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sound_commands.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sound_commands.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,8 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../sound/sound.hxx"
-#include "sound_commands.hxx"
+#include "../sound/sound.hpp"
+#include "sound_commands.hpp"
 
 void
 sound_play_music(const char* name)

Modified: trunk/src/scripting/sound_commands.hpp
===================================================================
--- trunk/src/scripting/sound_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/sound_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sound_commands.hxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: sound_commands.hpp,v 1.3 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/trigger_commands.cpp
===================================================================
--- trunk/src/scripting/trigger_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/trigger_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: trigger_commands.cxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: trigger_commands.cpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../trigger_manager.hxx"
-#include "../scm_functor.hxx"
-#include "trigger_commands.hxx"
+#include "../trigger_manager.hpp"
+#include "../scm_functor.hpp"
+#include "trigger_commands.hpp"
 
 // FIXME: return handles to the triggers to allow removal of them
 

Modified: trunk/src/scripting/trigger_commands.hpp
===================================================================
--- trunk/src/scripting/trigger_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/trigger_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: trigger_commands.hxx,v 1.4 2003/06/09 20:27:31 grumbel Exp $
+//  $Id: trigger_commands.hpp,v 1.4 2003/06/09 20:27:31 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/vehicle_commands.cpp
===================================================================
--- trunk/src/scripting/vehicle_commands.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/vehicle_commands.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vehicle_commands.cxx,v 1.2 2003/06/07 18:57:43 grumbel Exp $
+//  $Id: vehicle_commands.cpp,v 1.2 2003/06/07 18:57:43 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,10 +17,10 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../vehicles/helicopter.hxx"
-#include "../vehicles/vehicle.hxx"
-#include "../game_obj_manager.hxx"
-#include "vehicle_commands.hxx"
+#include "../vehicles/helicopter.hpp"
+#include "../vehicles/vehicle.hpp"
+#include "../game_obj_manager.hpp"
+#include "vehicle_commands.hpp"
 
 int vehicle_find_nearest(float x, float y, float max_distance)
 {

Modified: trunk/src/scripting/vehicle_commands.hpp
===================================================================
--- trunk/src/scripting/vehicle_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/vehicle_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vehicle_commands.hxx,v 1.7 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: vehicle_commands.hpp,v 1.7 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/scripting/weapon_commands.hpp
===================================================================
--- trunk/src/scripting/weapon_commands.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/scripting/weapon_commands.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: weapon_commands.hxx,v 1.3 2003/06/17 22:06:13 grumbel Exp $
+//  $Id: weapon_commands.hpp,v 1.3 2003/06/17 22:06:13 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/sequence_manager.cpp
===================================================================
--- trunk/src/sequence_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sequence_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sequence_manager.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sequence_manager.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,7 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "sequence_manager.hxx"
+#include "sequence_manager.hpp"
 
 SequenceManager* SequenceManager::current_ = 0; 
 

Modified: trunk/src/sequence_manager.hpp
===================================================================
--- trunk/src/sequence_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sequence_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sequence_manager.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sequence_manager.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/sexpr_world_reader.cpp
===================================================================
--- trunk/src/sexpr_world_reader.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sexpr_world_reader.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sexpr_world_reader.cxx,v 1.6 2003/08/20 00:15:10 grumbel Exp $
+//  $Id: sexpr_world_reader.cpp,v 1.6 2003/08/20 00:15:10 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,9 +18,9 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <assert.h>
-#include "guile.hxx"
-#include "world_builder.hxx"
-#include "sexpr_world_reader.hxx"
+#include "guile.hpp"
+#include "world_builder.hpp"
+#include "sexpr_world_reader.hpp"
 
 SexprWorldReader::SexprWorldReader(const std::string& arg_filename, 
                                    WorldBuilder* arg_builder)

Modified: trunk/src/sexpr_world_reader.hpp
===================================================================
--- trunk/src/sexpr_world_reader.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sexpr_world_reader.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sexpr_world_reader.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sexpr_world_reader.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/shockwave.cpp
===================================================================
--- trunk/src/shockwave.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/shockwave.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: shockwave.cxx,v 1.7 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: shockwave.cpp,v 1.7 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "view.hxx"
-#include "shockwave.hxx"
-#include "resource_manager.hxx"
+#include "view.hpp"
+#include "shockwave.hpp"
+#include "resource_manager.hpp"
 
 Shockwave::Shockwave(FloatVector2d arg_pos) 
   : pos (arg_pos)

Modified: trunk/src/shockwave.hpp
===================================================================
--- trunk/src/shockwave.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/shockwave.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: shockwave.hxx,v 1.8 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: shockwave.hpp,v 1.8 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef SHOCKWAVE_HH
 #define SHOCKWAVE_HH
 
-#include "vector2d.hxx"
-#include "game_obj.hxx"
-#include "resource_manager.hxx"
+#include "vector2d.hpp"
+#include "game_obj.hpp"
+#include "resource_manager.hpp"
 
 class Shockwave : public GameObj
 {

Modified: trunk/src/shortcut_pathfinder.cpp
===================================================================
--- trunk/src/shortcut_pathfinder.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/shortcut_pathfinder.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: shortcut_pathfinder.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: shortcut_pathfinder.cpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #include <ClanLib/core.h>
 #include <iostream>
 #include <unistd.h>
-#include "shortcut_pathfinder.hxx"
+#include "shortcut_pathfinder.hpp"
 
 struct NodeCost;
 struct NodeWalkable;
@@ -185,7 +185,7 @@
 #endif
 
 // Local Variables:
-// compile-command: "g++-3.2 -DTESTME -g -Wall -O2 shortcut_pathfinder.cxx  -o shortcut_pathfinder -lclanCore"
+// compile-command: "g++-3.2 -DTESTME -g -Wall -O2 shortcut_pathfinder.cpp  -o shortcut_pathfinder -lclanCore"
 // End:
 
 /* EOF */

Modified: trunk/src/shortcut_pathfinder.hpp
===================================================================
--- trunk/src/shortcut_pathfinder.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/shortcut_pathfinder.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: shortcut_pathfinder.hxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: shortcut_pathfinder.hpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,8 +22,8 @@
 
 #include <queue>
 #include <vector>
-#include "field.hxx"
-#include "pathfinder.hxx"
+#include "field.hpp"
+#include "pathfinder.hpp"
 
 struct Node {
   unsigned int visited : 1;
@@ -358,7 +358,7 @@
 #endif
 
 // Local Variables:
-// compile-command: "g++-3.2 -DTESTME -Wall -O2 shortcut_pathfinder.cxx  -o shortcut_pathfinder -lclanCore"
+// compile-command: "g++-3.2 -DTESTME -Wall -O2 shortcut_pathfinder.cpp  -o shortcut_pathfinder -lclanCore"
 // End:
 
 /* EOF */

Modified: trunk/src/soldier.cpp
===================================================================
--- trunk/src/soldier.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/soldier.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: soldier.cxx,v 1.18 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: soldier.cpp,v 1.18 2003/06/20 20:54:23 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,14 +19,14 @@
 
 #include <iostream>
 
-#include "buildings/building_map.hxx"
-#include "alist.hxx"
-#include "math.hxx"
-#include "view.hxx"
-#include "input/controller.hxx"
-#include "property_set.hxx"
-#include "ai_manager.hxx"
-#include "soldier.hxx"
+#include "buildings/building_map.hpp"
+#include "alist.hpp"
+#include "math.hpp"
+#include "view.hpp"
+#include "input/controller.hpp"
+#include "property_set.hpp"
+#include "ai_manager.hpp"
+#include "soldier.hpp"
 
 Soldier::Soldier(const AList& lst) 
   : ai(0),

Modified: trunk/src/soldier.hpp
===================================================================
--- trunk/src/soldier.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/soldier.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: soldier.hxx,v 1.16 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: soldier.hpp,v 1.16 2003/06/20 20:54:23 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef SOLDIER_HH
 #define SOLDIER_HH
 
-#include "soldier_ai.hxx"
-#include "unit.hxx"
-#include "resource_manager.hxx"
+#include "soldier_ai.hpp"
+#include "unit.hpp"
+#include "resource_manager.hpp"
 
 class AList;
 class SoldierAI;

Modified: trunk/src/soldier_ai.cpp
===================================================================
--- trunk/src/soldier_ai.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/soldier_ai.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: soldier_ai.cxx,v 1.2 2003/06/18 14:38:28 grumbel Exp $
+//  $Id: soldier_ai.cpp,v 1.2 2003/06/18 14:38:28 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,9 +18,9 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "math.hxx"
-#include "soldier.hxx"
-#include "soldier_ai.hxx"
+#include "math.hpp"
+#include "soldier.hpp"
+#include "soldier_ai.hpp"
 
 SoldierAI::SoldierAI(Soldier* arg_soldier)
   : soldier(arg_soldier),

Modified: trunk/src/soldier_ai.hpp
===================================================================
--- trunk/src/soldier_ai.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/soldier_ai.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: soldier_ai.hxx,v 1.2 2003/06/18 14:38:28 grumbel Exp $
+//  $Id: soldier_ai.hpp,v 1.2 2003/06/18 14:38:28 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,9 +20,9 @@
 #ifndef HEADER_SOLDIER_AI_HXX
 #define HEADER_SOLDIER_AI_HXX
 
-#include "vector2d.hxx"
-#include "input/controller.hxx"
-#include "ai.hxx"
+#include "vector2d.hpp"
+#include "input/controller.hpp"
+#include "ai.hpp"
 
 class Soldier;
 

Modified: trunk/src/sound/sound.cpp
===================================================================
--- trunk/src/sound/sound.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sound/sound.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sound.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sound.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,10 +20,10 @@
 #include <ClanLib/Core/System/error.h>
 #include <iostream>
 #include <assert.h>
-#include "../path_manager.hxx"
-#include "../globals.hxx"
-#include "sound_dummy.hxx"
-#include "sound_real.hxx"
+#include "../path_manager.hpp"
+#include "../globals.hpp"
+#include "sound_dummy.hpp"
+#include "sound_real.hpp"
 
 PingusSound* PingusSound::sound;
 

Modified: trunk/src/sound/sound.hpp
===================================================================
--- trunk/src/sound/sound.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sound/sound.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sound.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sound.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,7 +21,7 @@
 #define HEADER_PINGUS_SOUND_HXX
 
 #include <string>
-#include "sounds.hxx"
+#include "sounds.hpp"
 
 class PingusSound
 {

Modified: trunk/src/sound/sound_dummy.cpp
===================================================================
--- trunk/src/sound/sound_dummy.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sound/sound_dummy.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sound_dummy.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sound_dummy.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../globals.hxx"
-#include "sound_dummy.hxx"
+#include "../globals.hpp"
+#include "sound_dummy.hpp"
 
 namespace Sound {
 

Modified: trunk/src/sound/sound_dummy.hpp
===================================================================
--- trunk/src/sound/sound_dummy.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sound/sound_dummy.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sound_dummy.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sound_dummy.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #ifndef HEADER_PINGUS_SOUND_DUMMY_HXX
 #define HEADER_PINGUS_SOUND_DUMMY_HXX
 
-#include "sound.hxx"
+#include "sound.hpp"
 
 namespace Sound {
 

Modified: trunk/src/sound/sound_real.cpp
===================================================================
--- trunk/src/sound/sound_real.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sound/sound_real.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sound_real.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sound_real.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -23,9 +23,9 @@
 #include <ClanLib/Core/System/error.h>
 
 #include <iostream>
-#include "../globals.hxx"
-#include "sound_res_mgr.hxx"
-#include "sound_real.hxx"
+#include "../globals.hpp"
+#include "sound_res_mgr.hpp"
+#include "sound_real.hpp"
 
 #ifdef HAVE_LIBCLANVORBIS
 #  include <ClanLib/vorbis.h>

Modified: trunk/src/sound/sound_real.hpp
===================================================================
--- trunk/src/sound/sound_real.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sound/sound_real.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sound_real.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sound_real.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,7 +22,7 @@
 
 #include <config.h>
 #include <vector>
-#include "sound.hxx"
+#include "sound.hpp"
 #include <ClanLib/Sound/soundbuffer_session.h>
 
 class CL_SoundBuffer;

Modified: trunk/src/sound/sound_res_mgr.cpp
===================================================================
--- trunk/src/sound/sound_res_mgr.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sound/sound_res_mgr.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sound_res_mgr.cxx,v 1.3 2003/06/07 16:16:08 grumbel Exp $
+//  $Id: sound_res_mgr.cpp,v 1.3 2003/06/07 16:16:08 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,10 +19,10 @@
 
 #include <ClanLib/sound.h>
 #include <iostream>
-#include "../path_manager.hxx"
-#include "../globals.hxx"
+#include "../path_manager.hpp"
+#include "../globals.hpp"
 
-#include "sound_res_mgr.hxx"
+#include "sound_res_mgr.hpp"
 
 SoundResMgr::SoundMap SoundResMgr::sound_map;
 

Modified: trunk/src/sound/sound_res_mgr.hpp
===================================================================
--- trunk/src/sound/sound_res_mgr.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sound/sound_res_mgr.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sound_res_mgr.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sound_res_mgr.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/sound/sounds.hpp
===================================================================
--- trunk/src/sound/sounds.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/sound/sounds.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: sounds.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: sounds.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/start_screen.cpp
===================================================================
--- trunk/src/start_screen.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/start_screen.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: start_screen.cxx,v 1.4 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: start_screen.cpp,v 1.4 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Core/System/system.h>
-#include "start_screen.hxx"
-#include "resource_manager.hxx"
+#include "start_screen.hpp"
+#include "resource_manager.hpp"
 
 StartScreen::StartScreen (CL_DisplayWindow* arg_display)
   : display (arg_display),

Modified: trunk/src/start_screen.hpp
===================================================================
--- trunk/src/start_screen.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/start_screen.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: start_screen.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: start_screen.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/system.cpp
===================================================================
--- trunk/src/system.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/system.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: system.cxx,v 1.5 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: system.cpp,v 1.5 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 1999 Ingo Ruhnke <grumbel at gmx.de>
@@ -39,8 +39,8 @@
 #include <ClanLib/Core/System/clanstring.h>
 #include "gettext.h"
 
-//#include "PingusError.hxx" 
-#include "system.hxx"
+//#include "PingusError.hpp" 
+#include "system.hpp"
 
 int System::verbose;
 std::string System::default_email;

Modified: trunk/src/system.hpp
===================================================================
--- trunk/src/system.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/system.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: system.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: system.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 1999 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/tree.cpp
===================================================================
--- trunk/src/tree.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/tree.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tree.cxx,v 1.12 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: tree.cpp,v 1.12 2003/06/20 20:54:23 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,12 +18,12 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "assert.hxx"
-#include "view.hxx"
-#include "property_set.hxx"
-#include "resource_manager.hxx"
-#include "alist.hxx"
-#include "tree.hxx"
+#include "assert.hpp"
+#include "view.hpp"
+#include "property_set.hpp"
+#include "resource_manager.hpp"
+#include "alist.hpp"
+#include "tree.hpp"
 
 Tree::Tree (const AList& lst)
 {

Modified: trunk/src/tree.hpp
===================================================================
--- trunk/src/tree.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/tree.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tree.hxx,v 1.12 2003/06/20 20:54:23 grumbel Exp $
+//  $Id: tree.hpp,v 1.12 2003/06/20 20:54:23 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,10 +21,10 @@
 #define TREE_HH
 
 #include <string>
-#include "vector2d.hxx"
+#include "vector2d.hpp"
 #include <ClanLib/Display/sprite.h>
 
-#include "game_obj.hxx"
+#include "game_obj.hpp"
 
 class AList;
 

Modified: trunk/src/trigger_manager.cpp
===================================================================
--- trunk/src/trigger_manager.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/trigger_manager.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: trigger_manager.cxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: trigger_manager.cpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,7 +19,7 @@
 
 #include <iostream>
 #include <algorithm>
-#include "trigger_manager.hxx"
+#include "trigger_manager.hpp"
 
 TriggerManager* TriggerManager::current_ = 0;
 

Modified: trunk/src/trigger_manager.hpp
===================================================================
--- trunk/src/trigger_manager.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/trigger_manager.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: trigger_manager.hxx,v 1.3 2003/06/22 22:23:00 grumbel Exp $
+//  $Id: trigger_manager.hpp,v 1.3 2003/06/22 22:23:00 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,10 +22,10 @@
 
 #include <iostream>
 #include <vector>
-#include "unit.hxx"
-#include "game_world.hxx"
-#include "player.hxx"
-#include "game_obj_manager.hxx"
+#include "unit.hpp"
+#include "game_world.hpp"
+#include "player.hpp"
+#include "game_obj_manager.hpp"
 
 extern Player* player;
 

Modified: trunk/src/unit.cpp
===================================================================
--- trunk/src/unit.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/unit.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: unit.cxx,v 1.5 2003/08/20 00:02:46 grumbel Exp $
+//  $Id: unit.cpp,v 1.5 2003/08/20 00:02:46 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,10 +17,10 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "property_set.hxx"
-#include "player.hxx"
-#include "radar.hxx"
-#include "unit.hxx"
+#include "property_set.hpp"
+#include "player.hpp"
+#include "radar.hpp"
+#include "unit.hpp"
 
 extern Player* player;
 

Modified: trunk/src/unit.hpp
===================================================================
--- trunk/src/unit.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/unit.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: unit.hxx,v 1.7 2003/06/23 10:01:41 grumbel Exp $
+//  $Id: unit.hpp,v 1.7 2003/06/23 10:01:41 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,8 +20,8 @@
 #ifndef HEADER_FEUERKRAFT_UNIT_HXX
 #define HEADER_FEUERKRAFT_UNIT_HXX
 
-#include "game_obj.hxx"
-#include "vector2d.hxx"
+#include "game_obj.hpp"
+#include "vector2d.hpp"
 
 class Controller;
 

Modified: trunk/src/vector2d.cpp
===================================================================
--- trunk/src/vector2d.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vector2d.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vector2d.cxx,v 1.6 2003/06/09 20:27:31 grumbel Exp $
+//  $Id: vector2d.cpp,v 1.6 2003/06/09 20:27:31 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,7 +19,7 @@
 
 #include <math.h>
 #include <iostream>
-#include "vector2d.hxx"
+#include "vector2d.hpp"
 
 FloatVector2d::FloatVector2d()
   : x(0.0f), y(0.0f)

Modified: trunk/src/vector2d.hpp
===================================================================
--- trunk/src/vector2d.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vector2d.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vector2d.hxx,v 1.6 2003/08/20 00:15:10 grumbel Exp $
+//  $Id: vector2d.hpp,v 1.6 2003/08/20 00:15:10 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/vehicle_ai.cpp
===================================================================
--- trunk/src/vehicle_ai.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicle_ai.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vehicle_ai.cxx,v 1.2 2003/06/22 17:22:47 grumbel Exp $
+//  $Id: vehicle_ai.cpp,v 1.2 2003/06/22 17:22:47 grumbel Exp $
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -17,9 +17,9 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "math.hxx"
-#include "vehicles/vehicle.hxx"
-#include "vehicle_ai.hxx"
+#include "math.hpp"
+#include "vehicles/vehicle.hpp"
+#include "vehicle_ai.hpp"
 
 VehicleAI::VehicleAI(Vehicle* arg_vehicle)
   : vehicle(arg_vehicle)

Modified: trunk/src/vehicle_ai.hpp
===================================================================
--- trunk/src/vehicle_ai.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicle_ai.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vehicle_ai.hxx,v 1.2 2003/06/18 13:03:13 grumbel Exp $
+//  $Id: vehicle_ai.hpp,v 1.2 2003/06/18 13:03:13 grumbel Exp $
 // 
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,10 +20,10 @@
 #ifndef HEADER_VEHICLE_AI_HXX
 #define HEADER_VEHICLE_AI_HXX
 
-#include "line_segments.hxx"
-#include "input/controller.hxx"
-#include "ai.hxx"
-#include "vehicles/vehicle.hxx"
+#include "line_segments.hpp"
+#include "input/controller.hpp"
+#include "ai.hpp"
+#include "vehicles/vehicle.hpp"
 
 /** class for AI driven vehicles */
 class VehicleAI : public AI

Modified: trunk/src/vehicle_status.cpp
===================================================================
--- trunk/src/vehicle_status.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicle_status.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vehicle_status.cxx,v 1.9 2003/06/08 15:31:27 grumbel Exp $
+//  $Id: vehicle_status.cpp,v 1.9 2003/06/08 15:31:27 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,10 +18,10 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <ClanLib/Display/display.h>
-#include "resource_manager.hxx"
-#include "player.hxx"
-#include "vehicles/vehicle.hxx"
-#include "vehicle_status.hxx"
+#include "resource_manager.hpp"
+#include "player.hpp"
+#include "vehicles/vehicle.hpp"
+#include "vehicle_status.hpp"
 
 extern Player* player;
 

Modified: trunk/src/vehicle_status.hpp
===================================================================
--- trunk/src/vehicle_status.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicle_status.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vehicle_status.hxx,v 1.7 2003/06/06 09:49:00 grumbel Exp $
+//  $Id: vehicle_status.hpp,v 1.7 2003/06/06 09:49:00 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #ifndef VEHICLESTATUS_HH
 #define VEHICLESTATUS_HH
 
-#include "gui_obj.hxx"
+#include "gui_obj.hpp"
 
 class VehicleStatus : public GuiObj
 {

Modified: trunk/src/vehicle_view.cpp
===================================================================
--- trunk/src/vehicle_view.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicle_view.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vehicle_view.cxx,v 1.11 2003/06/06 14:25:47 grumbel Exp $
+//  $Id: vehicle_view.cpp,v 1.11 2003/06/06 14:25:47 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,7 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <math.h>
-#include "vehicle_view.hxx"
+#include "vehicle_view.hpp"
 
 VehicleViewUpdater::VehicleViewUpdater (Unit* arg_unit)
   : unit(arg_unit)

Modified: trunk/src/vehicle_view.hpp
===================================================================
--- trunk/src/vehicle_view.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicle_view.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vehicle_view.hxx,v 1.10 2003/06/04 13:10:09 grumbel Exp $
+//  $Id: vehicle_view.hpp,v 1.10 2003/06/04 13:10:09 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,8 +20,8 @@
 #ifndef HEADER_FEUERKRAFT_VEHICLEVIEWUPDATER_HH
 #define HEADER_FEUERKRAFT_VEHICLEVIEWUPDATER_HH
 
-#include "vehicles/vehicle.hxx"
-#include "view.hxx"
+#include "vehicles/vehicle.hpp"
+#include "view.hpp"
 
 // FIXME: Rename to UnitViewUpdater
 class VehicleViewUpdater : public ViewUpdater

Modified: trunk/src/vehicles/helicopter.cpp
===================================================================
--- trunk/src/vehicles/helicopter.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/helicopter.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: helicopter.cxx,v 1.11 2003/06/22 17:22:47 grumbel Exp $
+//  $Id: helicopter.cpp,v 1.11 2003/06/22 17:22:47 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,15 +18,15 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../alist.hxx"
-#include "../projectile.hxx"
-#include "../explosion.hxx"
-#include "../vehicle_ai.hxx"
-#include "../ai_manager.hxx"
-#include "../rocket.hxx"
-#include "../resource_manager.hxx"
-#include "../math.hxx"
-#include "helicopter.hxx"
+#include "../alist.hpp"
+#include "../projectile.hpp"
+#include "../explosion.hpp"
+#include "../vehicle_ai.hpp"
+#include "../ai_manager.hpp"
+#include "../rocket.hpp"
+#include "../resource_manager.hpp"
+#include "../math.hpp"
+#include "helicopter.hpp"
 
 Helicopter::Helicopter(const AList& lst)
   : strafe (0.0),

Modified: trunk/src/vehicles/helicopter.hpp
===================================================================
--- trunk/src/vehicles/helicopter.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/helicopter.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: helicopter.hxx,v 1.13 2003/06/22 17:22:47 grumbel Exp $
+//  $Id: helicopter.hpp,v 1.13 2003/06/22 17:22:47 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,9 +21,9 @@
 #define HELICOPTER_HH
 
 #include <ClanLib/Display/sprite.h>
-#include "../energie.hxx"
-#include "vehicle.hxx"
-#include "rotor.hxx"
+#include "../energie.hpp"
+#include "vehicle.hpp"
+#include "rotor.hpp"
 
 class VehicleAI;
 class AList;

Modified: trunk/src/vehicles/jeep.cpp
===================================================================
--- trunk/src/vehicles/jeep.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/jeep.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: jeep.cxx,v 1.6 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: jeep.cpp,v 1.6 2003/06/03 14:11:22 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -19,9 +19,9 @@
 
 #include <ClanLib/gl.h>
 #include <iostream>
-#include "../buildings/building_map.hxx"
-#include "../resource_manager.hxx"
-#include "jeep.hxx"
+#include "../buildings/building_map.hpp"
+#include "../resource_manager.hpp"
+#include "jeep.hpp"
 
 const float circle = 6.2831854f;
 

Modified: trunk/src/vehicles/jeep.hpp
===================================================================
--- trunk/src/vehicles/jeep.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/jeep.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: jeep.hxx,v 1.10 2003/06/04 10:59:00 grumbel Exp $
+//  $Id: jeep.hpp,v 1.10 2003/06/04 10:59:00 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,8 +22,8 @@
 
 #include <ClanLib/Display/sprite.h>
 
-#include "../energie.hxx"
-#include "vehicle.hxx"
+#include "../energie.hpp"
+#include "vehicle.hpp"
 
 class Projectile;
 

Modified: trunk/src/vehicles/rotor.cpp
===================================================================
--- trunk/src/vehicles/rotor.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/rotor.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -17,10 +17,10 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include "../view.hxx"
-#include "../resource_manager.hxx"
-#include "../math.hxx"
-#include "rotor.hxx"
+#include "../view.hpp"
+#include "../resource_manager.hpp"
+#include "../math.hpp"
+#include "rotor.hpp"
 
 Rotor::Rotor(const RotorDescription& desc)
 {

Modified: trunk/src/vehicles/rotor.hpp
===================================================================
--- trunk/src/vehicles/rotor.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/rotor.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -21,7 +21,7 @@
 #define HEADER_FEUERKRAFT_VEHICLES_ROTOR_HXX
 
 #include <ClanLib/Display/sprite.h>
-#include "rotor_description.hxx"
+#include "rotor_description.hpp"
 
 class View;
 

Modified: trunk/src/vehicles/tank.cpp
===================================================================
--- trunk/src/vehicles/tank.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/tank.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tank.cxx,v 1.26 2003/06/22 17:22:47 grumbel Exp $
+//  $Id: tank.cpp,v 1.26 2003/06/22 17:22:47 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -21,25 +21,25 @@
 #include <iostream>
 #include <string>
 
-#include "../assert.hxx"
-#include "../mine.hxx"
-#include "../alist.hxx"
-#include "../property_set.hxx"
-#include "../groundmap/ground_map.hxx"
-#include "../buildings/building_map.hxx"
-#include "../particles/smoke_particle.hxx"
-#include "../particles/sand_particle.hxx"
-#include "../particles/grass_particle.hxx"
-#include "../particles/smoke_emitter.hxx"
-#include "../resource_manager.hxx"
-#include "../property_set.hxx"
-#include "../alist.hxx"
-#include "../vehicle_ai.hxx"
-#include "../ai_manager.hxx"
-#include "../collision_manager.hxx"
+#include "../assert.hpp"
+#include "../mine.hpp"
+#include "../alist.hpp"
+#include "../property_set.hpp"
+#include "../groundmap/ground_map.hpp"
+#include "../buildings/building_map.hpp"
+#include "../particles/smoke_particle.hpp"
+#include "../particles/sand_particle.hpp"
+#include "../particles/grass_particle.hpp"
+#include "../particles/smoke_emitter.hpp"
+#include "../resource_manager.hpp"
+#include "../property_set.hpp"
+#include "../alist.hpp"
+#include "../vehicle_ai.hpp"
+#include "../ai_manager.hpp"
+#include "../collision_manager.hpp"
 
-#include "turret.hxx"
-#include "tank.hxx"
+#include "turret.hpp"
+#include "tank.hpp"
 
 const float circle = 6.2831854f;
 

Modified: trunk/src/vehicles/tank.hpp
===================================================================
--- trunk/src/vehicles/tank.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/tank.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tank.hxx,v 1.18 2003/06/22 17:22:47 grumbel Exp $
+//  $Id: tank.hpp,v 1.18 2003/06/22 17:22:47 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,11 +22,11 @@
 
 #include <deque>
 #include <ClanLib/Display/sprite.h>
-#include "../vector2d.hxx"
+#include "../vector2d.hpp"
 
-#include "../mine.hxx"
-#include "../energie.hxx"
-#include "vehicle.hxx"
+#include "../mine.hpp"
+#include "../energie.hpp"
+#include "vehicle.hpp"
 
 /** \defgroup units Units - Player Controllable GameObjs */
 

Modified: trunk/src/vehicles/turret.cpp
===================================================================
--- trunk/src/vehicles/turret.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/turret.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,11 +1,11 @@
 #include <iostream>
-#include "../projectile.hxx"
-#include "../math.hxx"
-#include "../resource_manager.hxx"
-#include "../rocket.hxx"
-#include "../math.hxx"
-#include "tank.hxx"
-#include "turret.hxx"
+#include "../projectile.hpp"
+#include "../math.hpp"
+#include "../resource_manager.hpp"
+#include "../rocket.hpp"
+#include "../math.hpp"
+#include "tank.hpp"
+#include "turret.hpp"
 
 const float circle = 6.2831854f;
 

Modified: trunk/src/vehicles/turret.hpp
===================================================================
--- trunk/src/vehicles/turret.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/turret.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: tank.hxx,v 1.18 2003/06/22 17:22:47 grumbel Exp $
+//  $Id: tank.hpp,v 1.18 2003/06/22 17:22:47 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/vehicles/vehicle.cpp
===================================================================
--- trunk/src/vehicles/vehicle.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/vehicle.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vehicle.cxx,v 1.11 2003/10/31 23:24:41 grumbel Exp $
+//  $Id: vehicle.cpp,v 1.11 2003/10/31 23:24:41 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -18,8 +18,8 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <iostream>
-#include "../input/controller.hxx"
-#include "vehicle.hxx"
+#include "../input/controller.hpp"
+#include "vehicle.hpp"
 
 Vehicle::Vehicle ()
   : ammo (1.0f), 

Modified: trunk/src/vehicles/vehicle.hpp
===================================================================
--- trunk/src/vehicles/vehicle.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/vehicles/vehicle.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: vehicle.hxx,v 1.13 2003/06/18 21:43:50 grumbel Exp $
+//  $Id: vehicle.hpp,v 1.13 2003/06/18 21:43:50 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #ifndef VEHICLE_HH
 #define VEHICLE_HH
 
-#include "../unit.hxx"
+#include "../unit.hpp"
 
 class Controller;
 class Projectile;

Modified: trunk/src/view.cpp
===================================================================
--- trunk/src/view.cpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/view.cpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: view.cxx,v 1.19 2003/10/20 21:30:09 grumbel Exp $
+//  $Id: view.cpp,v 1.19 2003/10/20 21:30:09 grumbel Exp $
 //
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -22,10 +22,10 @@
 #include <ClanLib/Display/sprite.h>
 #include <ClanLib/Display/surface.h>
 
-#include "assert.hxx"
-#include "color.hxx"
-#include "math.hxx"
-#include "view.hxx"
+#include "assert.hpp"
+#include "color.hpp"
+#include "math.hpp"
+#include "view.hpp"
 
 View* View::current_ = 0;
 

Modified: trunk/src/view.hpp
===================================================================
--- trunk/src/view.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/view.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: view.hxx,v 1.14 2003/10/20 21:30:09 grumbel Exp $
+//  $Id: view.hpp,v 1.14 2003/10/20 21:30:09 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,10 +20,10 @@
 #ifndef VIEW_HH
 #define VIEW_HH
 
-#include "view_properties.hxx"
-#include "vector2d.hxx"
-#include "display/drawing_context.hxx"
-#include "display/scene_context.hxx"
+#include "view_properties.hpp"
+#include "vector2d.hpp"
+#include "display/drawing_context.hpp"
+#include "display/scene_context.hpp"
 
 class CL_Sprite;
 class Color;

Modified: trunk/src/view_plugin.hpp
===================================================================
--- trunk/src/view_plugin.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/view_plugin.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: view_plugin.hxx,v 1.3 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: view_plugin.hpp,v 1.3 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/view_properties.hpp
===================================================================
--- trunk/src/view_properties.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/view_properties.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: view_properties.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: view_properties.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>

Modified: trunk/src/world_builder.hpp
===================================================================
--- trunk/src/world_builder.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/world_builder.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: world_builder.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: world_builder.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -20,7 +20,7 @@
 #ifndef HEADER_WORLD_BUILDER_HXX
 #define HEADER_WORLD_BUILDER_HXX
 
-#include "alist.hxx"
+#include "alist.hpp"
 
 /** */
 class WorldBuilder

Modified: trunk/src/z_pos_layers.hpp
===================================================================
--- trunk/src/z_pos_layers.hpp	2009-01-27 11:19:20 UTC (rev 345)
+++ trunk/src/z_pos_layers.hpp	2009-01-27 11:27:04 UTC (rev 346)
@@ -1,4 +1,4 @@
-//  $Id: z_pos_layers.hxx,v 1.2 2003/06/03 14:11:22 grumbel Exp $
+//  $Id: z_pos_layers.hpp,v 1.2 2003/06/03 14:11:22 grumbel Exp $
 // 
 //  Feuerkraft - A Tank Battle Game
 //  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>



